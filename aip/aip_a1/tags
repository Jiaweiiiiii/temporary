!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
-fields	Makefile	/^	ctags -R --fields=+iaS --extra=+q$/;"	m
AIP_DATA_DDR	src/jz_aip_hal.h	/^	AIP_DATA_DDR = 0,$/;"	e	enum:__anon4
AIP_DATA_ORAM	src/jz_aip_hal.h	/^	AIP_DATA_ORAM,$/;"	e	enum:__anon4
AIP_DDRORORAM	src/jz_aip_hal.h	/^} AIP_DDRORORAM;$/;"	t	typeref:enum:__anon4
AIP_F_BGRA	include/model/aip_f_mdl.h	/^	AIP_F_BGRA                  = 2,$/;"	e	enum:__anon28
AIP_F_BGRA	test/include/model/aip_f_mdl.h	/^	AIP_F_BGRA                  = 2,$/;"	e	enum:__anon6
AIP_F_CFG	src/jz_aip_hal.h	97;"	d
AIP_F_CHAIN_BASE	src/jz_aip_hal.h	110;"	d
AIP_F_CHAIN_SIZE	src/jz_aip_hal.h	111;"	d
AIP_F_CTRL	src/jz_aip_hal.h	95;"	d
AIP_F_DATA_FORMAT	src/jz_aip_hal.h	/^} AIP_F_DATA_FORMAT;$/;"	t	typeref:enum:__anon2
AIP_F_DEV	src/jz_aip_hal.h	22;"	d
AIP_F_DST_SIZE	src/jz_aip_hal.h	108;"	d
AIP_F_DST_UV_BASE	src/jz_aip_hal.h	106;"	d
AIP_F_DST_Y_BASE	src/jz_aip_hal.h	105;"	d
AIP_F_FMU2_CHN32	include/model/aip_f_mdl.h	/^	AIP_F_FMU2_CHN32            = 3,$/;"	e	enum:__anon28
AIP_F_FMU2_CHN32	test/include/model/aip_f_mdl.h	/^	AIP_F_FMU2_CHN32            = 3,$/;"	e	enum:__anon6
AIP_F_FMU4_CHN32	include/model/aip_f_mdl.h	/^	AIP_F_FMU4_CHN32            = 4,$/;"	e	enum:__anon28
AIP_F_FMU4_CHN32	test/include/model/aip_f_mdl.h	/^	AIP_F_FMU4_CHN32            = 4,$/;"	e	enum:__anon6
AIP_F_FMU8_CHN16	include/model/aip_f_mdl.h	/^	AIP_F_FMU8_CHN16            = 6,$/;"	e	enum:__anon28
AIP_F_FMU8_CHN16	test/include/model/aip_f_mdl.h	/^	AIP_F_FMU8_CHN16            = 6,$/;"	e	enum:__anon6
AIP_F_FMU8_CHN32	include/model/aip_f_mdl.h	/^	AIP_F_FMU8_CHN32            = 5,$/;"	e	enum:__anon28
AIP_F_FMU8_CHN32	test/include/model/aip_f_mdl.h	/^	AIP_F_FMU8_CHN32            = 5,$/;"	e	enum:__anon6
AIP_F_IQR	src/jz_aip_hal.h	96;"	d
AIP_F_ISUM	src/jz_aip_hal.h	112;"	d
AIP_F_OSUM	src/jz_aip_hal.h	113;"	d
AIP_F_SCALE_X	src/jz_aip_hal.h	99;"	d
AIP_F_SCALE_Y	src/jz_aip_hal.h	100;"	d
AIP_F_SRC_SIZE	src/jz_aip_hal.h	107;"	d
AIP_F_SRC_UV_BASE	src/jz_aip_hal.h	104;"	d
AIP_F_SRC_Y_BASE	src/jz_aip_hal.h	103;"	d
AIP_F_STRIDE	src/jz_aip_hal.h	109;"	d
AIP_F_TIMEOUT	src/jz_aip_hal.h	98;"	d
AIP_F_TRANS_X	src/jz_aip_hal.h	101;"	d
AIP_F_TRANS_Y	src/jz_aip_hal.h	102;"	d
AIP_F_TYPE_BGRA	src/jz_aip_hal.h	/^	AIP_F_TYPE_BGRA,$/;"	e	enum:__anon2
AIP_F_TYPE_FEATURE2	src/jz_aip_hal.h	/^	AIP_F_TYPE_FEATURE2,$/;"	e	enum:__anon2
AIP_F_TYPE_FEATURE4	src/jz_aip_hal.h	/^	AIP_F_TYPE_FEATURE4,$/;"	e	enum:__anon2
AIP_F_TYPE_FEATURE8	src/jz_aip_hal.h	/^	AIP_F_TYPE_FEATURE8,$/;"	e	enum:__anon2
AIP_F_TYPE_FEATURE8_H	src/jz_aip_hal.h	/^	AIP_F_TYPE_FEATURE8_H,$/;"	e	enum:__anon2
AIP_F_TYPE_NV12	src/jz_aip_hal.h	/^	AIP_F_TYPE_NV12,$/;"	e	enum:__anon2
AIP_F_TYPE_UV	src/jz_aip_hal.h	/^	AIP_F_TYPE_UV,$/;"	e	enum:__anon2
AIP_F_TYPE_Y	src/jz_aip_hal.h	/^	AIP_F_TYPE_Y = 0,$/;"	e	enum:__anon2
AIP_F_Y	include/model/aip_f_mdl.h	/^	AIP_F_Y                     = 0,$/;"	e	enum:__anon28
AIP_F_Y	test/include/model/aip_f_mdl.h	/^	AIP_F_Y                     = 0,$/;"	e	enum:__anon6
AIP_F_new_C	include/model/aip_f_mdl.h	/^	AIP_F_new_C                 = 7,$/;"	e	enum:__anon28
AIP_F_new_C	test/include/model/aip_f_mdl.h	/^	AIP_F_new_C                 = 7,$/;"	e	enum:__anon6
AIP_F_old_C	include/model/aip_f_mdl.h	/^	AIP_F_old_C                 = 1,$/;"	e	enum:__anon28
AIP_F_old_C	test/include/model/aip_f_mdl.h	/^	AIP_F_old_C                 = 1,$/;"	e	enum:__anon6
AIP_LIB_VERSION	src/ingenic_aip.c	9;"	d	file:
AIP_NV2ABGR	src/jz_aip_hal.h	/^	AIP_NV2ABGR = 8,$/;"	e	enum:__anon3
AIP_NV2ABRG	src/jz_aip_hal.h	/^	AIP_NV2ABRG,$/;"	e	enum:__anon3
AIP_NV2AGBR	src/jz_aip_hal.h	/^	AIP_NV2AGBR,$/;"	e	enum:__anon3
AIP_NV2AGRB	src/jz_aip_hal.h	/^	AIP_NV2AGRB,$/;"	e	enum:__anon3
AIP_NV2ARBG	src/jz_aip_hal.h	/^	AIP_NV2ARBG,$/;"	e	enum:__anon3
AIP_NV2ARGB	src/jz_aip_hal.h	/^	AIP_NV2ARGB,$/;"	e	enum:__anon3
AIP_NV2BGRA	src/jz_aip_hal.h	/^	AIP_NV2BGRA = 0,$/;"	e	enum:__anon3
AIP_NV2BRGA	src/jz_aip_hal.h	/^	AIP_NV2BRGA,$/;"	e	enum:__anon3
AIP_NV2GBRA	src/jz_aip_hal.h	/^	AIP_NV2GBRA,$/;"	e	enum:__anon3
AIP_NV2GRBA	src/jz_aip_hal.h	/^	AIP_NV2GRBA,$/;"	e	enum:__anon3
AIP_NV2RBGA	src/jz_aip_hal.h	/^	AIP_NV2RBGA,$/;"	e	enum:__anon3
AIP_NV2RGBA	src/jz_aip_hal.h	/^	AIP_NV2RGBA,$/;"	e	enum:__anon3
AIP_P_CFG	src/jz_aip_hal.h	28;"	d
AIP_P_CFG_S	include/model/aip_p_mdl.h	/^typedef struct AIP_P_CFG_S {$/;"	s
AIP_P_CFG_S	include/model/aip_p_mdl.h	/^} AIP_P_CFG_S;$/;"	t	typeref:struct:AIP_P_CFG_S
AIP_P_CFG_S	test/include/model/aip_p_mdl.h	/^typedef struct AIP_P_CFG_S {$/;"	s
AIP_P_CFG_S	test/include/model/aip_p_mdl.h	/^} AIP_P_CFG_S;$/;"	t	typeref:struct:AIP_P_CFG_S
AIP_P_CFG_S::alpha	include/model/aip_p_mdl.h	/^    uint8_t                     alpha;$/;"	m	struct:AIP_P_CFG_S	access:public
AIP_P_CFG_S::alpha	test/include/model/aip_p_mdl.h	/^    uint8_t                     alpha;$/;"	m	struct:AIP_P_CFG_S	access:public
AIP_P_CFG_S::ax	include/model/aip_p_mdl.h	/^    int64_t                     ax;$/;"	m	struct:AIP_P_CFG_S	access:public
AIP_P_CFG_S::ax	test/include/model/aip_p_mdl.h	/^    int64_t                     ax;$/;"	m	struct:AIP_P_CFG_S	access:public
AIP_P_CFG_S::ay	include/model/aip_p_mdl.h	/^    int64_t                     ay;$/;"	m	struct:AIP_P_CFG_S	access:public
AIP_P_CFG_S::ay	test/include/model/aip_p_mdl.h	/^    int64_t                     ay;$/;"	m	struct:AIP_P_CFG_S	access:public
AIP_P_CFG_S::az	include/model/aip_p_mdl.h	/^    int64_t                     az;$/;"	m	struct:AIP_P_CFG_S	access:public
AIP_P_CFG_S::az	test/include/model/aip_p_mdl.h	/^    int64_t                     az;$/;"	m	struct:AIP_P_CFG_S	access:public
AIP_P_CFG_S::bw	include/model/aip_p_mdl.h	/^    uint32_t                    bw; \/\/0: 1byte; 1: 2bytes; 2: nv12; 3:4byte;$/;"	m	struct:AIP_P_CFG_S	access:public
AIP_P_CFG_S::bw	test/include/model/aip_p_mdl.h	/^    uint32_t                    bw; \/\/0: 1byte; 1: 2bytes; 2: nv12; 3:4byte;$/;"	m	struct:AIP_P_CFG_S	access:public
AIP_P_CFG_S::bx	include/model/aip_p_mdl.h	/^    int64_t                     bx;$/;"	m	struct:AIP_P_CFG_S	access:public
AIP_P_CFG_S::bx	test/include/model/aip_p_mdl.h	/^    int64_t                     bx;$/;"	m	struct:AIP_P_CFG_S	access:public
AIP_P_CFG_S::by	include/model/aip_p_mdl.h	/^    int64_t                     by;$/;"	m	struct:AIP_P_CFG_S	access:public
AIP_P_CFG_S::by	test/include/model/aip_p_mdl.h	/^    int64_t                     by;$/;"	m	struct:AIP_P_CFG_S	access:public
AIP_P_CFG_S::bz	include/model/aip_p_mdl.h	/^    int64_t                     bz;$/;"	m	struct:AIP_P_CFG_S	access:public
AIP_P_CFG_S::bz	test/include/model/aip_p_mdl.h	/^    int64_t                     bz;$/;"	m	struct:AIP_P_CFG_S	access:public
AIP_P_CFG_S::cx	include/model/aip_p_mdl.h	/^    int64_t                     cx;$/;"	m	struct:AIP_P_CFG_S	access:public
AIP_P_CFG_S::cx	test/include/model/aip_p_mdl.h	/^    int64_t                     cx;$/;"	m	struct:AIP_P_CFG_S	access:public
AIP_P_CFG_S::cy	include/model/aip_p_mdl.h	/^    int64_t                     cy;$/;"	m	struct:AIP_P_CFG_S	access:public
AIP_P_CFG_S::cy	test/include/model/aip_p_mdl.h	/^    int64_t                     cy;$/;"	m	struct:AIP_P_CFG_S	access:public
AIP_P_CFG_S::cz	include/model/aip_p_mdl.h	/^    int64_t                     cz;$/;"	m	struct:AIP_P_CFG_S	access:public
AIP_P_CFG_S::cz	test/include/model/aip_p_mdl.h	/^    int64_t                     cz;$/;"	m	struct:AIP_P_CFG_S	access:public
AIP_P_CFG_S::debug_en	include/model/aip_p_mdl.h	/^    bool                        debug_en;$/;"	m	struct:AIP_P_CFG_S	access:public
AIP_P_CFG_S::debug_en	test/include/model/aip_p_mdl.h	/^    bool                        debug_en;$/;"	m	struct:AIP_P_CFG_S	access:public
AIP_P_CFG_S::dh	include/model/aip_p_mdl.h	/^    uint32_t                    dh; \/\/dst height$/;"	m	struct:AIP_P_CFG_S	access:public
AIP_P_CFG_S::dh	test/include/model/aip_p_mdl.h	/^    uint32_t                    dh; \/\/dst height$/;"	m	struct:AIP_P_CFG_S	access:public
AIP_P_CFG_S::dst_base	include/model/aip_p_mdl.h	/^    uint8_t                     *dst_base;$/;"	m	struct:AIP_P_CFG_S	access:public
AIP_P_CFG_S::dst_base	test/include/model/aip_p_mdl.h	/^    uint8_t                     *dst_base;$/;"	m	struct:AIP_P_CFG_S	access:public
AIP_P_CFG_S::dst_stride	include/model/aip_p_mdl.h	/^    uint32_t                    dst_stride;$/;"	m	struct:AIP_P_CFG_S	access:public
AIP_P_CFG_S::dst_stride	test/include/model/aip_p_mdl.h	/^    uint32_t                    dst_stride;$/;"	m	struct:AIP_P_CFG_S	access:public
AIP_P_CFG_S::dummy_val	include/model/aip_p_mdl.h	/^    uint32_t                    dummy_val; \/\/NOTE: nv12: [7:0],Y; [23:16],U; [31:24],v;$/;"	m	struct:AIP_P_CFG_S	access:public
AIP_P_CFG_S::dummy_val	test/include/model/aip_p_mdl.h	/^    uint32_t                    dummy_val; \/\/NOTE: nv12: [7:0],Y; [23:16],U; [31:24],v;$/;"	m	struct:AIP_P_CFG_S	access:public
AIP_P_CFG_S::dw	include/model/aip_p_mdl.h	/^    uint32_t                    dw; \/\/dst width$/;"	m	struct:AIP_P_CFG_S	access:public
AIP_P_CFG_S::dw	test/include/model/aip_p_mdl.h	/^    uint32_t                    dw; \/\/dst width$/;"	m	struct:AIP_P_CFG_S	access:public
AIP_P_CFG_S::ofst	include/model/aip_p_mdl.h	/^    uint8_t                     ofst[2];$/;"	m	struct:AIP_P_CFG_S	access:public
AIP_P_CFG_S::ofst	test/include/model/aip_p_mdl.h	/^    uint8_t                     ofst[2];$/;"	m	struct:AIP_P_CFG_S	access:public
AIP_P_CFG_S::order	include/model/aip_p_mdl.h	/^    uint32_t                    order;$/;"	m	struct:AIP_P_CFG_S	access:public
AIP_P_CFG_S::order	test/include/model/aip_p_mdl.h	/^    uint32_t                    order;$/;"	m	struct:AIP_P_CFG_S	access:public
AIP_P_CFG_S::param	include/model/aip_p_mdl.h	/^    int32_t                     param[9];$/;"	m	struct:AIP_P_CFG_S	access:public
AIP_P_CFG_S::param	test/include/model/aip_p_mdl.h	/^    int32_t                     param[9];$/;"	m	struct:AIP_P_CFG_S	access:public
AIP_P_CFG_S::sh	include/model/aip_p_mdl.h	/^    uint32_t                    sh; \/\/src height$/;"	m	struct:AIP_P_CFG_S	access:public
AIP_P_CFG_S::sh	test/include/model/aip_p_mdl.h	/^    uint32_t                    sh; \/\/src height$/;"	m	struct:AIP_P_CFG_S	access:public
AIP_P_CFG_S::src_cbase	include/model/aip_p_mdl.h	/^    uint8_t                     *src_cbase;$/;"	m	struct:AIP_P_CFG_S	access:public
AIP_P_CFG_S::src_cbase	test/include/model/aip_p_mdl.h	/^    uint8_t                     *src_cbase;$/;"	m	struct:AIP_P_CFG_S	access:public
AIP_P_CFG_S::src_stride	include/model/aip_p_mdl.h	/^    uint32_t                    src_stride;$/;"	m	struct:AIP_P_CFG_S	access:public
AIP_P_CFG_S::src_stride	test/include/model/aip_p_mdl.h	/^    uint32_t                    src_stride;$/;"	m	struct:AIP_P_CFG_S	access:public
AIP_P_CFG_S::src_ybase	include/model/aip_p_mdl.h	/^    uint8_t                     *src_ybase;$/;"	m	struct:AIP_P_CFG_S	access:public
AIP_P_CFG_S::src_ybase	test/include/model/aip_p_mdl.h	/^    uint8_t                     *src_ybase;$/;"	m	struct:AIP_P_CFG_S	access:public
AIP_P_CFG_S::sw	include/model/aip_p_mdl.h	/^    uint32_t                    sw; \/\/src width$/;"	m	struct:AIP_P_CFG_S	access:public
AIP_P_CFG_S::sw	test/include/model/aip_p_mdl.h	/^    uint32_t                    sw; \/\/src width$/;"	m	struct:AIP_P_CFG_S	access:public
AIP_P_CHAIN_BASE	src/jz_aip_hal.h	64;"	d
AIP_P_CHAIN_SIZE	src/jz_aip_hal.h	65;"	d
AIP_P_COEF0	src/jz_aip_hal.h	39;"	d
AIP_P_COEF1	src/jz_aip_hal.h	40;"	d
AIP_P_COEF10	src/jz_aip_hal.h	49;"	d
AIP_P_COEF11	src/jz_aip_hal.h	50;"	d
AIP_P_COEF12	src/jz_aip_hal.h	51;"	d
AIP_P_COEF13	src/jz_aip_hal.h	52;"	d
AIP_P_COEF14	src/jz_aip_hal.h	53;"	d
AIP_P_COEF2	src/jz_aip_hal.h	41;"	d
AIP_P_COEF3	src/jz_aip_hal.h	42;"	d
AIP_P_COEF4	src/jz_aip_hal.h	43;"	d
AIP_P_COEF5	src/jz_aip_hal.h	44;"	d
AIP_P_COEF6	src/jz_aip_hal.h	45;"	d
AIP_P_COEF7	src/jz_aip_hal.h	46;"	d
AIP_P_COEF8	src/jz_aip_hal.h	47;"	d
AIP_P_COEF9	src/jz_aip_hal.h	48;"	d
AIP_P_CTRL	src/jz_aip_hal.h	26;"	d
AIP_P_DEV	src/jz_aip_hal.h	24;"	d
AIP_P_DST_BASE	src/jz_aip_hal.h	34;"	d
AIP_P_DST_SIZE	src/jz_aip_hal.h	36;"	d
AIP_P_DST_STRIDE	src/jz_aip_hal.h	35;"	d
AIP_P_DUMMY_VAL	src/jz_aip_hal.h	38;"	d
AIP_P_IQR	src/jz_aip_hal.h	27;"	d
AIP_P_ISUM	src/jz_aip_hal.h	66;"	d
AIP_P_MODE	src/jz_aip_hal.h	30;"	d
AIP_P_OFFSET	src/jz_aip_hal.h	63;"	d
AIP_P_OSUM	src/jz_aip_hal.h	67;"	d
AIP_P_PARAM0	src/jz_aip_hal.h	54;"	d
AIP_P_PARAM1	src/jz_aip_hal.h	55;"	d
AIP_P_PARAM2	src/jz_aip_hal.h	56;"	d
AIP_P_PARAM3	src/jz_aip_hal.h	57;"	d
AIP_P_PARAM4	src/jz_aip_hal.h	58;"	d
AIP_P_PARAM5	src/jz_aip_hal.h	59;"	d
AIP_P_PARAM6	src/jz_aip_hal.h	60;"	d
AIP_P_PARAM7	src/jz_aip_hal.h	61;"	d
AIP_P_PARAM8	src/jz_aip_hal.h	62;"	d
AIP_P_SRC_SIZE	src/jz_aip_hal.h	37;"	d
AIP_P_SRC_STRIDE	src/jz_aip_hal.h	33;"	d
AIP_P_SRC_UV_BASE	src/jz_aip_hal.h	32;"	d
AIP_P_SRC_Y_BASE	src/jz_aip_hal.h	31;"	d
AIP_P_TIMEOUT	src/jz_aip_hal.h	29;"	d
AIP_RGB_FORMAT	src/jz_aip_hal.h	/^} AIP_RGB_FORMAT;$/;"	t	typeref:enum:__anon3
AIP_SOFT_RESET_BIT	src/jz_aip_hal.h	115;"	d
AIP_TYPE	src/jz_aip_hal.h	/^} AIP_TYPE;$/;"	t	typeref:enum:__anon1
AIP_T_CFG	src/jz_aip_hal.h	71;"	d
AIP_T_CHAIN_BASE	src/jz_aip_hal.h	89;"	d
AIP_T_CHAIN_SIZE	src/jz_aip_hal.h	90;"	d
AIP_T_CTRL	src/jz_aip_hal.h	69;"	d
AIP_T_DEV	src/jz_aip_hal.h	23;"	d
AIP_T_DST_BASE	src/jz_aip_hal.h	76;"	d
AIP_T_IQR	src/jz_aip_hal.h	70;"	d
AIP_T_ISUM	src/jz_aip_hal.h	92;"	d
AIP_T_OFFSET	src/jz_aip_hal.h	88;"	d
AIP_T_OSUM	src/jz_aip_hal.h	93;"	d
AIP_T_PARAM0	src/jz_aip_hal.h	79;"	d
AIP_T_PARAM1	src/jz_aip_hal.h	80;"	d
AIP_T_PARAM2	src/jz_aip_hal.h	81;"	d
AIP_T_PARAM3	src/jz_aip_hal.h	82;"	d
AIP_T_PARAM4	src/jz_aip_hal.h	83;"	d
AIP_T_PARAM5	src/jz_aip_hal.h	84;"	d
AIP_T_PARAM6	src/jz_aip_hal.h	85;"	d
AIP_T_PARAM7	src/jz_aip_hal.h	86;"	d
AIP_T_PARAM8	src/jz_aip_hal.h	87;"	d
AIP_T_SRC_SIZE	src/jz_aip_hal.h	78;"	d
AIP_T_SRC_UV_BASE	src/jz_aip_hal.h	75;"	d
AIP_T_SRC_Y_BASE	src/jz_aip_hal.h	74;"	d
AIP_T_STRIDE	src/jz_aip_hal.h	77;"	d
AIP_T_TASK_LEN	src/jz_aip_hal.h	73;"	d
AIP_T_TASL_SKIP_BASE	src/jz_aip_hal.h	91;"	d
AIP_T_TIMEOUT	src/jz_aip_hal.h	72;"	d
BSCALER_IO_BASE	include/jz_aip/aie_mmap.h	29;"	d
BSCALER_IO_BASE	test/include/drivers/aie_mmap.h	27;"	d
BSCALER_IO_SIZE	include/jz_aip/aie_mmap.h	30;"	d
BSCALER_IO_SIZE	test/include/drivers/aie_mmap.h	28;"	d
BS_CSCA	test/model/bs_src.cc	13;"	d	file:
BS_DATA_ABGR	include/jz_aip/ingenic_aip.h	/^    BS_DATA_ABGR        = 17, \/\/001,0001$/;"	e	enum:__anon34
BS_DATA_ABRG	include/jz_aip/ingenic_aip.h	/^    BS_DATA_ABRG        = 23, \/\/001,0111$/;"	e	enum:__anon34
BS_DATA_AGBR	include/jz_aip/ingenic_aip.h	/^    BS_DATA_AGBR        = 19, \/\/001,0011$/;"	e	enum:__anon34
BS_DATA_AGRB	include/jz_aip/ingenic_aip.h	/^    BS_DATA_AGRB        = 25, \/\/001,1001$/;"	e	enum:__anon34
BS_DATA_ARBG	include/jz_aip/ingenic_aip.h	/^    BS_DATA_ARBG        = 21, \/\/001,0101$/;"	e	enum:__anon34
BS_DATA_ARGB	include/jz_aip/ingenic_aip.h	/^    BS_DATA_ARGB        = 27, \/\/001,1011$/;"	e	enum:__anon34
BS_DATA_BGRA	include/jz_aip/ingenic_aip.h	/^    BS_DATA_BGRA        = 1,  \/\/000,0001$/;"	e	enum:__anon34
BS_DATA_BRGA	include/jz_aip/ingenic_aip.h	/^    BS_DATA_BRGA        = 7,  \/\/000,0111$/;"	e	enum:__anon34
BS_DATA_FMU2	include/jz_aip/ingenic_aip.h	/^    BS_DATA_FMU2        = 33, \/\/010,0000$/;"	e	enum:__anon34
BS_DATA_FMU4	include/jz_aip/ingenic_aip.h	/^    BS_DATA_FMU4        = 65, \/\/100,0000$/;"	e	enum:__anon34
BS_DATA_FMU8	include/jz_aip/ingenic_aip.h	/^    BS_DATA_FMU8        = 97, \/\/110,0000$/;"	e	enum:__anon34
BS_DATA_FMU8_H	include/jz_aip/ingenic_aip.h	/^    BS_DATA_FMU8_H	= 98,$/;"	e	enum:__anon34
BS_DATA_GBRA	include/jz_aip/ingenic_aip.h	/^    BS_DATA_GBRA        = 3,  \/\/000,0011$/;"	e	enum:__anon34
BS_DATA_GRBA	include/jz_aip/ingenic_aip.h	/^    BS_DATA_GRBA        = 9,  \/\/000,1001$/;"	e	enum:__anon34
BS_DATA_NMEM	include/jz_aip/ingenic_aip.h	/^    BS_DATA_NMEM        = 0,\/\/data in nmem$/;"	e	enum:__anon35
BS_DATA_NV12	include/jz_aip/ingenic_aip.h	/^    BS_DATA_NV12		= 111,$/;"	e	enum:__anon34
BS_DATA_ORAM	include/jz_aip/ingenic_aip.h	/^    BS_DATA_ORAM        = 1,\/\/data in oram$/;"	e	enum:__anon35
BS_DATA_RBGA	include/jz_aip/ingenic_aip.h	/^    BS_DATA_RBGA        = 5,  \/\/000,0101$/;"	e	enum:__anon34
BS_DATA_RGBA	include/jz_aip/ingenic_aip.h	/^    BS_DATA_RGBA        = 11, \/\/000,1011$/;"	e	enum:__anon34
BS_DATA_RMEM	include/jz_aip/ingenic_aip.h	/^    BS_DATA_RMEM        = 2,\/\/data in rmem$/;"	e	enum:__anon35
BS_DATA_UV	include/jz_aip/ingenic_aip.h	/^    BS_DATA_UV		= 112,$/;"	e	enum:__anon34
BS_DATA_VBGR	include/jz_aip/ingenic_aip.h	/^    BS_DATA_VBGR        = 101, \/\/110,0000\/\/fixme$/;"	e	enum:__anon34
BS_DATA_VRGB	include/jz_aip/ingenic_aip.h	/^    BS_DATA_VRGB        = 102, \/\/110,0000\/\/fixme$/;"	e	enum:__anon34
BS_DATA_Y	include/jz_aip/ingenic_aip.h	/^    BS_DATA_Y        = 0,  \/\/000,0000$/;"	e	enum:__anon34
CC	test/sample/aip_affine/Makefile	/^CC = mips-linux-uclibc-g++$/;"	m
CC	test/sample/aip_covent/Makefile	/^CC = mips-linux-uclibc-g++$/;"	m
CC	test/sample/aip_perspective/Makefile	/^CC = mips-linux-uclibc-g++$/;"	m
CC	test/sample/aip_resize/Makefile	/^CC = mips-linux-uclibc-g++ $/;"	m
CLIP	test/model/bs_src.cc	12;"	d	file:
CV	include/3rd_party/Matrix.h	/^namespace CV {$/;"	n
CV	include/3rd_party/Rect.h	/^namespace CV {$/;"	n
CV	test/include/3rd_party/Matrix.h	/^namespace CV {$/;"	n
CV	test/include/3rd_party/Rect.h	/^namespace CV {$/;"	n
CV	test/model/3rd_party/Matrix.cc	/^namespace CV {$/;"	n	file:
CV::Matrix	include/3rd_party/Matrix.h	/^class Matrix {$/;"	c	namespace:CV
CV::Matrix	test/include/3rd_party/Matrix.h	/^class Matrix {$/;"	c	namespace:CV
CV::Matrix::ComputeInv	test/model/3rd_party/Matrix.cc	/^void Matrix::ComputeInv(float dst[9], const float src[9], double invDet, bool isPersp) {$/;"	f	class:CV::Matrix	signature:(float dst[9], const float src[9], double invDet, bool isPersp)
CV::Matrix::Concat	include/3rd_party/Matrix.h	/^    static Matrix Concat(const Matrix& a, const Matrix& b) {$/;"	f	class:CV::Matrix	access:public	signature:(const Matrix& a, const Matrix& b)
CV::Matrix::Concat	test/include/3rd_party/Matrix.h	/^    static Matrix Concat(const Matrix& a, const Matrix& b) {$/;"	f	class:CV::Matrix	access:public	signature:(const Matrix& a, const Matrix& b)
CV::Matrix::GetMapPtsProc	include/3rd_party/Matrix.h	/^    static MapPtsProc GetMapPtsProc(TypeMask mask) {$/;"	f	class:CV::Matrix	access:private	signature:(TypeMask mask)
CV::Matrix::GetMapPtsProc	test/include/3rd_party/Matrix.h	/^    static MapPtsProc GetMapPtsProc(TypeMask mask) {$/;"	f	class:CV::Matrix	access:private	signature:(TypeMask mask)
CV::Matrix::GetMapXYProc	include/3rd_party/Matrix.h	/^    static MapXYProc GetMapXYProc(TypeMask mask) {$/;"	f	class:CV::Matrix	access:private	signature:(TypeMask mask)
CV::Matrix::GetMapXYProc	test/include/3rd_party/Matrix.h	/^    static MapXYProc GetMapXYProc(TypeMask mask) {$/;"	f	class:CV::Matrix	access:private	signature:(TypeMask mask)
CV::Matrix::Identity_pts	test/model/3rd_party/Matrix.cc	/^void Matrix::Identity_pts(const Matrix& m, Point dst[], const Point src[], int count) {$/;"	f	class:CV::Matrix	signature:(const Matrix& m, Point dst[], const Point src[], int count)
CV::Matrix::Identity_xy	test/model/3rd_party/Matrix.cc	/^void Matrix::Identity_xy(const Matrix& m, float sx, float sy, Point* pt) {$/;"	f	class:CV::Matrix	signature:(const Matrix& m, float sx, float sy, Point* pt)
CV::Matrix::MakeAll	include/3rd_party/Matrix.h	/^    static Matrix MakeAll(float scaleX, float skewX, float transX, float skewY, float scaleY, float transY, float pers0,$/;"	f	class:CV::Matrix	access:public	signature:(float scaleX, float skewX, float transX, float skewY, float scaleY, float transY, float pers0, float pers1, float pers2)
CV::Matrix::MakeAll	test/include/3rd_party/Matrix.h	/^    static Matrix MakeAll(float scaleX, float skewX, float transX, float skewY, float scaleY, float transY, float pers0,$/;"	f	class:CV::Matrix	access:public	signature:(float scaleX, float skewX, float transX, float skewY, float scaleY, float transY, float pers0, float pers1, float pers2)
CV::Matrix::MakeRectToRect	include/3rd_party/Matrix.h	/^    static Matrix MakeRectToRect(const Rect& src, const Rect& dst, ScaleToFit stf) {$/;"	f	class:CV::Matrix	access:public	signature:(const Rect& src, const Rect& dst, ScaleToFit stf)
CV::Matrix::MakeRectToRect	test/include/3rd_party/Matrix.h	/^    static Matrix MakeRectToRect(const Rect& src, const Rect& dst, ScaleToFit stf) {$/;"	f	class:CV::Matrix	access:public	signature:(const Rect& src, const Rect& dst, ScaleToFit stf)
CV::Matrix::MakeScale	include/3rd_party/Matrix.h	/^    static Matrix MakeScale(float scale) {$/;"	f	class:CV::Matrix	access:public	signature:(float scale)
CV::Matrix::MakeScale	include/3rd_party/Matrix.h	/^    static Matrix MakeScale(float sx, float sy) {$/;"	f	class:CV::Matrix	access:public	signature:(float sx, float sy)
CV::Matrix::MakeScale	test/include/3rd_party/Matrix.h	/^    static Matrix MakeScale(float scale) {$/;"	f	class:CV::Matrix	access:public	signature:(float scale)
CV::Matrix::MakeScale	test/include/3rd_party/Matrix.h	/^    static Matrix MakeScale(float sx, float sy) {$/;"	f	class:CV::Matrix	access:public	signature:(float sx, float sy)
CV::Matrix::MakeTrans	include/3rd_party/Matrix.h	/^    static Matrix MakeTrans(float dx, float dy) {$/;"	f	class:CV::Matrix	access:public	signature:(float dx, float dy)
CV::Matrix::MakeTrans	test/include/3rd_party/Matrix.h	/^    static Matrix MakeTrans(float dx, float dy) {$/;"	f	class:CV::Matrix	access:public	signature:(float dx, float dy)
CV::Matrix::MapPtsProc	include/3rd_party/Matrix.h	/^    typedef void (*MapPtsProc)(const Matrix& mat, Point dst[], const Point src[], int count);$/;"	t	class:CV::Matrix	access:private
CV::Matrix::MapPtsProc	test/include/3rd_party/Matrix.h	/^    typedef void (*MapPtsProc)(const Matrix& mat, Point dst[], const Point src[], int count);$/;"	t	class:CV::Matrix	access:private
CV::Matrix::MapXYProc	include/3rd_party/Matrix.h	/^    typedef void (*MapXYProc)(const Matrix& mat, float x, float y, Point* result);$/;"	t	class:CV::Matrix	access:private
CV::Matrix::MapXYProc	test/include/3rd_party/Matrix.h	/^    typedef void (*MapXYProc)(const Matrix& mat, float x, float y, Point* result);$/;"	t	class:CV::Matrix	access:private
CV::Matrix::Matrix	include/3rd_party/Matrix.h	/^    Matrix() {$/;"	f	class:CV::Matrix	access:public	signature:()
CV::Matrix::Matrix	test/include/3rd_party/Matrix.h	/^    Matrix() {$/;"	f	class:CV::Matrix	access:public	signature:()
CV::Matrix::Persp_pts	test/model/3rd_party/Matrix.cc	/^void Matrix::Persp_pts(const Matrix& m, Point dst[], const Point src[], int count) {$/;"	f	class:CV::Matrix	signature:(const Matrix& m, Point dst[], const Point src[], int count)
CV::Matrix::Persp_xy	test/model/3rd_party/Matrix.cc	/^void Matrix::Persp_xy(const Matrix& m, float sx, float sy, Point* pt) {$/;"	f	class:CV::Matrix	signature:(const Matrix& m, float sx, float sy, Point* pt)
CV::Matrix::Poly2Proc	test/model/3rd_party/Matrix.cc	/^bool Matrix::Poly2Proc(const Point srcPt[], Matrix* dst) {$/;"	f	class:CV::Matrix	signature:(const Point srcPt[], Matrix* dst)
CV::Matrix::Poly3Proc	test/model/3rd_party/Matrix.cc	/^bool Matrix::Poly3Proc(const Point srcPt[], Matrix* dst) {$/;"	f	class:CV::Matrix	signature:(const Point srcPt[], Matrix* dst)
CV::Matrix::Poly4Proc	test/model/3rd_party/Matrix.cc	/^bool Matrix::Poly4Proc(const Point srcPt[], Matrix* dst) {$/;"	f	class:CV::Matrix	signature:(const Point srcPt[], Matrix* dst)
CV::Matrix::RotTrans_xy	test/model/3rd_party/Matrix.cc	/^void Matrix::RotTrans_xy(const Matrix& m, float sx, float sy, Point* pt) {$/;"	f	class:CV::Matrix	signature:(const Matrix& m, float sx, float sy, Point* pt)
CV::Matrix::Rot_xy	test/model/3rd_party/Matrix.cc	/^void Matrix::Rot_xy(const Matrix& m, float sx, float sy, Point* pt) {$/;"	f	class:CV::Matrix	signature:(const Matrix& m, float sx, float sy, Point* pt)
CV::Matrix::ScaleToFit	include/3rd_party/Matrix.h	/^    enum ScaleToFit {$/;"	g	class:CV::Matrix	access:public
CV::Matrix::ScaleToFit	test/include/3rd_party/Matrix.h	/^    enum ScaleToFit {$/;"	g	class:CV::Matrix	access:public
CV::Matrix::ScaleTrans_xy	test/model/3rd_party/Matrix.cc	/^void Matrix::ScaleTrans_xy(const Matrix& m, float sx, float sy, Point* pt) {$/;"	f	class:CV::Matrix	signature:(const Matrix& m, float sx, float sy, Point* pt)
CV::Matrix::Scale_xy	test/model/3rd_party/Matrix.cc	/^void Matrix::Scale_xy(const Matrix& m, float sx, float sy, Point* pt) {$/;"	f	class:CV::Matrix	signature:(const Matrix& m, float sx, float sy, Point* pt)
CV::Matrix::SetAffineIdentity	test/model/3rd_party/Matrix.cc	/^void Matrix::SetAffineIdentity(float affine[6]) {$/;"	f	class:CV::Matrix	signature:(float affine[6])
CV::Matrix::Trans_xy	test/model/3rd_party/Matrix.cc	/^void Matrix::Trans_xy(const Matrix& m, float sx, float sy, Point* pt) {$/;"	f	class:CV::Matrix	signature:(const Matrix& m, float sx, float sy, Point* pt)
CV::Matrix::TypeMask	include/3rd_party/Matrix.h	/^    enum TypeMask {$/;"	g	class:CV::Matrix	access:public
CV::Matrix::TypeMask	test/include/3rd_party/Matrix.h	/^    enum TypeMask {$/;"	g	class:CV::Matrix	access:public
CV::Matrix::asAffine	test/model/3rd_party/Matrix.cc	/^bool Matrix::asAffine(float affine[6]) const {$/;"	f	class:CV::Matrix	signature:(float affine[6]) const
CV::Matrix::cheapEqualTo	include/3rd_party/Matrix.h	/^    bool cheapEqualTo(const Matrix& m) const {$/;"	f	class:CV::Matrix	access:public	signature:(const Matrix& m) const
CV::Matrix::cheapEqualTo	test/include/3rd_party/Matrix.h	/^    bool cheapEqualTo(const Matrix& m) const {$/;"	f	class:CV::Matrix	access:public	signature:(const Matrix& m) const
CV::Matrix::clearTypeMask	include/3rd_party/Matrix.h	/^    void clearTypeMask(int mask) {$/;"	f	class:CV::Matrix	access:private	signature:(int mask)
CV::Matrix::clearTypeMask	test/include/3rd_party/Matrix.h	/^    void clearTypeMask(int mask) {$/;"	f	class:CV::Matrix	access:private	signature:(int mask)
CV::Matrix::computePerspectiveTypeMask	test/model/3rd_party/Matrix.cc	/^uint8_t Matrix::computePerspectiveTypeMask() const {$/;"	f	class:CV::Matrix	signature:() const
CV::Matrix::computeTypeMask	test/model/3rd_party/Matrix.cc	/^uint8_t Matrix::computeTypeMask() const {$/;"	f	class:CV::Matrix	signature:() const
CV::Matrix::dirtyMatrixTypeCache	include/3rd_party/Matrix.h	/^    void dirtyMatrixTypeCache() {$/;"	f	class:CV::Matrix	access:public	signature:()
CV::Matrix::dirtyMatrixTypeCache	test/include/3rd_party/Matrix.h	/^    void dirtyMatrixTypeCache() {$/;"	f	class:CV::Matrix	access:public	signature:()
CV::Matrix::dump	test/model/3rd_party/Matrix.cc	/^void Matrix::dump() const {$/;"	f	class:CV::Matrix	signature:() const
CV::Matrix::fMat	include/3rd_party/Matrix.h	/^    float fMat[9];$/;"	m	class:CV::Matrix	access:private
CV::Matrix::fMat	test/include/3rd_party/Matrix.h	/^    float fMat[9];$/;"	m	class:CV::Matrix	access:private
CV::Matrix::fTypeMask	include/3rd_party/Matrix.h	/^    mutable uint32_t fTypeMask;$/;"	m	class:CV::Matrix	access:private
CV::Matrix::fTypeMask	test/include/3rd_party/Matrix.h	/^    mutable uint32_t fTypeMask;$/;"	m	class:CV::Matrix	access:private
CV::Matrix::gMapPtsProcs	include/3rd_party/Matrix.h	/^    static const MapPtsProc gMapPtsProcs[];$/;"	m	class:CV::Matrix	access:private
CV::Matrix::gMapPtsProcs	test/include/3rd_party/Matrix.h	/^    static const MapPtsProc gMapPtsProcs[];$/;"	m	class:CV::Matrix	access:private
CV::Matrix::gMapXYProcs	include/3rd_party/Matrix.h	/^    static const MapXYProc gMapXYProcs[];$/;"	m	class:CV::Matrix	access:private
CV::Matrix::gMapXYProcs	test/include/3rd_party/Matrix.h	/^    static const MapXYProc gMapXYProcs[];$/;"	m	class:CV::Matrix	access:private
CV::Matrix::gMapXYProcs	test/model/3rd_party/Matrix.cc	/^const Matrix::MapXYProc Matrix::gMapXYProcs[] = {$/;"	m	class:CV::Matrix	file:
CV::Matrix::get	include/3rd_party/Matrix.h	/^    float get(int index) const {$/;"	f	class:CV::Matrix	access:public	signature:(int index) const
CV::Matrix::get	test/include/3rd_party/Matrix.h	/^    float get(int index) const {$/;"	f	class:CV::Matrix	access:public	signature:(int index) const
CV::Matrix::get9	include/3rd_party/Matrix.h	/^    void get9(float buffer[9]) const {$/;"	f	class:CV::Matrix	access:public	signature:(float buffer[9]) const
CV::Matrix::get9	test/include/3rd_party/Matrix.h	/^    void get9(float buffer[9]) const {$/;"	f	class:CV::Matrix	access:public	signature:(float buffer[9]) const
CV::Matrix::getMapPtsProc	include/3rd_party/Matrix.h	/^    MapPtsProc getMapPtsProc() const {$/;"	f	class:CV::Matrix	access:private	signature:() const
CV::Matrix::getMapPtsProc	test/include/3rd_party/Matrix.h	/^    MapPtsProc getMapPtsProc() const {$/;"	f	class:CV::Matrix	access:private	signature:() const
CV::Matrix::getMapXYProc	include/3rd_party/Matrix.h	/^    MapXYProc getMapXYProc() const {$/;"	f	class:CV::Matrix	access:private	signature:() const
CV::Matrix::getMapXYProc	test/include/3rd_party/Matrix.h	/^    MapXYProc getMapXYProc() const {$/;"	f	class:CV::Matrix	access:private	signature:() const
CV::Matrix::getPerspX	include/3rd_party/Matrix.h	/^    float getPerspX() const {$/;"	f	class:CV::Matrix	access:public	signature:() const
CV::Matrix::getPerspX	test/include/3rd_party/Matrix.h	/^    float getPerspX() const {$/;"	f	class:CV::Matrix	access:public	signature:() const
CV::Matrix::getPerspY	include/3rd_party/Matrix.h	/^    float getPerspY() const {$/;"	f	class:CV::Matrix	access:public	signature:() const
CV::Matrix::getPerspY	test/include/3rd_party/Matrix.h	/^    float getPerspY() const {$/;"	f	class:CV::Matrix	access:public	signature:() const
CV::Matrix::getPerspectiveTypeMaskOnly	include/3rd_party/Matrix.h	/^    TypeMask getPerspectiveTypeMaskOnly() const {$/;"	f	class:CV::Matrix	access:private	signature:() const
CV::Matrix::getPerspectiveTypeMaskOnly	test/include/3rd_party/Matrix.h	/^    TypeMask getPerspectiveTypeMaskOnly() const {$/;"	f	class:CV::Matrix	access:private	signature:() const
CV::Matrix::getScaleX	include/3rd_party/Matrix.h	/^    float getScaleX() const {$/;"	f	class:CV::Matrix	access:public	signature:() const
CV::Matrix::getScaleX	test/include/3rd_party/Matrix.h	/^    float getScaleX() const {$/;"	f	class:CV::Matrix	access:public	signature:() const
CV::Matrix::getScaleY	include/3rd_party/Matrix.h	/^    float getScaleY() const {$/;"	f	class:CV::Matrix	access:public	signature:() const
CV::Matrix::getScaleY	test/include/3rd_party/Matrix.h	/^    float getScaleY() const {$/;"	f	class:CV::Matrix	access:public	signature:() const
CV::Matrix::getSkewX	include/3rd_party/Matrix.h	/^    float getSkewX() const {$/;"	f	class:CV::Matrix	access:public	signature:() const
CV::Matrix::getSkewX	test/include/3rd_party/Matrix.h	/^    float getSkewX() const {$/;"	f	class:CV::Matrix	access:public	signature:() const
CV::Matrix::getSkewY	include/3rd_party/Matrix.h	/^    float getSkewY() const {$/;"	f	class:CV::Matrix	access:public	signature:() const
CV::Matrix::getSkewY	test/include/3rd_party/Matrix.h	/^    float getSkewY() const {$/;"	f	class:CV::Matrix	access:public	signature:() const
CV::Matrix::getTranslateX	include/3rd_party/Matrix.h	/^    float getTranslateX() const {$/;"	f	class:CV::Matrix	access:public	signature:() const
CV::Matrix::getTranslateX	test/include/3rd_party/Matrix.h	/^    float getTranslateX() const {$/;"	f	class:CV::Matrix	access:public	signature:() const
CV::Matrix::getTranslateY	include/3rd_party/Matrix.h	/^    float getTranslateY() const {$/;"	f	class:CV::Matrix	access:public	signature:() const
CV::Matrix::getTranslateY	test/include/3rd_party/Matrix.h	/^    float getTranslateY() const {$/;"	f	class:CV::Matrix	access:public	signature:() const
CV::Matrix::getType	include/3rd_party/Matrix.h	/^    TypeMask getType() const {$/;"	f	class:CV::Matrix	access:public	signature:() const
CV::Matrix::getType	test/include/3rd_party/Matrix.h	/^    TypeMask getType() const {$/;"	f	class:CV::Matrix	access:public	signature:() const
CV::Matrix::invert	include/3rd_party/Matrix.h	/^    bool invert(Matrix* inverse) const {$/;"	f	class:CV::Matrix	access:public	signature:(Matrix* inverse) const
CV::Matrix::invert	test/include/3rd_party/Matrix.h	/^    bool invert(Matrix* inverse) const {$/;"	f	class:CV::Matrix	access:public	signature:(Matrix* inverse) const
CV::Matrix::invertNonIdentity	test/model/3rd_party/Matrix.cc	/^bool Matrix::invertNonIdentity(Matrix* inv) const {$/;"	f	class:CV::Matrix	signature:(Matrix* inv) const
CV::Matrix::isIdentity	include/3rd_party/Matrix.h	/^    bool isIdentity() const {$/;"	f	class:CV::Matrix	access:public	signature:() const
CV::Matrix::isIdentity	test/include/3rd_party/Matrix.h	/^    bool isIdentity() const {$/;"	f	class:CV::Matrix	access:public	signature:() const
CV::Matrix::isScaleTranslate	include/3rd_party/Matrix.h	/^    bool isScaleTranslate() const {$/;"	f	class:CV::Matrix	access:public	signature:() const
CV::Matrix::isScaleTranslate	test/include/3rd_party/Matrix.h	/^    bool isScaleTranslate() const {$/;"	f	class:CV::Matrix	access:public	signature:() const
CV::Matrix::isTranslate	include/3rd_party/Matrix.h	/^    bool isTranslate() const {$/;"	f	class:CV::Matrix	access:public	signature:() const
CV::Matrix::isTranslate	test/include/3rd_party/Matrix.h	/^    bool isTranslate() const {$/;"	f	class:CV::Matrix	access:public	signature:() const
CV::Matrix::isTriviallyIdentity	include/3rd_party/Matrix.h	/^    bool isTriviallyIdentity() const {$/;"	f	class:CV::Matrix	access:private	signature:() const
CV::Matrix::isTriviallyIdentity	test/include/3rd_party/Matrix.h	/^    bool isTriviallyIdentity() const {$/;"	f	class:CV::Matrix	access:private	signature:() const
CV::Matrix::kAScaleX	include/3rd_party/Matrix.h	/^    static constexpr int kAScaleX = 0; \/\/!< horizontal scale factor$/;"	m	class:CV::Matrix	access:public
CV::Matrix::kAScaleX	test/include/3rd_party/Matrix.h	/^    static constexpr int kAScaleX = 0; \/\/!< horizontal scale factor$/;"	m	class:CV::Matrix	access:public
CV::Matrix::kAScaleY	include/3rd_party/Matrix.h	/^    static constexpr int kAScaleY = 3; \/\/!< vertical scale factor$/;"	m	class:CV::Matrix	access:public
CV::Matrix::kAScaleY	test/include/3rd_party/Matrix.h	/^    static constexpr int kAScaleY = 3; \/\/!< vertical scale factor$/;"	m	class:CV::Matrix	access:public
CV::Matrix::kASkewX	include/3rd_party/Matrix.h	/^    static constexpr int kASkewX  = 2; \/\/!< horizontal skew factor$/;"	m	class:CV::Matrix	access:public
CV::Matrix::kASkewX	test/include/3rd_party/Matrix.h	/^    static constexpr int kASkewX  = 2; \/\/!< horizontal skew factor$/;"	m	class:CV::Matrix	access:public
CV::Matrix::kASkewY	include/3rd_party/Matrix.h	/^    static constexpr int kASkewY  = 1; \/\/!< vertical skew factor$/;"	m	class:CV::Matrix	access:public
CV::Matrix::kASkewY	test/include/3rd_party/Matrix.h	/^    static constexpr int kASkewY  = 1; \/\/!< vertical skew factor$/;"	m	class:CV::Matrix	access:public
CV::Matrix::kATransX	include/3rd_party/Matrix.h	/^    static constexpr int kATransX = 4; \/\/!< horizontal translation$/;"	m	class:CV::Matrix	access:public
CV::Matrix::kATransX	test/include/3rd_party/Matrix.h	/^    static constexpr int kATransX = 4; \/\/!< horizontal translation$/;"	m	class:CV::Matrix	access:public
CV::Matrix::kATransY	include/3rd_party/Matrix.h	/^    static constexpr int kATransY = 5; \/\/!< vertical translation$/;"	m	class:CV::Matrix	access:public
CV::Matrix::kATransY	test/include/3rd_party/Matrix.h	/^    static constexpr int kATransY = 5; \/\/!< vertical translation$/;"	m	class:CV::Matrix	access:public
CV::Matrix::kAffine_Mask	include/3rd_party/Matrix.h	/^        kAffine_Mask      = 0x04, \/\/!< skew or rotate Matrix$/;"	e	enum:CV::Matrix::TypeMask
CV::Matrix::kAffine_Mask	test/include/3rd_party/Matrix.h	/^        kAffine_Mask      = 0x04, \/\/!< skew or rotate Matrix$/;"	e	enum:CV::Matrix::TypeMask
CV::Matrix::kAllMasks	include/3rd_party/Matrix.h	/^    static constexpr int kAllMasks =$/;"	m	class:CV::Matrix	access:private
CV::Matrix::kAllMasks	test/include/3rd_party/Matrix.h	/^    static constexpr int kAllMasks =$/;"	m	class:CV::Matrix	access:private
CV::Matrix::kCenter_ScaleToFit	include/3rd_party/Matrix.h	/^        kCenter_ScaleToFit, \/\/!< scales and aligns to center$/;"	e	enum:CV::Matrix::ScaleToFit
CV::Matrix::kCenter_ScaleToFit	test/include/3rd_party/Matrix.h	/^        kCenter_ScaleToFit, \/\/!< scales and aligns to center$/;"	e	enum:CV::Matrix::ScaleToFit
CV::Matrix::kEnd_ScaleToFit	include/3rd_party/Matrix.h	/^        kEnd_ScaleToFit,    \/\/!< scales and aligns to right and bottom$/;"	e	enum:CV::Matrix::ScaleToFit
CV::Matrix::kEnd_ScaleToFit	test/include/3rd_party/Matrix.h	/^        kEnd_ScaleToFit,    \/\/!< scales and aligns to right and bottom$/;"	e	enum:CV::Matrix::ScaleToFit
CV::Matrix::kFill_ScaleToFit	include/3rd_party/Matrix.h	/^        kFill_ScaleToFit,   \/\/!< scales in x and y to fill destination Rect$/;"	e	enum:CV::Matrix::ScaleToFit
CV::Matrix::kFill_ScaleToFit	test/include/3rd_party/Matrix.h	/^        kFill_ScaleToFit,   \/\/!< scales in x and y to fill destination Rect$/;"	e	enum:CV::Matrix::ScaleToFit
CV::Matrix::kIdentity_Mask	include/3rd_party/Matrix.h	/^        kIdentity_Mask    = 0,    \/\/!< identity Matrix; all bits clear$/;"	e	enum:CV::Matrix::TypeMask
CV::Matrix::kIdentity_Mask	test/include/3rd_party/Matrix.h	/^        kIdentity_Mask    = 0,    \/\/!< identity Matrix; all bits clear$/;"	e	enum:CV::Matrix::TypeMask
CV::Matrix::kMPersp0	include/3rd_party/Matrix.h	/^    static constexpr int kMPersp0 = 6; \/\/!< input x perspective factor$/;"	m	class:CV::Matrix	access:public
CV::Matrix::kMPersp0	test/include/3rd_party/Matrix.h	/^    static constexpr int kMPersp0 = 6; \/\/!< input x perspective factor$/;"	m	class:CV::Matrix	access:public
CV::Matrix::kMPersp1	include/3rd_party/Matrix.h	/^    static constexpr int kMPersp1 = 7; \/\/!< input y perspective factor$/;"	m	class:CV::Matrix	access:public
CV::Matrix::kMPersp1	test/include/3rd_party/Matrix.h	/^    static constexpr int kMPersp1 = 7; \/\/!< input y perspective factor$/;"	m	class:CV::Matrix	access:public
CV::Matrix::kMPersp2	include/3rd_party/Matrix.h	/^    static constexpr int kMPersp2 = 8; \/\/!< perspective bias$/;"	m	class:CV::Matrix	access:public
CV::Matrix::kMPersp2	test/include/3rd_party/Matrix.h	/^    static constexpr int kMPersp2 = 8; \/\/!< perspective bias$/;"	m	class:CV::Matrix	access:public
CV::Matrix::kMScaleX	include/3rd_party/Matrix.h	/^    static constexpr int kMScaleX = 0; \/\/!< horizontal scale factor$/;"	m	class:CV::Matrix	access:public
CV::Matrix::kMScaleX	test/include/3rd_party/Matrix.h	/^    static constexpr int kMScaleX = 0; \/\/!< horizontal scale factor$/;"	m	class:CV::Matrix	access:public
CV::Matrix::kMScaleY	include/3rd_party/Matrix.h	/^    static constexpr int kMScaleY = 4; \/\/!< vertical scale factor$/;"	m	class:CV::Matrix	access:public
CV::Matrix::kMScaleY	test/include/3rd_party/Matrix.h	/^    static constexpr int kMScaleY = 4; \/\/!< vertical scale factor$/;"	m	class:CV::Matrix	access:public
CV::Matrix::kMSkewX	include/3rd_party/Matrix.h	/^    static constexpr int kMSkewX  = 1; \/\/!< horizontal skew factor$/;"	m	class:CV::Matrix	access:public
CV::Matrix::kMSkewX	test/include/3rd_party/Matrix.h	/^    static constexpr int kMSkewX  = 1; \/\/!< horizontal skew factor$/;"	m	class:CV::Matrix	access:public
CV::Matrix::kMSkewY	include/3rd_party/Matrix.h	/^    static constexpr int kMSkewY  = 3; \/\/!< vertical skew factor$/;"	m	class:CV::Matrix	access:public
CV::Matrix::kMSkewY	test/include/3rd_party/Matrix.h	/^    static constexpr int kMSkewY  = 3; \/\/!< vertical skew factor$/;"	m	class:CV::Matrix	access:public
CV::Matrix::kMTransX	include/3rd_party/Matrix.h	/^    static constexpr int kMTransX = 2; \/\/!< horizontal translation$/;"	m	class:CV::Matrix	access:public
CV::Matrix::kMTransX	test/include/3rd_party/Matrix.h	/^    static constexpr int kMTransX = 2; \/\/!< horizontal translation$/;"	m	class:CV::Matrix	access:public
CV::Matrix::kMTransY	include/3rd_party/Matrix.h	/^    static constexpr int kMTransY = 5; \/\/!< vertical translation$/;"	m	class:CV::Matrix	access:public
CV::Matrix::kMTransY	test/include/3rd_party/Matrix.h	/^    static constexpr int kMTransY = 5; \/\/!< vertical translation$/;"	m	class:CV::Matrix	access:public
CV::Matrix::kORableMasks	include/3rd_party/Matrix.h	/^    static constexpr int kORableMasks = kTranslate_Mask | kScale_Mask | kAffine_Mask | kPerspective_Mask;$/;"	m	class:CV::Matrix	access:private
CV::Matrix::kORableMasks	test/include/3rd_party/Matrix.h	/^    static constexpr int kORableMasks = kTranslate_Mask | kScale_Mask | kAffine_Mask | kPerspective_Mask;$/;"	m	class:CV::Matrix	access:private
CV::Matrix::kOnlyPerspectiveValid_Mask	include/3rd_party/Matrix.h	/^    static constexpr int kOnlyPerspectiveValid_Mask = 0x40;$/;"	m	class:CV::Matrix	access:private
CV::Matrix::kOnlyPerspectiveValid_Mask	test/include/3rd_party/Matrix.h	/^    static constexpr int kOnlyPerspectiveValid_Mask = 0x40;$/;"	m	class:CV::Matrix	access:private
CV::Matrix::kPerspective_Mask	include/3rd_party/Matrix.h	/^        kPerspective_Mask = 0x08, \/\/!< perspective Matrix$/;"	e	enum:CV::Matrix::TypeMask
CV::Matrix::kPerspective_Mask	test/include/3rd_party/Matrix.h	/^        kPerspective_Mask = 0x08, \/\/!< perspective Matrix$/;"	e	enum:CV::Matrix::TypeMask
CV::Matrix::kRectStaysRect_Mask	include/3rd_party/Matrix.h	/^    static constexpr int kRectStaysRect_Mask = 0x10;$/;"	m	class:CV::Matrix	access:private
CV::Matrix::kRectStaysRect_Mask	test/include/3rd_party/Matrix.h	/^    static constexpr int kRectStaysRect_Mask = 0x10;$/;"	m	class:CV::Matrix	access:private
CV::Matrix::kScale_Mask	include/3rd_party/Matrix.h	/^        kScale_Mask       = 0x02, \/\/!< scale Matrix$/;"	e	enum:CV::Matrix::TypeMask
CV::Matrix::kScale_Mask	test/include/3rd_party/Matrix.h	/^        kScale_Mask       = 0x02, \/\/!< scale Matrix$/;"	e	enum:CV::Matrix::TypeMask
CV::Matrix::kStart_ScaleToFit	include/3rd_party/Matrix.h	/^        kStart_ScaleToFit,  \/\/!< scales and aligns to left and top$/;"	e	enum:CV::Matrix::ScaleToFit
CV::Matrix::kStart_ScaleToFit	test/include/3rd_party/Matrix.h	/^        kStart_ScaleToFit,  \/\/!< scales and aligns to left and top$/;"	e	enum:CV::Matrix::ScaleToFit
CV::Matrix::kTranslate_Mask	include/3rd_party/Matrix.h	/^        kTranslate_Mask   = 0x01, \/\/!< translation Matrix$/;"	e	enum:CV::Matrix::TypeMask
CV::Matrix::kTranslate_Mask	test/include/3rd_party/Matrix.h	/^        kTranslate_Mask   = 0x01, \/\/!< translation Matrix$/;"	e	enum:CV::Matrix::TypeMask
CV::Matrix::kUnknown_Mask	include/3rd_party/Matrix.h	/^    static constexpr int kUnknown_Mask = 0x80;$/;"	m	class:CV::Matrix	access:private
CV::Matrix::kUnknown_Mask	test/include/3rd_party/Matrix.h	/^    static constexpr int kUnknown_Mask = 0x80;$/;"	m	class:CV::Matrix	access:private
CV::Matrix::mapPoints	include/3rd_party/Matrix.h	/^    void mapPoints(Point dst[], const Point src[], int count) const {$/;"	f	class:CV::Matrix	access:public	signature:(Point dst[], const Point src[], int count) const
CV::Matrix::mapPoints	include/3rd_party/Matrix.h	/^    void mapPoints(Point pts[], int count) const {$/;"	f	class:CV::Matrix	access:public	signature:(Point pts[], int count) const
CV::Matrix::mapPoints	test/include/3rd_party/Matrix.h	/^    void mapPoints(Point dst[], const Point src[], int count) const {$/;"	f	class:CV::Matrix	access:public	signature:(Point dst[], const Point src[], int count) const
CV::Matrix::mapPoints	test/include/3rd_party/Matrix.h	/^    void mapPoints(Point pts[], int count) const {$/;"	f	class:CV::Matrix	access:public	signature:(Point pts[], int count) const
CV::Matrix::mapRect	include/3rd_party/Matrix.h	/^    Rect mapRect(const Rect& src) const {$/;"	f	class:CV::Matrix	access:public	signature:(const Rect& src) const
CV::Matrix::mapRect	include/3rd_party/Matrix.h	/^    bool mapRect(Rect* rect) const {$/;"	f	class:CV::Matrix	access:public	signature:(Rect* rect) const
CV::Matrix::mapRect	test/include/3rd_party/Matrix.h	/^    Rect mapRect(const Rect& src) const {$/;"	f	class:CV::Matrix	access:public	signature:(const Rect& src) const
CV::Matrix::mapRect	test/include/3rd_party/Matrix.h	/^    bool mapRect(Rect* rect) const {$/;"	f	class:CV::Matrix	access:public	signature:(Rect* rect) const
CV::Matrix::mapXY	include/3rd_party/Matrix.h	/^    Point mapXY(float x, float y) const {$/;"	f	class:CV::Matrix	access:public	signature:(float x, float y) const
CV::Matrix::mapXY	include/3rd_party/Matrix.h	/^    void mapXY(float x, float y, Point* result) const {$/;"	f	class:CV::Matrix	access:public	signature:(float x, float y, Point* result) const
CV::Matrix::mapXY	test/include/3rd_party/Matrix.h	/^    Point mapXY(float x, float y) const {$/;"	f	class:CV::Matrix	access:public	signature:(float x, float y) const
CV::Matrix::mapXY	test/include/3rd_party/Matrix.h	/^    void mapXY(float x, float y, Point* result) const {$/;"	f	class:CV::Matrix	access:public	signature:(float x, float y, Point* result) const
CV::Matrix::operator !=	include/3rd_party/Matrix.h	/^    friend bool operator!=(const Matrix& a, const Matrix& b) {$/;"	f	class:CV::Matrix	access:friend	signature:(const Matrix& a, const Matrix& b)
CV::Matrix::operator !=	test/include/3rd_party/Matrix.h	/^    friend bool operator!=(const Matrix& a, const Matrix& b) {$/;"	f	class:CV::Matrix	access:friend	signature:(const Matrix& a, const Matrix& b)
CV::Matrix::operator []	include/3rd_party/Matrix.h	/^    float operator[](int index) const {$/;"	f	class:CV::Matrix	access:public	signature:(int index) const
CV::Matrix::operator []	include/3rd_party/Matrix.h	/^    float& operator[](int index) {$/;"	f	class:CV::Matrix	access:public	signature:(int index)
CV::Matrix::operator []	test/include/3rd_party/Matrix.h	/^    float operator[](int index) const {$/;"	f	class:CV::Matrix	access:public	signature:(int index) const
CV::Matrix::operator []	test/include/3rd_party/Matrix.h	/^    float& operator[](int index) {$/;"	f	class:CV::Matrix	access:public	signature:(int index)
CV::Matrix::orTypeMask	include/3rd_party/Matrix.h	/^    void orTypeMask(int mask) {$/;"	f	class:CV::Matrix	access:private	signature:(int mask)
CV::Matrix::orTypeMask	test/include/3rd_party/Matrix.h	/^    void orTypeMask(int mask) {$/;"	f	class:CV::Matrix	access:private	signature:(int mask)
CV::Matrix::postConcat	test/model/3rd_party/Matrix.cc	/^void Matrix::postConcat(const Matrix& mat) {$/;"	f	class:CV::Matrix	signature:(const Matrix& mat)
CV::Matrix::postIDiv	test/model/3rd_party/Matrix.cc	/^bool Matrix::postIDiv(int divx, int divy) {$/;"	f	class:CV::Matrix	signature:(int divx, int divy)
CV::Matrix::postRotate	test/model/3rd_party/Matrix.cc	/^void Matrix::postRotate(float degrees) {$/;"	f	class:CV::Matrix	signature:(float degrees)
CV::Matrix::postRotate	test/model/3rd_party/Matrix.cc	/^void Matrix::postRotate(float degrees, float px, float py) {$/;"	f	class:CV::Matrix	signature:(float degrees, float px, float py)
CV::Matrix::postScale	test/model/3rd_party/Matrix.cc	/^void Matrix::postScale(float sx, float sy) {$/;"	f	class:CV::Matrix	signature:(float sx, float sy)
CV::Matrix::postScale	test/model/3rd_party/Matrix.cc	/^void Matrix::postScale(float sx, float sy, float px, float py) {$/;"	f	class:CV::Matrix	signature:(float sx, float sy, float px, float py)
CV::Matrix::postSkew	test/model/3rd_party/Matrix.cc	/^void Matrix::postSkew(float sx, float sy) {$/;"	f	class:CV::Matrix	signature:(float sx, float sy)
CV::Matrix::postSkew	test/model/3rd_party/Matrix.cc	/^void Matrix::postSkew(float sx, float sy, float px, float py) {$/;"	f	class:CV::Matrix	signature:(float sx, float sy, float px, float py)
CV::Matrix::postTranslate	test/model/3rd_party/Matrix.cc	/^void Matrix::postTranslate(float dx, float dy) {$/;"	f	class:CV::Matrix	signature:(float dx, float dy)
CV::Matrix::preConcat	test/model/3rd_party/Matrix.cc	/^void Matrix::preConcat(const Matrix& mat) {$/;"	f	class:CV::Matrix	signature:(const Matrix& mat)
CV::Matrix::preRotate	test/model/3rd_party/Matrix.cc	/^void Matrix::preRotate(float degrees) {$/;"	f	class:CV::Matrix	signature:(float degrees)
CV::Matrix::preRotate	test/model/3rd_party/Matrix.cc	/^void Matrix::preRotate(float degrees, float px, float py) {$/;"	f	class:CV::Matrix	signature:(float degrees, float px, float py)
CV::Matrix::preScale	test/model/3rd_party/Matrix.cc	/^void Matrix::preScale(float sx, float sy) {$/;"	f	class:CV::Matrix	signature:(float sx, float sy)
CV::Matrix::preScale	test/model/3rd_party/Matrix.cc	/^void Matrix::preScale(float sx, float sy, float px, float py) {$/;"	f	class:CV::Matrix	signature:(float sx, float sy, float px, float py)
CV::Matrix::preSkew	test/model/3rd_party/Matrix.cc	/^void Matrix::preSkew(float sx, float sy) {$/;"	f	class:CV::Matrix	signature:(float sx, float sy)
CV::Matrix::preSkew	test/model/3rd_party/Matrix.cc	/^void Matrix::preSkew(float sx, float sy, float px, float py) {$/;"	f	class:CV::Matrix	signature:(float sx, float sy, float px, float py)
CV::Matrix::preTranslate	test/model/3rd_party/Matrix.cc	/^void Matrix::preTranslate(float dx, float dy) {$/;"	f	class:CV::Matrix	signature:(float dx, float dy)
CV::Matrix::preservesAxisAlignment	include/3rd_party/Matrix.h	/^    bool preservesAxisAlignment() const {$/;"	f	class:CV::Matrix	access:public	signature:() const
CV::Matrix::preservesAxisAlignment	test/include/3rd_party/Matrix.h	/^    bool preservesAxisAlignment() const {$/;"	f	class:CV::Matrix	access:public	signature:() const
CV::Matrix::rectStaysRect	include/3rd_party/Matrix.h	/^    bool rectStaysRect() const {$/;"	f	class:CV::Matrix	access:public	signature:() const
CV::Matrix::rectStaysRect	test/include/3rd_party/Matrix.h	/^    bool rectStaysRect() const {$/;"	f	class:CV::Matrix	access:public	signature:() const
CV::Matrix::reset	test/model/3rd_party/Matrix.cc	/^void Matrix::reset() {$/;"	f	class:CV::Matrix	signature:()
CV::Matrix::set	include/3rd_party/Matrix.h	/^    void set(int index, float value) {$/;"	f	class:CV::Matrix	access:public	signature:(int index, float value)
CV::Matrix::set	test/include/3rd_party/Matrix.h	/^    void set(int index, float value) {$/;"	f	class:CV::Matrix	access:public	signature:(int index, float value)
CV::Matrix::set9	test/model/3rd_party/Matrix.cc	/^void Matrix::set9(const float buffer[]) {$/;"	f	class:CV::Matrix	signature:(const float buffer[])
CV::Matrix::setAffine	test/model/3rd_party/Matrix.cc	/^void Matrix::setAffine(const float buffer[]) {$/;"	f	class:CV::Matrix	signature:(const float buffer[])
CV::Matrix::setAll	include/3rd_party/Matrix.h	/^    void setAll(float scaleX, float skewX, float transX, float skewY, float scaleY, float transY, float persp0,$/;"	f	class:CV::Matrix	access:public	signature:(float scaleX, float skewX, float transX, float skewY, float scaleY, float transY, float persp0, float persp1, float persp2)
CV::Matrix::setAll	test/include/3rd_party/Matrix.h	/^    void setAll(float scaleX, float skewX, float transX, float skewY, float scaleY, float transY, float persp0,$/;"	f	class:CV::Matrix	access:public	signature:(float scaleX, float skewX, float transX, float skewY, float scaleY, float transY, float persp0, float persp1, float persp2)
CV::Matrix::setConcat	test/model/3rd_party/Matrix.cc	/^void Matrix::setConcat(const Matrix& a, const Matrix& b) {$/;"	f	class:CV::Matrix	signature:(const Matrix& a, const Matrix& b)
CV::Matrix::setIdentity	include/3rd_party/Matrix.h	/^    void setIdentity() {$/;"	f	class:CV::Matrix	access:public	signature:()
CV::Matrix::setIdentity	test/include/3rd_party/Matrix.h	/^    void setIdentity() {$/;"	f	class:CV::Matrix	access:public	signature:()
CV::Matrix::setPerspX	include/3rd_party/Matrix.h	/^    void setPerspX(float v) {$/;"	f	class:CV::Matrix	access:public	signature:(float v)
CV::Matrix::setPerspX	test/include/3rd_party/Matrix.h	/^    void setPerspX(float v) {$/;"	f	class:CV::Matrix	access:public	signature:(float v)
CV::Matrix::setPerspY	include/3rd_party/Matrix.h	/^    void setPerspY(float v) {$/;"	f	class:CV::Matrix	access:public	signature:(float v)
CV::Matrix::setPerspY	test/include/3rd_party/Matrix.h	/^    void setPerspY(float v) {$/;"	f	class:CV::Matrix	access:public	signature:(float v)
CV::Matrix::setPolyToPoly	test/model/3rd_party/Matrix.cc	/^bool Matrix::setPolyToPoly(const Point src[], const Point dst[], int count) {$/;"	f	class:CV::Matrix	signature:(const Point src[], const Point dst[], int count)
CV::Matrix::setRectToRect	test/model/3rd_party/Matrix.cc	/^bool Matrix::setRectToRect(const Rect& src, const Rect& dst, ScaleToFit align) {$/;"	f	class:CV::Matrix	signature:(const Rect& src, const Rect& dst, ScaleToFit align)
CV::Matrix::setRotate	test/model/3rd_party/Matrix.cc	/^void Matrix::setRotate(float degrees) {$/;"	f	class:CV::Matrix	signature:(float degrees)
CV::Matrix::setRotate	test/model/3rd_party/Matrix.cc	/^void Matrix::setRotate(float degrees, float px, float py) {$/;"	f	class:CV::Matrix	signature:(float degrees, float px, float py)
CV::Matrix::setScale	test/model/3rd_party/Matrix.cc	/^void Matrix::setScale(float sx, float sy) {$/;"	f	class:CV::Matrix	signature:(float sx, float sy)
CV::Matrix::setScale	test/model/3rd_party/Matrix.cc	/^void Matrix::setScale(float sx, float sy, float px, float py) {$/;"	f	class:CV::Matrix	signature:(float sx, float sy, float px, float py)
CV::Matrix::setScaleTranslate	include/3rd_party/Matrix.h	/^    void setScaleTranslate(float sx, float sy, float tx, float ty) {$/;"	f	class:CV::Matrix	access:public	signature:(float sx, float sy, float tx, float ty)
CV::Matrix::setScaleTranslate	test/include/3rd_party/Matrix.h	/^    void setScaleTranslate(float sx, float sy, float tx, float ty) {$/;"	f	class:CV::Matrix	access:public	signature:(float sx, float sy, float tx, float ty)
CV::Matrix::setScaleX	include/3rd_party/Matrix.h	/^    void setScaleX(float v) {$/;"	f	class:CV::Matrix	access:public	signature:(float v)
CV::Matrix::setScaleX	test/include/3rd_party/Matrix.h	/^    void setScaleX(float v) {$/;"	f	class:CV::Matrix	access:public	signature:(float v)
CV::Matrix::setScaleY	include/3rd_party/Matrix.h	/^    void setScaleY(float v) {$/;"	f	class:CV::Matrix	access:public	signature:(float v)
CV::Matrix::setScaleY	test/include/3rd_party/Matrix.h	/^    void setScaleY(float v) {$/;"	f	class:CV::Matrix	access:public	signature:(float v)
CV::Matrix::setSinCos	test/model/3rd_party/Matrix.cc	/^void Matrix::setSinCos(float sinV, float cosV) {$/;"	f	class:CV::Matrix	signature:(float sinV, float cosV)
CV::Matrix::setSinCos	test/model/3rd_party/Matrix.cc	/^void Matrix::setSinCos(float sinV, float cosV, float px, float py) {$/;"	f	class:CV::Matrix	signature:(float sinV, float cosV, float px, float py)
CV::Matrix::setSkew	test/model/3rd_party/Matrix.cc	/^void Matrix::setSkew(float sx, float sy) {$/;"	f	class:CV::Matrix	signature:(float sx, float sy)
CV::Matrix::setSkew	test/model/3rd_party/Matrix.cc	/^void Matrix::setSkew(float sx, float sy, float px, float py) {$/;"	f	class:CV::Matrix	signature:(float sx, float sy, float px, float py)
CV::Matrix::setSkewX	include/3rd_party/Matrix.h	/^    void setSkewX(float v) {$/;"	f	class:CV::Matrix	access:public	signature:(float v)
CV::Matrix::setSkewX	test/include/3rd_party/Matrix.h	/^    void setSkewX(float v) {$/;"	f	class:CV::Matrix	access:public	signature:(float v)
CV::Matrix::setSkewY	include/3rd_party/Matrix.h	/^    void setSkewY(float v) {$/;"	f	class:CV::Matrix	access:public	signature:(float v)
CV::Matrix::setSkewY	test/include/3rd_party/Matrix.h	/^    void setSkewY(float v) {$/;"	f	class:CV::Matrix	access:public	signature:(float v)
CV::Matrix::setTranslate	test/model/3rd_party/Matrix.cc	/^void Matrix::setTranslate(float dx, float dy) {$/;"	f	class:CV::Matrix	signature:(float dx, float dy)
CV::Matrix::setTranslateX	include/3rd_party/Matrix.h	/^    void setTranslateX(float v) {$/;"	f	class:CV::Matrix	access:public	signature:(float v)
CV::Matrix::setTranslateX	test/include/3rd_party/Matrix.h	/^    void setTranslateX(float v) {$/;"	f	class:CV::Matrix	access:public	signature:(float v)
CV::Matrix::setTranslateY	include/3rd_party/Matrix.h	/^    void setTranslateY(float v) {$/;"	f	class:CV::Matrix	access:public	signature:(float v)
CV::Matrix::setTranslateY	test/include/3rd_party/Matrix.h	/^    void setTranslateY(float v) {$/;"	f	class:CV::Matrix	access:public	signature:(float v)
CV::Matrix::setTypeMask	include/3rd_party/Matrix.h	/^    void setTypeMask(int mask) {$/;"	f	class:CV::Matrix	access:private	signature:(int mask)
CV::Matrix::setTypeMask	test/include/3rd_party/Matrix.h	/^    void setTypeMask(int mask) {$/;"	f	class:CV::Matrix	access:private	signature:(int mask)
CV::Matrix::updateTranslateMask	include/3rd_party/Matrix.h	/^    inline void updateTranslateMask() {$/;"	f	class:CV::Matrix	access:private	signature:()
CV::Matrix::updateTranslateMask	test/include/3rd_party/Matrix.h	/^    inline void updateTranslateMask() {$/;"	f	class:CV::Matrix	access:private	signature:()
CV::Point	include/3rd_party/Rect.h	/^struct Point {$/;"	s	namespace:CV
CV::Point	test/include/3rd_party/Rect.h	/^struct Point {$/;"	s	namespace:CV
CV::Point::fX	include/3rd_party/Rect.h	/^    float fX;$/;"	m	struct:CV::Point	access:public
CV::Point::fX	test/include/3rd_party/Rect.h	/^    float fX;$/;"	m	struct:CV::Point	access:public
CV::Point::fY	include/3rd_party/Rect.h	/^    float fY;$/;"	m	struct:CV::Point	access:public
CV::Point::fY	test/include/3rd_party/Rect.h	/^    float fY;$/;"	m	struct:CV::Point	access:public
CV::Point::set	include/3rd_party/Rect.h	/^    void set(float x, float y) {$/;"	f	struct:CV::Point	access:public	signature:(float x, float y)
CV::Point::set	test/include/3rd_party/Rect.h	/^    void set(float x, float y) {$/;"	f	struct:CV::Point	access:public	signature:(float x, float y)
CV::Rect	include/3rd_party/Rect.h	/^struct Rect {$/;"	s	namespace:CV
CV::Rect	test/include/3rd_party/Rect.h	/^struct Rect {$/;"	s	namespace:CV
CV::Rect::Intersects	include/3rd_party/Rect.h	/^    static bool Intersects(const Rect& a, const Rect& b) {$/;"	f	struct:CV::Rect	access:public	signature:(const Rect& a, const Rect& b)
CV::Rect::Intersects	include/3rd_party/Rect.h	/^    static bool Intersects(float al, float at, float ar, float ab, float bl, float bt, float br, float bb) {$/;"	f	struct:CV::Rect	access:private	signature:(float al, float at, float ar, float ab, float bl, float bt, float br, float bb)
CV::Rect::Intersects	test/include/3rd_party/Rect.h	/^    static bool Intersects(const Rect& a, const Rect& b) {$/;"	f	struct:CV::Rect	access:public	signature:(const Rect& a, const Rect& b)
CV::Rect::Intersects	test/include/3rd_party/Rect.h	/^    static bool Intersects(float al, float at, float ar, float ab, float bl, float bt, float br, float bb) {$/;"	f	struct:CV::Rect	access:private	signature:(float al, float at, float ar, float ab, float bl, float bt, float br, float bb)
CV::Rect::MakeEmpty	include/3rd_party/Rect.h	/^    static constexpr Rect MakeEmpty() {$/;"	f	struct:CV::Rect	access:public	signature:()
CV::Rect::MakeEmpty	test/include/3rd_party/Rect.h	/^    static constexpr Rect MakeEmpty() {$/;"	f	struct:CV::Rect	access:public	signature:()
CV::Rect::MakeIWH	include/3rd_party/Rect.h	/^    static Rect MakeIWH(int w, int h) {$/;"	f	struct:CV::Rect	access:public	signature:(int w, int h)
CV::Rect::MakeIWH	test/include/3rd_party/Rect.h	/^    static Rect MakeIWH(int w, int h) {$/;"	f	struct:CV::Rect	access:public	signature:(int w, int h)
CV::Rect::MakeLTRB	include/3rd_party/Rect.h	/^    static constexpr Rect MakeLTRB(float l, float t, float r, float b) {$/;"	f	struct:CV::Rect	access:public	signature:(float l, float t, float r, float b)
CV::Rect::MakeLTRB	test/include/3rd_party/Rect.h	/^    static constexpr Rect MakeLTRB(float l, float t, float r, float b) {$/;"	f	struct:CV::Rect	access:public	signature:(float l, float t, float r, float b)
CV::Rect::MakeLargest	include/3rd_party/Rect.h	/^    static Rect MakeLargest() {$/;"	f	struct:CV::Rect	access:public	signature:()
CV::Rect::MakeLargest	test/include/3rd_party/Rect.h	/^    static Rect MakeLargest() {$/;"	f	struct:CV::Rect	access:public	signature:()
CV::Rect::MakeWH	include/3rd_party/Rect.h	/^    static constexpr Rect MakeWH(float w, float h) {$/;"	f	struct:CV::Rect	access:public	signature:(float w, float h)
CV::Rect::MakeWH	test/include/3rd_party/Rect.h	/^    static constexpr Rect MakeWH(float w, float h) {$/;"	f	struct:CV::Rect	access:public	signature:(float w, float h)
CV::Rect::MakeXYWH	include/3rd_party/Rect.h	/^    static constexpr Rect MakeXYWH(float x, float y, float w, float h) {$/;"	f	struct:CV::Rect	access:public	signature:(float x, float y, float w, float h)
CV::Rect::MakeXYWH	test/include/3rd_party/Rect.h	/^    static constexpr Rect MakeXYWH(float x, float y, float w, float h) {$/;"	f	struct:CV::Rect	access:public	signature:(float x, float y, float w, float h)
CV::Rect::asScalars	include/3rd_party/Rect.h	/^    const float* asScalars() const {$/;"	f	struct:CV::Rect	access:public	signature:() const
CV::Rect::asScalars	test/include/3rd_party/Rect.h	/^    const float* asScalars() const {$/;"	f	struct:CV::Rect	access:public	signature:() const
CV::Rect::bottom	include/3rd_party/Rect.h	/^    float bottom() const {$/;"	f	struct:CV::Rect	access:public	signature:() const
CV::Rect::bottom	test/include/3rd_party/Rect.h	/^    float bottom() const {$/;"	f	struct:CV::Rect	access:public	signature:() const
CV::Rect::centerX	include/3rd_party/Rect.h	/^    float centerX() const {$/;"	f	struct:CV::Rect	access:public	signature:() const
CV::Rect::centerX	test/include/3rd_party/Rect.h	/^    float centerX() const {$/;"	f	struct:CV::Rect	access:public	signature:() const
CV::Rect::centerY	include/3rd_party/Rect.h	/^    float centerY() const {$/;"	f	struct:CV::Rect	access:public	signature:() const
CV::Rect::centerY	test/include/3rd_party/Rect.h	/^    float centerY() const {$/;"	f	struct:CV::Rect	access:public	signature:() const
CV::Rect::contains	include/3rd_party/Rect.h	/^    bool contains(float x, float y) const {$/;"	f	struct:CV::Rect	access:public	signature:(float x, float y) const
CV::Rect::contains	test/include/3rd_party/Rect.h	/^    bool contains(float x, float y) const {$/;"	f	struct:CV::Rect	access:public	signature:(float x, float y) const
CV::Rect::fBottom	include/3rd_party/Rect.h	/^    float fBottom; \/\/!< larger y-axis bounds$/;"	m	struct:CV::Rect	access:public
CV::Rect::fBottom	test/include/3rd_party/Rect.h	/^    float fBottom; \/\/!< larger y-axis bounds$/;"	m	struct:CV::Rect	access:public
CV::Rect::fLeft	include/3rd_party/Rect.h	/^    float fLeft;   \/\/!< smaller x-axis bounds$/;"	m	struct:CV::Rect	access:public
CV::Rect::fLeft	test/include/3rd_party/Rect.h	/^    float fLeft;   \/\/!< smaller x-axis bounds$/;"	m	struct:CV::Rect	access:public
CV::Rect::fRight	include/3rd_party/Rect.h	/^    float fRight;  \/\/!< larger x-axis bounds$/;"	m	struct:CV::Rect	access:public
CV::Rect::fRight	test/include/3rd_party/Rect.h	/^    float fRight;  \/\/!< larger x-axis bounds$/;"	m	struct:CV::Rect	access:public
CV::Rect::fTop	include/3rd_party/Rect.h	/^    float fTop;    \/\/!< smaller y-axis bounds$/;"	m	struct:CV::Rect	access:public
CV::Rect::fTop	test/include/3rd_party/Rect.h	/^    float fTop;    \/\/!< smaller y-axis bounds$/;"	m	struct:CV::Rect	access:public
CV::Rect::height	include/3rd_party/Rect.h	/^    float height() const {$/;"	f	struct:CV::Rect	access:public	signature:() const
CV::Rect::height	test/include/3rd_party/Rect.h	/^    float height() const {$/;"	f	struct:CV::Rect	access:public	signature:() const
CV::Rect::inset	include/3rd_party/Rect.h	/^    void inset(float dx, float dy) {$/;"	f	struct:CV::Rect	access:public	signature:(float dx, float dy)
CV::Rect::inset	test/include/3rd_party/Rect.h	/^    void inset(float dx, float dy) {$/;"	f	struct:CV::Rect	access:public	signature:(float dx, float dy)
CV::Rect::intersects	include/3rd_party/Rect.h	/^    bool intersects(const Rect& r) const {$/;"	f	struct:CV::Rect	access:public	signature:(const Rect& r) const
CV::Rect::intersects	include/3rd_party/Rect.h	/^    bool intersects(float left, float top, float right, float bottom) const {$/;"	f	struct:CV::Rect	access:public	signature:(float left, float top, float right, float bottom) const
CV::Rect::intersects	test/include/3rd_party/Rect.h	/^    bool intersects(const Rect& r) const {$/;"	f	struct:CV::Rect	access:public	signature:(const Rect& r) const
CV::Rect::intersects	test/include/3rd_party/Rect.h	/^    bool intersects(float left, float top, float right, float bottom) const {$/;"	f	struct:CV::Rect	access:public	signature:(float left, float top, float right, float bottom) const
CV::Rect::isEmpty	include/3rd_party/Rect.h	/^    bool isEmpty() const {$/;"	f	struct:CV::Rect	access:public	signature:() const
CV::Rect::isEmpty	test/include/3rd_party/Rect.h	/^    bool isEmpty() const {$/;"	f	struct:CV::Rect	access:public	signature:() const
CV::Rect::isSorted	include/3rd_party/Rect.h	/^    bool isSorted() const {$/;"	f	struct:CV::Rect	access:public	signature:() const
CV::Rect::isSorted	test/include/3rd_party/Rect.h	/^    bool isSorted() const {$/;"	f	struct:CV::Rect	access:public	signature:() const
CV::Rect::iset	include/3rd_party/Rect.h	/^    void iset(int left, int top, int right, int bottom) {$/;"	f	struct:CV::Rect	access:public	signature:(int left, int top, int right, int bottom)
CV::Rect::iset	test/include/3rd_party/Rect.h	/^    void iset(int left, int top, int right, int bottom) {$/;"	f	struct:CV::Rect	access:public	signature:(int left, int top, int right, int bottom)
CV::Rect::isetWH	include/3rd_party/Rect.h	/^    void isetWH(int width, int height) {$/;"	f	struct:CV::Rect	access:public	signature:(int width, int height)
CV::Rect::isetWH	test/include/3rd_party/Rect.h	/^    void isetWH(int width, int height) {$/;"	f	struct:CV::Rect	access:public	signature:(int width, int height)
CV::Rect::joinNonEmptyArg	include/3rd_party/Rect.h	/^    void joinNonEmptyArg(const Rect& r) {$/;"	f	struct:CV::Rect	access:public	signature:(const Rect& r)
CV::Rect::joinNonEmptyArg	test/include/3rd_party/Rect.h	/^    void joinNonEmptyArg(const Rect& r) {$/;"	f	struct:CV::Rect	access:public	signature:(const Rect& r)
CV::Rect::joinPossiblyEmptyRect	include/3rd_party/Rect.h	/^    void joinPossiblyEmptyRect(const Rect& r) {$/;"	f	struct:CV::Rect	access:public	signature:(const Rect& r)
CV::Rect::joinPossiblyEmptyRect	test/include/3rd_party/Rect.h	/^    void joinPossiblyEmptyRect(const Rect& r) {$/;"	f	struct:CV::Rect	access:public	signature:(const Rect& r)
CV::Rect::left	include/3rd_party/Rect.h	/^    float left() const {$/;"	f	struct:CV::Rect	access:public	signature:() const
CV::Rect::left	test/include/3rd_party/Rect.h	/^    float left() const {$/;"	f	struct:CV::Rect	access:public	signature:() const
CV::Rect::makeInset	include/3rd_party/Rect.h	/^    Rect makeInset(float dx, float dy) const {$/;"	f	struct:CV::Rect	access:public	signature:(float dx, float dy) const
CV::Rect::makeInset	test/include/3rd_party/Rect.h	/^    Rect makeInset(float dx, float dy) const {$/;"	f	struct:CV::Rect	access:public	signature:(float dx, float dy) const
CV::Rect::makeOffset	include/3rd_party/Rect.h	/^    Rect makeOffset(float dx, float dy) const {$/;"	f	struct:CV::Rect	access:public	signature:(float dx, float dy) const
CV::Rect::makeOffset	test/include/3rd_party/Rect.h	/^    Rect makeOffset(float dx, float dy) const {$/;"	f	struct:CV::Rect	access:public	signature:(float dx, float dy) const
CV::Rect::makeOutset	include/3rd_party/Rect.h	/^    Rect makeOutset(float dx, float dy) const {$/;"	f	struct:CV::Rect	access:public	signature:(float dx, float dy) const
CV::Rect::makeOutset	test/include/3rd_party/Rect.h	/^    Rect makeOutset(float dx, float dy) const {$/;"	f	struct:CV::Rect	access:public	signature:(float dx, float dy) const
CV::Rect::makeSorted	include/3rd_party/Rect.h	/^    Rect makeSorted() const {$/;"	f	struct:CV::Rect	access:public	signature:() const
CV::Rect::makeSorted	test/include/3rd_party/Rect.h	/^    Rect makeSorted() const {$/;"	f	struct:CV::Rect	access:public	signature:() const
CV::Rect::offset	include/3rd_party/Rect.h	/^    void offset(float dx, float dy) {$/;"	f	struct:CV::Rect	access:public	signature:(float dx, float dy)
CV::Rect::offset	test/include/3rd_party/Rect.h	/^    void offset(float dx, float dy) {$/;"	f	struct:CV::Rect	access:public	signature:(float dx, float dy)
CV::Rect::offsetTo	include/3rd_party/Rect.h	/^    void offsetTo(float newX, float newY) {$/;"	f	struct:CV::Rect	access:public	signature:(float newX, float newY)
CV::Rect::offsetTo	test/include/3rd_party/Rect.h	/^    void offsetTo(float newX, float newY) {$/;"	f	struct:CV::Rect	access:public	signature:(float newX, float newY)
CV::Rect::outset	include/3rd_party/Rect.h	/^    void outset(float dx, float dy) {$/;"	f	struct:CV::Rect	access:public	signature:(float dx, float dy)
CV::Rect::outset	test/include/3rd_party/Rect.h	/^    void outset(float dx, float dy) {$/;"	f	struct:CV::Rect	access:public	signature:(float dx, float dy)
CV::Rect::right	include/3rd_party/Rect.h	/^    float right() const {$/;"	f	struct:CV::Rect	access:public	signature:() const
CV::Rect::right	test/include/3rd_party/Rect.h	/^    float right() const {$/;"	f	struct:CV::Rect	access:public	signature:() const
CV::Rect::set	include/3rd_party/Rect.h	/^    void set(float left, float top, float right, float bottom) {$/;"	f	struct:CV::Rect	access:public	signature:(float left, float top, float right, float bottom)
CV::Rect::set	test/include/3rd_party/Rect.h	/^    void set(float left, float top, float right, float bottom) {$/;"	f	struct:CV::Rect	access:public	signature:(float left, float top, float right, float bottom)
CV::Rect::setEmpty	include/3rd_party/Rect.h	/^    void setEmpty() {$/;"	f	struct:CV::Rect	access:public	signature:()
CV::Rect::setEmpty	test/include/3rd_party/Rect.h	/^    void setEmpty() {$/;"	f	struct:CV::Rect	access:public	signature:()
CV::Rect::setLTRB	include/3rd_party/Rect.h	/^    void setLTRB(float left, float top, float right, float bottom) {$/;"	f	struct:CV::Rect	access:public	signature:(float left, float top, float right, float bottom)
CV::Rect::setLTRB	test/include/3rd_party/Rect.h	/^    void setLTRB(float left, float top, float right, float bottom) {$/;"	f	struct:CV::Rect	access:public	signature:(float left, float top, float right, float bottom)
CV::Rect::setWH	include/3rd_party/Rect.h	/^    void setWH(float width, float height) {$/;"	f	struct:CV::Rect	access:public	signature:(float width, float height)
CV::Rect::setWH	test/include/3rd_party/Rect.h	/^    void setWH(float width, float height) {$/;"	f	struct:CV::Rect	access:public	signature:(float width, float height)
CV::Rect::setXYWH	include/3rd_party/Rect.h	/^    void setXYWH(float x, float y, float width, float height) {$/;"	f	struct:CV::Rect	access:public	signature:(float x, float y, float width, float height)
CV::Rect::setXYWH	test/include/3rd_party/Rect.h	/^    void setXYWH(float x, float y, float width, float height) {$/;"	f	struct:CV::Rect	access:public	signature:(float x, float y, float width, float height)
CV::Rect::sort	include/3rd_party/Rect.h	/^    void sort() {$/;"	f	struct:CV::Rect	access:public	signature:()
CV::Rect::sort	test/include/3rd_party/Rect.h	/^    void sort() {$/;"	f	struct:CV::Rect	access:public	signature:()
CV::Rect::top	include/3rd_party/Rect.h	/^    float top() const {$/;"	f	struct:CV::Rect	access:public	signature:() const
CV::Rect::top	test/include/3rd_party/Rect.h	/^    float top() const {$/;"	f	struct:CV::Rect	access:public	signature:() const
CV::Rect::width	include/3rd_party/Rect.h	/^    float width() const {$/;"	f	struct:CV::Rect	access:public	signature:() const
CV::Rect::width	test/include/3rd_party/Rect.h	/^    float width() const {$/;"	f	struct:CV::Rect	access:public	signature:() const
CV::Rect::x	include/3rd_party/Rect.h	/^    float x() const {$/;"	f	struct:CV::Rect	access:public	signature:() const
CV::Rect::x	test/include/3rd_party/Rect.h	/^    float x() const {$/;"	f	struct:CV::Rect	access:public	signature:() const
CV::Rect::y	include/3rd_party/Rect.h	/^    float y() const {$/;"	f	struct:CV::Rect	access:public	signature:() const
CV::Rect::y	test/include/3rd_party/Rect.h	/^    float y() const {$/;"	f	struct:CV::Rect	access:public	signature:() const
CV::SkScalarAs2sCompliment	test/model/3rd_party/Matrix.cc	/^static inline int32_t SkScalarAs2sCompliment(float xFloat) {$/;"	f	namespace:CV	signature:(float xFloat)
CV::checkForZero	test/model/3rd_party/Matrix.cc	/^static inline bool checkForZero(float x) {$/;"	f	namespace:CV	signature:(float x)
CV::dcross	test/model/3rd_party/Matrix.cc	/^static inline double dcross(double a, double b, double c, double d) {$/;"	f	namespace:CV	signature:(double a, double b, double c, double d)
CV::dcross_dscale	test/model/3rd_party/Matrix.cc	/^static inline float dcross_dscale(double a, double b, double c, double d, double scale) {$/;"	f	namespace:CV	signature:(double a, double b, double c, double d, double scale)
CV::kAffine_Shift	test/model/3rd_party/Matrix.cc	/^enum { kTranslate_Shift = 0, kScale_Shift, kAffine_Shift, kPerspective_Shift, kRectStaysRect_Shift };$/;"	e	enum:CV::__anon5	file:
CV::kPerspective_Shift	test/model/3rd_party/Matrix.cc	/^enum { kTranslate_Shift = 0, kScale_Shift, kAffine_Shift, kPerspective_Shift, kRectStaysRect_Shift };$/;"	e	enum:CV::__anon5	file:
CV::kRectStaysRect_Shift	test/model/3rd_party/Matrix.cc	/^enum { kTranslate_Shift = 0, kScale_Shift, kAffine_Shift, kPerspective_Shift, kRectStaysRect_Shift };$/;"	e	enum:CV::__anon5	file:
CV::kScalar1Int	test/model/3rd_party/Matrix.cc	/^static const int32_t kScalar1Int = 0x3f800000;$/;"	m	namespace:CV	file:
CV::kScale_Shift	test/model/3rd_party/Matrix.cc	/^enum { kTranslate_Shift = 0, kScale_Shift, kAffine_Shift, kPerspective_Shift, kRectStaysRect_Shift };$/;"	e	enum:CV::__anon5	file:
CV::kTranslate_Shift	test/model/3rd_party/Matrix.cc	/^enum { kTranslate_Shift = 0, kScale_Shift, kAffine_Shift, kPerspective_Shift, kRectStaysRect_Shift };$/;"	e	enum:CV::__anon5	file:
CV::muladdmul	test/model/3rd_party/Matrix.cc	/^static inline float muladdmul(float a, float b, float c, float d) {$/;"	f	namespace:CV	signature:(float a, float b, float c, float d)
CV::only_scale_and_translate	test/model/3rd_party/Matrix.cc	/^static bool only_scale_and_translate(unsigned mask) {$/;"	f	namespace:CV	signature:(unsigned mask)
CV::operator ==	test/model/3rd_party/Matrix.cc	/^bool operator==(const Matrix& a, const Matrix& b) {$/;"	f	namespace:CV	signature:(const Matrix& a, const Matrix& b)
CV::rowcol3	test/model/3rd_party/Matrix.cc	/^static inline float rowcol3(const float row[], const float col[]) {$/;"	f	namespace:CV	signature:(const float row[], const float col[])
CV::scross	test/model/3rd_party/Matrix.cc	/^static inline float scross(float a, float b, float c, float d) {$/;"	f	namespace:CV	signature:(float a, float b, float c, float d)
CV::scross_dscale	test/model/3rd_party/Matrix.cc	/^static inline float scross_dscale(float a, float b, float c, float d, double scale) {$/;"	f	namespace:CV	signature:(float a, float b, float c, float d, double scale)
CV::sdot	test/model/3rd_party/Matrix.cc	/^static inline float sdot(float a, float b, float c, float d) {$/;"	f	namespace:CV	signature:(float a, float b, float c, float d)
CV::sk_ieee_float_divide	test/model/3rd_party/Matrix.cc	/^static inline float sk_ieee_float_divide(float x, float y) {$/;"	f	namespace:CV	signature:(float x, float y)
CV::sk_inv_determinant	test/model/3rd_party/Matrix.cc	/^static double sk_inv_determinant(const float mat[9], int isPerspective) {$/;"	f	namespace:CV	signature:(const float mat[9], int isPerspective)
ComputeInv	test/model/3rd_party/Matrix.cc	/^void Matrix::ComputeInv(float dst[9], const float src[9], double invDet, bool isPersp) {$/;"	f	class:CV::Matrix	signature:(float dst[9], const float src[9], double invDet, bool isPersp)
Concat	include/3rd_party/Matrix.h	/^    static Matrix Concat(const Matrix& a, const Matrix& b) {$/;"	f	class:CV::Matrix	access:public	signature:(const Matrix& a, const Matrix& b)
Concat	test/include/3rd_party/Matrix.h	/^    static Matrix Concat(const Matrix& a, const Matrix& b) {$/;"	f	class:CV::Matrix	access:public	signature:(const Matrix& a, const Matrix& b)
FASTIO_SIZE	include/jz_aip/aie_mmap.h	34;"	d
FASTIO_SIZE	test/include/drivers/aie_mmap.h	32;"	d
FAST_BITS	include/3rd_party/stb_image.h	1737;"	d
FAST_BITS	test/include/3rd_party/stb_image.h	1737;"	d
GetMapPtsProc	include/3rd_party/Matrix.h	/^    static MapPtsProc GetMapPtsProc(TypeMask mask) {$/;"	f	class:CV::Matrix	access:private	signature:(TypeMask mask)
GetMapPtsProc	test/include/3rd_party/Matrix.h	/^    static MapPtsProc GetMapPtsProc(TypeMask mask) {$/;"	f	class:CV::Matrix	access:private	signature:(TypeMask mask)
GetMapXYProc	include/3rd_party/Matrix.h	/^    static MapXYProc GetMapXYProc(TypeMask mask) {$/;"	f	class:CV::Matrix	access:private	signature:(TypeMask mask)
GetMapXYProc	test/include/3rd_party/Matrix.h	/^    static MapXYProc GetMapXYProc(TypeMask mask) {$/;"	f	class:CV::Matrix	access:private	signature:(TypeMask mask)
INCLUDE_COMMON	test/sample/aip_affine/Makefile	/^INCLUDE_COMMON = -I ..\/..\/..\/include\/jz_aip -I ..\/..\/include\/model\/ -I ..\/..\/include\/3rd_party -I ..\/..\/include\/drivers$/;"	m
INCLUDE_COMMON	test/sample/aip_covent/Makefile	/^INCLUDE_COMMON = -I ..\/..\/..\/include\/jz_aip -I ..\/..\/include\/model\/ -I ..\/..\/include\/3rd_party -I ..\/..\/include\/drivers\/$/;"	m
INCLUDE_COMMON	test/sample/aip_perspective/Makefile	/^INCLUDE_COMMON = -I ..\/..\/..\/include\/jz_aip -I ..\/..\/include\/model\/ -I ..\/..\/include\/3rd_party -I ..\/..\/include\/drivers$/;"	m
INCLUDE_COMMON	test/sample/aip_resize/Makefile	/^INCLUDE_COMMON = -I ..\/..\/..\/include\/jz_aip -I ..\/..\/include\/model\/ -I ..\/..\/include\/3rd_party -I ..\/..\/include\/drivers\/$/;"	m
INCLUDE_STB_IMAGE_WRITE_H	include/3rd_party/stb_image_write.h	154;"	d
INCLUDE_STB_IMAGE_WRITE_H	test/include/3rd_party/stb_image_write.h	154;"	d
INDEX_AIP_F	src/jz_aip_hal.h	/^	INDEX_AIP_F = 1,$/;"	e	enum:__anon1
INDEX_AIP_P	src/jz_aip_hal.h	/^	INDEX_AIP_P = 2,$/;"	e	enum:__anon1
INDEX_AIP_T	src/jz_aip_hal.h	/^	INDEX_AIP_T = 0,$/;"	e	enum:__anon1
INTER_BIT	test/model/bs_src.cc	14;"	d	file:
INTER_BITS	test/model/bs_src.cc	15;"	d	file:
INTER_REMAP_COEF_SCALE	test/model/bs_src.cc	/^const int INTER_REMAP_COEF_SCALE = 1<<MAT_ACC;$/;"	v
INTER_RESIZE_COEF_BITS	test/model/bs_src.cc	/^const int INTER_RESIZE_COEF_BITS=11;$/;"	v
INTER_RESIZE_COEF_SCALE	test/model/bs_src.cc	/^const int INTER_RESIZE_COEF_SCALE=1 << INTER_RESIZE_COEF_BITS;$/;"	v
IOCTL_AIP_FREE	src/jz_aip_hal.h	20;"	d
IOCTL_AIP_IRQ_WAIT_CMP	src/jz_aip_hal.h	18;"	d
IOCTL_AIP_MALLOC	src/jz_aip_hal.h	19;"	d
Identity_pts	test/model/3rd_party/Matrix.cc	/^void Matrix::Identity_pts(const Matrix& m, Point dst[], const Point src[], int count) {$/;"	f	class:CV::Matrix	signature:(const Matrix& m, Point dst[], const Point src[], int count)
Identity_xy	test/model/3rd_party/Matrix.cc	/^void Matrix::Identity_xy(const Matrix& m, float sx, float sy, Point* pt) {$/;"	f	class:CV::Matrix	signature:(const Matrix& m, float sx, float sy, Point* pt)
Intersects	include/3rd_party/Rect.h	/^    static bool Intersects(const Rect& a, const Rect& b) {$/;"	f	struct:CV::Rect	access:public	signature:(const Rect& a, const Rect& b)
Intersects	include/3rd_party/Rect.h	/^    static bool Intersects(float al, float at, float ar, float ab, float bl, float bt, float br, float bb) {$/;"	f	struct:CV::Rect	access:private	signature:(float al, float at, float ar, float ab, float bl, float bt, float br, float bb)
Intersects	test/include/3rd_party/Rect.h	/^    static bool Intersects(const Rect& a, const Rect& b) {$/;"	f	struct:CV::Rect	access:public	signature:(const Rect& a, const Rect& b)
Intersects	test/include/3rd_party/Rect.h	/^    static bool Intersects(float al, float at, float ar, float ab, float bl, float bt, float br, float bb) {$/;"	f	struct:CV::Rect	access:private	signature:(float al, float at, float ar, float ab, float bl, float bt, float br, float bb)
JZ_AIP_F_IOBASE	src/jz_aip_hal.h	11;"	d
JZ_AIP_F_OFFSET	src/jz_aip_hal.h	15;"	d
JZ_AIP_IOBASE	src/jz_aip_hal.h	7;"	d
JZ_AIP_IOSIZE	src/jz_aip_hal.h	8;"	d
JZ_AIP_P_IOBASE	src/jz_aip_hal.h	12;"	d
JZ_AIP_P_OFFSET	src/jz_aip_hal.h	16;"	d
JZ_AIP_T_IOBASE	src/jz_aip_hal.h	10;"	d
JZ_AIP_T_OFFSET	src/jz_aip_hal.h	14;"	d
L2C_SIZE	include/jz_aip/aie_mmap.h	31;"	d
L2C_SIZE	test/include/drivers/aie_mmap.h	29;"	d
LIBS_AIP	test/sample/aip_affine/Makefile	/^LIBS_AIP =  ..\/..\/..\/__release_aip\/lib\/uclibc $/;"	m
LIBS_AIP	test/sample/aip_covent/Makefile	/^LIBS_AIP =  ..\/..\/..\/__release_aip\/lib\/uclibc $/;"	m
LIBS_AIP	test/sample/aip_perspective/Makefile	/^LIBS_AIP =  ..\/..\/..\/__release_aip\/lib\/uclibc $/;"	m
LIBS_AIP	test/sample/aip_resize/Makefile	/^LIBS_AIP =  ..\/..\/..\/__release_aip\/lib\/uclibc $/;"	m
LIBS_DIR	test/sample/aip_affine/Makefile	/^LIBS_DIR =  ..\/..\/drivers_src\/uclibc\/$/;"	m
LIBS_DIR	test/sample/aip_covent/Makefile	/^LIBS_DIR =  ..\/..\/drivers_src\/uclibc\/$/;"	m
LIBS_DIR	test/sample/aip_perspective/Makefile	/^LIBS_DIR =  ..\/..\/drivers_src\/uclibc\/$/;"	m
LIBS_DIR	test/sample/aip_resize/Makefile	/^LIBS_DIR =  ..\/..\/drivers_src\/uclibc\/$/;"	m
MAT_ACC	test/model/bs_src.cc	16;"	d	file:
MXU_16S	include/model/mxu_types_c.h	47;"	d
MXU_16S	test/include/model/mxu_types_c.h	47;"	d
MXU_16SC	include/model/mxu_types_c.h	81;"	d
MXU_16SC	test/include/model/mxu_types_c.h	81;"	d
MXU_16SC1	include/model/mxu_types_c.h	77;"	d
MXU_16SC1	test/include/model/mxu_types_c.h	77;"	d
MXU_16SC2	include/model/mxu_types_c.h	78;"	d
MXU_16SC2	test/include/model/mxu_types_c.h	78;"	d
MXU_16SC3	include/model/mxu_types_c.h	79;"	d
MXU_16SC3	test/include/model/mxu_types_c.h	79;"	d
MXU_16SC4	include/model/mxu_types_c.h	80;"	d
MXU_16SC4	test/include/model/mxu_types_c.h	80;"	d
MXU_16U	include/model/mxu_types_c.h	46;"	d
MXU_16U	test/include/model/mxu_types_c.h	46;"	d
MXU_16UC	include/model/mxu_types_c.h	75;"	d
MXU_16UC	test/include/model/mxu_types_c.h	75;"	d
MXU_16UC1	include/model/mxu_types_c.h	71;"	d
MXU_16UC1	test/include/model/mxu_types_c.h	71;"	d
MXU_16UC2	include/model/mxu_types_c.h	72;"	d
MXU_16UC2	test/include/model/mxu_types_c.h	72;"	d
MXU_16UC3	include/model/mxu_types_c.h	73;"	d
MXU_16UC3	test/include/model/mxu_types_c.h	73;"	d
MXU_16UC4	include/model/mxu_types_c.h	74;"	d
MXU_16UC4	test/include/model/mxu_types_c.h	74;"	d
MXU_32F	include/model/mxu_types_c.h	49;"	d
MXU_32F	test/include/model/mxu_types_c.h	49;"	d
MXU_32FC	include/model/mxu_types_c.h	93;"	d
MXU_32FC	test/include/model/mxu_types_c.h	93;"	d
MXU_32FC1	include/model/mxu_types_c.h	89;"	d
MXU_32FC1	test/include/model/mxu_types_c.h	89;"	d
MXU_32FC2	include/model/mxu_types_c.h	90;"	d
MXU_32FC2	test/include/model/mxu_types_c.h	90;"	d
MXU_32FC3	include/model/mxu_types_c.h	91;"	d
MXU_32FC3	test/include/model/mxu_types_c.h	91;"	d
MXU_32FC4	include/model/mxu_types_c.h	92;"	d
MXU_32FC4	test/include/model/mxu_types_c.h	92;"	d
MXU_32S	include/model/mxu_types_c.h	48;"	d
MXU_32S	test/include/model/mxu_types_c.h	48;"	d
MXU_32SC	include/model/mxu_types_c.h	87;"	d
MXU_32SC	test/include/model/mxu_types_c.h	87;"	d
MXU_32SC1	include/model/mxu_types_c.h	83;"	d
MXU_32SC1	test/include/model/mxu_types_c.h	83;"	d
MXU_32SC2	include/model/mxu_types_c.h	84;"	d
MXU_32SC2	test/include/model/mxu_types_c.h	84;"	d
MXU_32SC3	include/model/mxu_types_c.h	85;"	d
MXU_32SC3	test/include/model/mxu_types_c.h	85;"	d
MXU_32SC4	include/model/mxu_types_c.h	86;"	d
MXU_32SC4	test/include/model/mxu_types_c.h	86;"	d
MXU_64F	include/model/mxu_types_c.h	50;"	d
MXU_64F	test/include/model/mxu_types_c.h	50;"	d
MXU_64FC	include/model/mxu_types_c.h	99;"	d
MXU_64FC	test/include/model/mxu_types_c.h	99;"	d
MXU_64FC1	include/model/mxu_types_c.h	95;"	d
MXU_64FC1	test/include/model/mxu_types_c.h	95;"	d
MXU_64FC2	include/model/mxu_types_c.h	96;"	d
MXU_64FC2	test/include/model/mxu_types_c.h	96;"	d
MXU_64FC3	include/model/mxu_types_c.h	97;"	d
MXU_64FC3	test/include/model/mxu_types_c.h	97;"	d
MXU_64FC4	include/model/mxu_types_c.h	98;"	d
MXU_64FC4	test/include/model/mxu_types_c.h	98;"	d
MXU_8S	include/model/mxu_types_c.h	45;"	d
MXU_8S	test/include/model/mxu_types_c.h	45;"	d
MXU_8SC	include/model/mxu_types_c.h	69;"	d
MXU_8SC	test/include/model/mxu_types_c.h	69;"	d
MXU_8SC1	include/model/mxu_types_c.h	65;"	d
MXU_8SC1	test/include/model/mxu_types_c.h	65;"	d
MXU_8SC2	include/model/mxu_types_c.h	66;"	d
MXU_8SC2	test/include/model/mxu_types_c.h	66;"	d
MXU_8SC3	include/model/mxu_types_c.h	67;"	d
MXU_8SC3	test/include/model/mxu_types_c.h	67;"	d
MXU_8SC4	include/model/mxu_types_c.h	68;"	d
MXU_8SC4	test/include/model/mxu_types_c.h	68;"	d
MXU_8U	include/model/mxu_types_c.h	44;"	d
MXU_8U	test/include/model/mxu_types_c.h	44;"	d
MXU_8UC	include/model/mxu_types_c.h	63;"	d
MXU_8UC	test/include/model/mxu_types_c.h	63;"	d
MXU_8UC1	include/model/mxu_types_c.h	59;"	d
MXU_8UC1	test/include/model/mxu_types_c.h	59;"	d
MXU_8UC2	include/model/mxu_types_c.h	60;"	d
MXU_8UC2	test/include/model/mxu_types_c.h	60;"	d
MXU_8UC3	include/model/mxu_types_c.h	61;"	d
MXU_8UC3	test/include/model/mxu_types_c.h	61;"	d
MXU_8UC4	include/model/mxu_types_c.h	62;"	d
MXU_8UC4	test/include/model/mxu_types_c.h	62;"	d
MXU_AUTO_STEP	include/model/mxu_types_c.h	101;"	d
MXU_AUTO_STEP	test/include/model/mxu_types_c.h	101;"	d
MXU_CN_MAX	include/model/mxu_types_c.h	40;"	d
MXU_CN_MAX	test/include/model/mxu_types_c.h	40;"	d
MXU_CN_SHIFT	include/model/mxu_types_c.h	41;"	d
MXU_CN_SHIFT	test/include/model/mxu_types_c.h	41;"	d
MXU_DEPTH_MAX	include/model/mxu_types_c.h	42;"	d
MXU_DEPTH_MAX	test/include/model/mxu_types_c.h	42;"	d
MXU_ELEM_SIZE	include/model/mxu_types_c.h	120;"	d
MXU_ELEM_SIZE	test/include/model/mxu_types_c.h	120;"	d
MXU_IS_CONT_MAT	include/model/mxu_types_c.h	111;"	d
MXU_IS_CONT_MAT	test/include/model/mxu_types_c.h	111;"	d
MXU_IS_MAT_CONT	include/model/mxu_types_c.h	110;"	d
MXU_IS_MAT_CONT	test/include/model/mxu_types_c.h	110;"	d
MXU_IS_SUBMAT	include/model/mxu_types_c.h	114;"	d
MXU_IS_SUBMAT	test/include/model/mxu_types_c.h	114;"	d
MXU_MAGIC_MASK	include/model/mxu_types_c.h	116;"	d
MXU_MAGIC_MASK	test/include/model/mxu_types_c.h	116;"	d
MXU_MAKETYPE	include/model/mxu_types_c.h	56;"	d
MXU_MAKETYPE	test/include/model/mxu_types_c.h	56;"	d
MXU_MAKE_TYPE	include/model/mxu_types_c.h	57;"	d
MXU_MAKE_TYPE	test/include/model/mxu_types_c.h	57;"	d
MXU_MAT_CN	include/model/mxu_types_c.h	105;"	d
MXU_MAT_CN	test/include/model/mxu_types_c.h	105;"	d
MXU_MAT_CN_MASK	include/model/mxu_types_c.h	104;"	d
MXU_MAT_CN_MASK	test/include/model/mxu_types_c.h	104;"	d
MXU_MAT_CONT_FLAG	include/model/mxu_types_c.h	109;"	d
MXU_MAT_CONT_FLAG	test/include/model/mxu_types_c.h	109;"	d
MXU_MAT_CONT_FLAG_SHIFT	include/model/mxu_types_c.h	108;"	d
MXU_MAT_CONT_FLAG_SHIFT	test/include/model/mxu_types_c.h	108;"	d
MXU_MAT_DEPTH	include/model/mxu_types_c.h	54;"	d
MXU_MAT_DEPTH	test/include/model/mxu_types_c.h	54;"	d
MXU_MAT_DEPTH_MASK	include/model/mxu_types_c.h	53;"	d
MXU_MAT_DEPTH_MASK	test/include/model/mxu_types_c.h	53;"	d
MXU_MAT_MAGIC_VAL	include/model/mxu_types_c.h	117;"	d
MXU_MAT_MAGIC_VAL	test/include/model/mxu_types_c.h	117;"	d
MXU_MAT_TYPE	include/model/mxu_types_c.h	107;"	d
MXU_MAT_TYPE	test/include/model/mxu_types_c.h	107;"	d
MXU_MAT_TYPE_MASK	include/model/mxu_types_c.h	106;"	d
MXU_MAT_TYPE_MASK	test/include/model/mxu_types_c.h	106;"	d
MXU_PI	include/model/mxu_types_c.h	13;"	d
MXU_PI	test/include/model/mxu_types_c.h	13;"	d
MXU_SUBMAT_FLAG	include/model/mxu_types_c.h	113;"	d
MXU_SUBMAT_FLAG	test/include/model/mxu_types_c.h	113;"	d
MXU_SUBMAT_FLAG_SHIFT	include/model/mxu_types_c.h	112;"	d
MXU_SUBMAT_FLAG_SHIFT	test/include/model/mxu_types_c.h	112;"	d
MXU_TYPE_NAME_MAT	include/model/mxu_types_c.h	118;"	d
MXU_TYPE_NAME_MAT	test/include/model/mxu_types_c.h	118;"	d
MXU_USRTYPE1	include/model/mxu_types_c.h	51;"	d
MXU_USRTYPE1	test/include/model/mxu_types_c.h	51;"	d
MXU_WHOLE_ARR	include/model/mxu_types_c.h	102;"	d
MXU_WHOLE_ARR	test/include/model/mxu_types_c.h	102;"	d
MakeAll	include/3rd_party/Matrix.h	/^    static Matrix MakeAll(float scaleX, float skewX, float transX, float skewY, float scaleY, float transY, float pers0,$/;"	f	class:CV::Matrix	access:public	signature:(float scaleX, float skewX, float transX, float skewY, float scaleY, float transY, float pers0, float pers1, float pers2)
MakeAll	test/include/3rd_party/Matrix.h	/^    static Matrix MakeAll(float scaleX, float skewX, float transX, float skewY, float scaleY, float transY, float pers0,$/;"	f	class:CV::Matrix	access:public	signature:(float scaleX, float skewX, float transX, float skewY, float scaleY, float transY, float pers0, float pers1, float pers2)
MakeEmpty	include/3rd_party/Rect.h	/^    static constexpr Rect MakeEmpty() {$/;"	f	struct:CV::Rect	access:public	signature:()
MakeEmpty	test/include/3rd_party/Rect.h	/^    static constexpr Rect MakeEmpty() {$/;"	f	struct:CV::Rect	access:public	signature:()
MakeIWH	include/3rd_party/Rect.h	/^    static Rect MakeIWH(int w, int h) {$/;"	f	struct:CV::Rect	access:public	signature:(int w, int h)
MakeIWH	test/include/3rd_party/Rect.h	/^    static Rect MakeIWH(int w, int h) {$/;"	f	struct:CV::Rect	access:public	signature:(int w, int h)
MakeLTRB	include/3rd_party/Rect.h	/^    static constexpr Rect MakeLTRB(float l, float t, float r, float b) {$/;"	f	struct:CV::Rect	access:public	signature:(float l, float t, float r, float b)
MakeLTRB	test/include/3rd_party/Rect.h	/^    static constexpr Rect MakeLTRB(float l, float t, float r, float b) {$/;"	f	struct:CV::Rect	access:public	signature:(float l, float t, float r, float b)
MakeLargest	include/3rd_party/Rect.h	/^    static Rect MakeLargest() {$/;"	f	struct:CV::Rect	access:public	signature:()
MakeLargest	test/include/3rd_party/Rect.h	/^    static Rect MakeLargest() {$/;"	f	struct:CV::Rect	access:public	signature:()
MakeRectToRect	include/3rd_party/Matrix.h	/^    static Matrix MakeRectToRect(const Rect& src, const Rect& dst, ScaleToFit stf) {$/;"	f	class:CV::Matrix	access:public	signature:(const Rect& src, const Rect& dst, ScaleToFit stf)
MakeRectToRect	test/include/3rd_party/Matrix.h	/^    static Matrix MakeRectToRect(const Rect& src, const Rect& dst, ScaleToFit stf) {$/;"	f	class:CV::Matrix	access:public	signature:(const Rect& src, const Rect& dst, ScaleToFit stf)
MakeScale	include/3rd_party/Matrix.h	/^    static Matrix MakeScale(float scale) {$/;"	f	class:CV::Matrix	access:public	signature:(float scale)
MakeScale	include/3rd_party/Matrix.h	/^    static Matrix MakeScale(float sx, float sy) {$/;"	f	class:CV::Matrix	access:public	signature:(float sx, float sy)
MakeScale	test/include/3rd_party/Matrix.h	/^    static Matrix MakeScale(float scale) {$/;"	f	class:CV::Matrix	access:public	signature:(float scale)
MakeScale	test/include/3rd_party/Matrix.h	/^    static Matrix MakeScale(float sx, float sy) {$/;"	f	class:CV::Matrix	access:public	signature:(float sx, float sy)
MakeTrans	include/3rd_party/Matrix.h	/^    static Matrix MakeTrans(float dx, float dy) {$/;"	f	class:CV::Matrix	access:public	signature:(float dx, float dy)
MakeTrans	test/include/3rd_party/Matrix.h	/^    static Matrix MakeTrans(float dx, float dy) {$/;"	f	class:CV::Matrix	access:public	signature:(float dx, float dy)
MakeWH	include/3rd_party/Rect.h	/^    static constexpr Rect MakeWH(float w, float h) {$/;"	f	struct:CV::Rect	access:public	signature:(float w, float h)
MakeWH	test/include/3rd_party/Rect.h	/^    static constexpr Rect MakeWH(float w, float h) {$/;"	f	struct:CV::Rect	access:public	signature:(float w, float h)
MakeXYWH	include/3rd_party/Rect.h	/^    static constexpr Rect MakeXYWH(float x, float y, float w, float h) {$/;"	f	struct:CV::Rect	access:public	signature:(float x, float y, float w, float h)
MakeXYWH	test/include/3rd_party/Rect.h	/^    static constexpr Rect MakeXYWH(float x, float y, float w, float h) {$/;"	f	struct:CV::Rect	access:public	signature:(float x, float y, float w, float h)
MapPtsProc	include/3rd_party/Matrix.h	/^    typedef void (*MapPtsProc)(const Matrix& mat, Point dst[], const Point src[], int count);$/;"	t	class:CV::Matrix	access:private
MapPtsProc	test/include/3rd_party/Matrix.h	/^    typedef void (*MapPtsProc)(const Matrix& mat, Point dst[], const Point src[], int count);$/;"	t	class:CV::Matrix	access:private
MapXYProc	include/3rd_party/Matrix.h	/^    typedef void (*MapXYProc)(const Matrix& mat, float x, float y, Point* result);$/;"	t	class:CV::Matrix	access:private
MapXYProc	test/include/3rd_party/Matrix.h	/^    typedef void (*MapXYProc)(const Matrix& mat, float x, float y, Point* result);$/;"	t	class:CV::Matrix	access:private
Mat_c	include/model/bs_src.h	/^struct Mat_c{$/;"	s
Mat_c	test/include/model/bs_src.h	/^struct Mat_c{$/;"	s
Mat_c::base	include/model/bs_src.h	/^	uint8_t *base;$/;"	m	struct:Mat_c	access:public
Mat_c::base	test/include/model/bs_src.h	/^	uint8_t *base;$/;"	m	struct:Mat_c	access:public
Mat_c::channels	include/model/bs_src.h	/^	int channels;$/;"	m	struct:Mat_c	access:public
Mat_c::channels	test/include/model/bs_src.h	/^	int channels;$/;"	m	struct:Mat_c	access:public
Mat_c::cols	include/model/bs_src.h	/^	int cols;$/;"	m	struct:Mat_c	access:public
Mat_c::cols	test/include/model/bs_src.h	/^	int cols;$/;"	m	struct:Mat_c	access:public
Mat_c::rows	include/model/bs_src.h	/^	int rows;$/;"	m	struct:Mat_c	access:public
Mat_c::rows	test/include/model/bs_src.h	/^	int rows;$/;"	m	struct:Mat_c	access:public
Matrix	include/3rd_party/Matrix.h	/^    Matrix() {$/;"	f	class:CV::Matrix	access:public	signature:()
Matrix	include/3rd_party/Matrix.h	/^class Matrix {$/;"	c	namespace:CV
Matrix	test/include/3rd_party/Matrix.h	/^    Matrix() {$/;"	f	class:CV::Matrix	access:public	signature:()
Matrix	test/include/3rd_party/Matrix.h	/^class Matrix {$/;"	c	namespace:CV
NNA_CACHED	include/jz_aip/aie_mmap.h	/^    NNA_CACHED                  = 0x4,    \/* 1 << 2, cached, optionally to ddr memory *\/$/;"	e	enum:nna_cache_attr
NNA_CACHED	test/include/drivers/aie_mmap.h	/^    NNA_CACHED = 0x4,               \/* 1 << 2, cached, optionally to ddr memory *\/$/;"	e	enum:nna_cache_attr
NNA_DMA_BIDIRECTIONAL	include/jz_aip/aie_mmap.h	/^    NNA_DMA_BIDIRECTIONAL   = 0,        \/* write back invalide *\/$/;"	e	enum:nna_dma_data_direction
NNA_DMA_BIDIRECTIONAL	test/include/drivers/aie_mmap.h	/^    NNA_DMA_BIDIRECTIONAL = 0, \/* write back invalide *\/$/;"	e	enum:nna_dma_data_direction
NNA_DMA_FROM_DEVICE	include/jz_aip/aie_mmap.h	/^    NNA_DMA_FROM_DEVICE     = 2,        \/* Invalidate *\/$/;"	e	enum:nna_dma_data_direction
NNA_DMA_FROM_DEVICE	test/include/drivers/aie_mmap.h	/^    NNA_DMA_FROM_DEVICE = 2,   \/* Invalidate *\/$/;"	e	enum:nna_dma_data_direction
NNA_DMA_NONE	include/jz_aip/aie_mmap.h	/^    NNA_DMA_NONE            = 3,$/;"	e	enum:nna_dma_data_direction
NNA_DMA_NONE	test/include/drivers/aie_mmap.h	/^    NNA_DMA_NONE = 3,$/;"	e	enum:nna_dma_data_direction
NNA_DMA_TO_DEVICE	include/jz_aip/aie_mmap.h	/^    NNA_DMA_TO_DEVICE       = 1,        \/* write back invalide *\/$/;"	e	enum:nna_dma_data_direction
NNA_DMA_TO_DEVICE	test/include/drivers/aie_mmap.h	/^    NNA_DMA_TO_DEVICE = 1,     \/* write back invalide *\/$/;"	e	enum:nna_dma_data_direction
NNA_UNCACHED	include/jz_aip/aie_mmap.h	/^    NNA_UNCACHED                = 0x1,    \/* 1 << 0, uncached, mainly to io memory, optionally to desram, oram, ddr *\/$/;"	e	enum:nna_cache_attr
NNA_UNCACHED	test/include/drivers/aie_mmap.h	/^    NNA_UNCACHED = 0x1, \/* 1 << 0, uncached, mainly to io memory, optionally to desram, oram, ddr *\/$/;"	e	enum:nna_cache_attr
NNA_UNCACHED_ACCELERATED	include/jz_aip/aie_mmap.h	/^    NNA_UNCACHED_ACCELERATED    = 0x2,    \/* 1 << 1, cached accelerated, optionally to desram oram, ddr *\/$/;"	e	enum:nna_cache_attr
NNA_UNCACHED_ACCELERATED	test/include/drivers/aie_mmap.h	/^    NNA_UNCACHED_ACCELERATED = 0x2, \/* 1 << 1, cached accelerated, optionally to desram oram, ddr *\/$/;"	e	enum:nna_cache_attr
NNDBG_IO_BASE	include/jz_aip/aie_mmap.h	27;"	d
NNDBG_IO_BASE	test/include/drivers/aie_mmap.h	25;"	d
NNDBG_IO_SIZE	include/jz_aip/aie_mmap.h	28;"	d
NNDBG_IO_SIZE	test/include/drivers/aie_mmap.h	26;"	d
NNDMA_DESRAM_BASE	include/jz_aip/aie_mmap.h	23;"	d
NNDMA_DESRAM_BASE	test/include/drivers/aie_mmap.h	21;"	d
NNDMA_DESRAM_SIZE	include/jz_aip/aie_mmap.h	24;"	d
NNDMA_DESRAM_SIZE	test/include/drivers/aie_mmap.h	22;"	d
NNDMA_IO_BASE	include/jz_aip/aie_mmap.h	25;"	d
NNDMA_IO_BASE	test/include/drivers/aie_mmap.h	23;"	d
NNDMA_IO_SIZE	include/jz_aip/aie_mmap.h	26;"	d
NNDMA_IO_SIZE	test/include/drivers/aie_mmap.h	24;"	d
ORAM_BASE	include/jz_aip/aie_mmap.h	32;"	d
ORAM_BASE	test/include/drivers/aie_mmap.h	30;"	d
ORAM_SIZE	include/jz_aip/aie_mmap.h	33;"	d
ORAM_SIZE	test/include/drivers/aie_mmap.h	31;"	d
OUTPUT_NAME	test/sample/aip_affine/Makefile	/^OUTPUT_NAME := aip_affine_test$/;"	m
OUTPUT_NAME	test/sample/aip_covent/Makefile	/^OUTPUT_NAME := aip_covent_test$/;"	m
OUTPUT_NAME	test/sample/aip_perspective/Makefile	/^OUTPUT_NAME := aip_perspective_test$/;"	m
OUTPUT_NAME	test/sample/aip_resize/Makefile	/^OUTPUT_NAME := aip_resize_test$/;"	m
Persp_pts	test/model/3rd_party/Matrix.cc	/^void Matrix::Persp_pts(const Matrix& m, Point dst[], const Point src[], int count) {$/;"	f	class:CV::Matrix	signature:(const Matrix& m, Point dst[], const Point src[], int count)
Persp_xy	test/model/3rd_party/Matrix.cc	/^void Matrix::Persp_xy(const Matrix& m, float sx, float sy, Point* pt) {$/;"	f	class:CV::Matrix	signature:(const Matrix& m, float sx, float sy, Point* pt)
Point	include/3rd_party/Rect.h	/^struct Point {$/;"	s	namespace:CV
Point	test/include/3rd_party/Rect.h	/^struct Point {$/;"	s	namespace:CV
Poly2Proc	test/model/3rd_party/Matrix.cc	/^bool Matrix::Poly2Proc(const Point srcPt[], Matrix* dst) {$/;"	f	class:CV::Matrix	signature:(const Point srcPt[], Matrix* dst)
Poly3Proc	test/model/3rd_party/Matrix.cc	/^bool Matrix::Poly3Proc(const Point srcPt[], Matrix* dst) {$/;"	f	class:CV::Matrix	signature:(const Point srcPt[], Matrix* dst)
Poly4Proc	test/model/3rd_party/Matrix.cc	/^bool Matrix::Poly4Proc(const Point srcPt[], Matrix* dst) {$/;"	f	class:CV::Matrix	signature:(const Point srcPt[], Matrix* dst)
Rect	include/3rd_party/Rect.h	/^struct Rect {$/;"	s	namespace:CV
Rect	test/include/3rd_party/Rect.h	/^struct Rect {$/;"	s	namespace:CV
RotTrans_xy	test/model/3rd_party/Matrix.cc	/^void Matrix::RotTrans_xy(const Matrix& m, float sx, float sy, Point* pt) {$/;"	f	class:CV::Matrix	signature:(const Matrix& m, float sx, float sy, Point* pt)
Rot_xy	test/model/3rd_party/Matrix.cc	/^void Matrix::Rot_xy(const Matrix& m, float sx, float sy, Point* pt) {$/;"	f	class:CV::Matrix	signature:(const Matrix& m, float sx, float sy, Point* pt)
SHIFT	test/model/bs_src.cc	9;"	d	file:
SHIFT_AFFINE	test/model/bs_src.cc	10;"	d	file:
SK_LEGACY_MATRIX_MATH_ORDER	test/model/3rd_party/Matrix.cc	55;"	d	file:
SK_ScalarNearlyZero	test/model/3rd_party/Matrix.cc	41;"	d	file:
SK_ScalarPI	test/model/3rd_party/Matrix.cc	38;"	d	file:
STBIDEF	include/3rd_party/stb_image.h	341;"	d
STBIDEF	include/3rd_party/stb_image.h	343;"	d
STBIDEF	test/include/3rd_party/stb_image.h	341;"	d
STBIDEF	test/include/3rd_party/stb_image.h	343;"	d
STBIWDEF	include/3rd_party/stb_image_write.h	161;"	d
STBIWDEF	include/3rd_party/stb_image_write.h	164;"	d
STBIWDEF	include/3rd_party/stb_image_write.h	166;"	d
STBIWDEF	test/include/3rd_party/stb_image_write.h	161;"	d
STBIWDEF	test/include/3rd_party/stb_image_write.h	164;"	d
STBIWDEF	test/include/3rd_party/stb_image_write.h	166;"	d
STBIW_ASSERT	include/3rd_party/stb_image_write.h	245;"	d
STBIW_ASSERT	test/include/3rd_party/stb_image_write.h	245;"	d
STBIW_EXTERN	include/3rd_party/stb_image_write.h	289;"	d
STBIW_EXTERN	include/3rd_party/stb_image_write.h	291;"	d
STBIW_EXTERN	test/include/3rd_party/stb_image_write.h	289;"	d
STBIW_EXTERN	test/include/3rd_party/stb_image_write.h	291;"	d
STBIW_FREE	include/3rd_party/stb_image_write.h	232;"	d
STBIW_FREE	test/include/3rd_party/stb_image_write.h	232;"	d
STBIW_MALLOC	include/3rd_party/stb_image_write.h	230;"	d
STBIW_MALLOC	test/include/3rd_party/stb_image_write.h	230;"	d
STBIW_MEMMOVE	include/3rd_party/stb_image_write.h	240;"	d
STBIW_MEMMOVE	test/include/3rd_party/stb_image_write.h	240;"	d
STBIW_REALLOC	include/3rd_party/stb_image_write.h	231;"	d
STBIW_REALLOC	test/include/3rd_party/stb_image_write.h	231;"	d
STBIW_REALLOC_SIZED	include/3rd_party/stb_image_write.h	236;"	d
STBIW_REALLOC_SIZED	test/include/3rd_party/stb_image_write.h	236;"	d
STBIW_UCHAR	include/3rd_party/stb_image_write.h	248;"	d
STBIW_UCHAR	test/include/3rd_party/stb_image_write.h	248;"	d
STBI_ASSERT	include/3rd_party/stb_image.h	536;"	d
STBI_ASSERT	test/include/3rd_party/stb_image.h	536;"	d
STBI_EXTERN	include/3rd_party/stb_image.h	540;"	d
STBI_EXTERN	include/3rd_party/stb_image.h	542;"	d
STBI_EXTERN	test/include/3rd_party/stb_image.h	540;"	d
STBI_EXTERN	test/include/3rd_party/stb_image.h	542;"	d
STBI_FREE	include/3rd_party/stb_image.h	598;"	d
STBI_FREE	test/include/3rd_party/stb_image.h	598;"	d
STBI_HAS_LROTL	include/3rd_party/stb_image.h	578;"	d
STBI_HAS_LROTL	test/include/3rd_party/stb_image.h	578;"	d
STBI_INCLUDE_STB_IMAGE_H	include/3rd_party/stb_image.h	108;"	d
STBI_INCLUDE_STB_IMAGE_H	test/include/3rd_party/stb_image.h	108;"	d
STBI_MALLOC	include/3rd_party/stb_image.h	596;"	d
STBI_MALLOC	test/include/3rd_party/stb_image.h	596;"	d
STBI_NEON	include/3rd_party/stb_image.h	693;"	d
STBI_NEON	test/include/3rd_party/stb_image.h	693;"	d
STBI_NOTUSED	include/3rd_party/stb_image.h	572;"	d
STBI_NOTUSED	include/3rd_party/stb_image.h	574;"	d
STBI_NOTUSED	test/include/3rd_party/stb_image.h	572;"	d
STBI_NOTUSED	test/include/3rd_party/stb_image.h	574;"	d
STBI_NO_BMP	include/3rd_party/stb_image.h	494;"	d
STBI_NO_BMP	test/include/3rd_party/stb_image.h	494;"	d
STBI_NO_GIF	include/3rd_party/stb_image.h	503;"	d
STBI_NO_GIF	test/include/3rd_party/stb_image.h	503;"	d
STBI_NO_HDR	include/3rd_party/stb_image.h	506;"	d
STBI_NO_HDR	test/include/3rd_party/stb_image.h	506;"	d
STBI_NO_JPEG	include/3rd_party/stb_image.h	488;"	d
STBI_NO_JPEG	test/include/3rd_party/stb_image.h	488;"	d
STBI_NO_PIC	include/3rd_party/stb_image.h	509;"	d
STBI_NO_PIC	test/include/3rd_party/stb_image.h	509;"	d
STBI_NO_PNG	include/3rd_party/stb_image.h	491;"	d
STBI_NO_PNG	test/include/3rd_party/stb_image.h	491;"	d
STBI_NO_PNM	include/3rd_party/stb_image.h	512;"	d
STBI_NO_PNM	test/include/3rd_party/stb_image.h	512;"	d
STBI_NO_PSD	include/3rd_party/stb_image.h	497;"	d
STBI_NO_PSD	test/include/3rd_party/stb_image.h	497;"	d
STBI_NO_SIMD	include/3rd_party/stb_image.h	620;"	d
STBI_NO_SIMD	include/3rd_party/stb_image.h	635;"	d
STBI_NO_SIMD	test/include/3rd_party/stb_image.h	620;"	d
STBI_NO_SIMD	test/include/3rd_party/stb_image.h	635;"	d
STBI_NO_TGA	include/3rd_party/stb_image.h	500;"	d
STBI_NO_TGA	test/include/3rd_party/stb_image.h	500;"	d
STBI_NO_ZLIB	include/3rd_party/stb_image.h	517;"	d
STBI_NO_ZLIB	test/include/3rd_party/stb_image.h	517;"	d
STBI_ORDER_BGR	include/3rd_party/stb_image.h	/^   STBI_ORDER_BGR$/;"	e	enum:__anon42
STBI_ORDER_BGR	test/include/3rd_party/stb_image.h	/^   STBI_ORDER_BGR$/;"	e	enum:__anon11
STBI_ORDER_RGB	include/3rd_party/stb_image.h	/^   STBI_ORDER_RGB,$/;"	e	enum:__anon42
STBI_ORDER_RGB	test/include/3rd_party/stb_image.h	/^   STBI_ORDER_RGB,$/;"	e	enum:__anon11
STBI_REALLOC	include/3rd_party/stb_image.h	597;"	d
STBI_REALLOC	test/include/3rd_party/stb_image.h	597;"	d
STBI_REALLOC_SIZED	include/3rd_party/stb_image.h	602;"	d
STBI_REALLOC_SIZED	test/include/3rd_party/stb_image.h	602;"	d
STBI_SIMD_ALIGN	include/3rd_party/stb_image.h	665;"	d
STBI_SIMD_ALIGN	include/3rd_party/stb_image.h	676;"	d
STBI_SIMD_ALIGN	include/3rd_party/stb_image.h	699;"	d
STBI_SIMD_ALIGN	include/3rd_party/stb_image.h	703;"	d
STBI_SIMD_ALIGN	test/include/3rd_party/stb_image.h	665;"	d
STBI_SIMD_ALIGN	test/include/3rd_party/stb_image.h	676;"	d
STBI_SIMD_ALIGN	test/include/3rd_party/stb_image.h	699;"	d
STBI_SIMD_ALIGN	test/include/3rd_party/stb_image.h	703;"	d
STBI_SSE2	include/3rd_party/stb_image.h	639;"	d
STBI_SSE2	test/include/3rd_party/stb_image.h	639;"	d
STBI_VERSION	include/3rd_party/stb_image.h	319;"	d
STBI_VERSION	test/include/3rd_party/stb_image.h	319;"	d
STBI__BYTECAST	include/3rd_party/stb_image.h	1547;"	d
STBI__BYTECAST	test/include/3rd_party/stb_image.h	1547;"	d
STBI__CASE	include/3rd_party/stb_image.h	1584;"	d
STBI__CASE	include/3rd_party/stb_image.h	1602;"	d
STBI__CASE	include/3rd_party/stb_image.h	1633;"	d
STBI__CASE	include/3rd_party/stb_image.h	1651;"	d
STBI__CASE	include/3rd_party/stb_image.h	4460;"	d
STBI__CASE	include/3rd_party/stb_image.h	4473;"	d
STBI__CASE	include/3rd_party/stb_image.h	4477;"	d
STBI__CASE	include/3rd_party/stb_image.h	4490;"	d
STBI__CASE	test/include/3rd_party/stb_image.h	1584;"	d
STBI__CASE	test/include/3rd_party/stb_image.h	1602;"	d
STBI__CASE	test/include/3rd_party/stb_image.h	1633;"	d
STBI__CASE	test/include/3rd_party/stb_image.h	1651;"	d
STBI__CASE	test/include/3rd_party/stb_image.h	4460;"	d
STBI__CASE	test/include/3rd_party/stb_image.h	4473;"	d
STBI__CASE	test/include/3rd_party/stb_image.h	4477;"	d
STBI__CASE	test/include/3rd_party/stb_image.h	4490;"	d
STBI__COMBO	include/3rd_party/stb_image.h	1583;"	d
STBI__COMBO	include/3rd_party/stb_image.h	1632;"	d
STBI__COMBO	test/include/3rd_party/stb_image.h	1583;"	d
STBI__COMBO	test/include/3rd_party/stb_image.h	1632;"	d
STBI__F_avg	include/3rd_party/stb_image.h	/^   STBI__F_avg=3,$/;"	e	enum:__anon53
STBI__F_avg	test/include/3rd_party/stb_image.h	/^   STBI__F_avg=3,$/;"	e	enum:__anon22
STBI__F_avg_first	include/3rd_party/stb_image.h	/^   STBI__F_avg_first,$/;"	e	enum:__anon53
STBI__F_avg_first	test/include/3rd_party/stb_image.h	/^   STBI__F_avg_first,$/;"	e	enum:__anon22
STBI__F_none	include/3rd_party/stb_image.h	/^   STBI__F_none=0,$/;"	e	enum:__anon53
STBI__F_none	test/include/3rd_party/stb_image.h	/^   STBI__F_none=0,$/;"	e	enum:__anon22
STBI__F_paeth	include/3rd_party/stb_image.h	/^   STBI__F_paeth=4,$/;"	e	enum:__anon53
STBI__F_paeth	test/include/3rd_party/stb_image.h	/^   STBI__F_paeth=4,$/;"	e	enum:__anon22
STBI__F_paeth_first	include/3rd_party/stb_image.h	/^   STBI__F_paeth_first$/;"	e	enum:__anon53
STBI__F_paeth_first	test/include/3rd_party/stb_image.h	/^   STBI__F_paeth_first$/;"	e	enum:__anon22
STBI__F_sub	include/3rd_party/stb_image.h	/^   STBI__F_sub=1,$/;"	e	enum:__anon53
STBI__F_sub	test/include/3rd_party/stb_image.h	/^   STBI__F_sub=1,$/;"	e	enum:__anon22
STBI__F_up	include/3rd_party/stb_image.h	/^   STBI__F_up=2,$/;"	e	enum:__anon53
STBI__F_up	test/include/3rd_party/stb_image.h	/^   STBI__F_up=2,$/;"	e	enum:__anon22
STBI__HDR_BUFLEN	include/3rd_party/stb_image.h	6684;"	d
STBI__HDR_BUFLEN	test/include/3rd_party/stb_image.h	6684;"	d
STBI__IDCT_1D	include/3rd_party/stb_image.h	2217;"	d
STBI__IDCT_1D	test/include/3rd_party/stb_image.h	2217;"	d
STBI__MARKER_none	include/3rd_party/stb_image.h	2702;"	d
STBI__MARKER_none	test/include/3rd_party/stb_image.h	2702;"	d
STBI__PNG_TYPE	include/3rd_party/stb_image.h	4778;"	d
STBI__PNG_TYPE	test/include/3rd_party/stb_image.h	4778;"	d
STBI__RESTART	include/3rd_party/stb_image.h	2719;"	d
STBI__RESTART	test/include/3rd_party/stb_image.h	2719;"	d
STBI__SCAN_header	include/3rd_party/stb_image.h	/^   STBI__SCAN_header$/;"	e	enum:__anon44
STBI__SCAN_header	test/include/3rd_party/stb_image.h	/^   STBI__SCAN_header$/;"	e	enum:__anon13
STBI__SCAN_load	include/3rd_party/stb_image.h	/^   STBI__SCAN_load=0,$/;"	e	enum:__anon44
STBI__SCAN_load	test/include/3rd_party/stb_image.h	/^   STBI__SCAN_load=0,$/;"	e	enum:__anon13
STBI__SCAN_type	include/3rd_party/stb_image.h	/^   STBI__SCAN_type,$/;"	e	enum:__anon44
STBI__SCAN_type	test/include/3rd_party/stb_image.h	/^   STBI__SCAN_type,$/;"	e	enum:__anon13
STBI__X64_TARGET	include/3rd_party/stb_image.h	607;"	d
STBI__X64_TARGET	test/include/3rd_party/stb_image.h	607;"	d
STBI__X86_TARGET	include/3rd_party/stb_image.h	609;"	d
STBI__X86_TARGET	test/include/3rd_party/stb_image.h	609;"	d
STBI__ZFAST_BITS	include/3rd_party/stb_image.h	3839;"	d
STBI__ZFAST_BITS	test/include/3rd_party/stb_image.h	3839;"	d
STBI__ZFAST_MASK	include/3rd_party/stb_image.h	3840;"	d
STBI__ZFAST_MASK	test/include/3rd_party/stb_image.h	3840;"	d
STBI_default	include/3rd_party/stb_image.h	/^   STBI_default = 0, \/\/ only used for desired_channels$/;"	e	enum:__anon39
STBI_default	test/include/3rd_party/stb_image.h	/^   STBI_default = 0, \/\/ only used for desired_channels$/;"	e	enum:__anon8
STBI_grey	include/3rd_party/stb_image.h	/^   STBI_grey       = 1,$/;"	e	enum:__anon39
STBI_grey	test/include/3rd_party/stb_image.h	/^   STBI_grey       = 1,$/;"	e	enum:__anon8
STBI_grey_alpha	include/3rd_party/stb_image.h	/^   STBI_grey_alpha = 2,$/;"	e	enum:__anon39
STBI_grey_alpha	test/include/3rd_party/stb_image.h	/^   STBI_grey_alpha = 2,$/;"	e	enum:__anon8
STBI_rgb	include/3rd_party/stb_image.h	/^   STBI_rgb        = 3,$/;"	e	enum:__anon39
STBI_rgb	test/include/3rd_party/stb_image.h	/^   STBI_rgb        = 3,$/;"	e	enum:__anon8
STBI_rgb_alpha	include/3rd_party/stb_image.h	/^   STBI_rgb_alpha  = 4$/;"	e	enum:__anon39
STBI_rgb_alpha	test/include/3rd_party/stb_image.h	/^   STBI_rgb_alpha  = 4$/;"	e	enum:__anon8
STB_IMAGE_IMPLEMENTATION	include/3rd_party/image_process.h	17;"	d
STB_IMAGE_IMPLEMENTATION	test/include/3rd_party/image_process.h	17;"	d
STB_IMAGE_STATIC	include/3rd_party/image_process.h	15;"	d
STB_IMAGE_STATIC	test/include/3rd_party/image_process.h	15;"	d
STB_IMAGE_WRITE_IMPLEMENTATION	include/3rd_party/image_process.h	18;"	d
STB_IMAGE_WRITE_IMPLEMENTATION	test/include/3rd_party/image_process.h	18;"	d
STB_IMAGE_WRITE_STATIC	include/3rd_party/image_process.h	16;"	d
STB_IMAGE_WRITE_STATIC	test/include/3rd_party/image_process.h	16;"	d
ScaleToFit	include/3rd_party/Matrix.h	/^    enum ScaleToFit {$/;"	g	class:CV::Matrix	access:public
ScaleToFit	test/include/3rd_party/Matrix.h	/^    enum ScaleToFit {$/;"	g	class:CV::Matrix	access:public
ScaleTrans_xy	test/model/3rd_party/Matrix.cc	/^void Matrix::ScaleTrans_xy(const Matrix& m, float sx, float sy, Point* pt) {$/;"	f	class:CV::Matrix	signature:(const Matrix& m, float sx, float sy, Point* pt)
Scale_xy	test/model/3rd_party/Matrix.cc	/^void Matrix::Scale_xy(const Matrix& m, float sx, float sy, Point* pt) {$/;"	f	class:CV::Matrix	signature:(const Matrix& m, float sx, float sy, Point* pt)
SetAffineIdentity	test/model/3rd_party/Matrix.cc	/^void Matrix::SetAffineIdentity(float affine[6]) {$/;"	f	class:CV::Matrix	signature:(float affine[6])
SkDegreesToRadians	test/model/3rd_party/Matrix.cc	39;"	d	file:
SkMatrix_DEFINED	include/3rd_party/Matrix.h	24;"	d
SkMatrix_DEFINED	test/include/3rd_party/Matrix.h	24;"	d
SkRadiansToDegrees	test/model/3rd_party/Matrix.cc	40;"	d	file:
SkRect_DEFINED	include/3rd_party/Rect.h	27;"	d
SkRect_DEFINED	test/include/3rd_party/Rect.h	27;"	d
SkScalarAs2sCompliment	test/model/3rd_party/Matrix.cc	/^static inline int32_t SkScalarAs2sCompliment(float xFloat) {$/;"	f	namespace:CV	signature:(float xFloat)
TASK_LEN	test/sample/aip_covent/aip_covent_test.c	29;"	d	file:
TIME_OUT_EN	src/jz_aip_hal.c	16;"	d	file:
TIME_OUT_EN	src/jz_aip_hal.c	18;"	d	file:
Trans_xy	test/model/3rd_party/Matrix.cc	/^void Matrix::Trans_xy(const Matrix& m, float sx, float sy, Point* pt) {$/;"	f	class:CV::Matrix	signature:(const Matrix& m, float sx, float sy, Point* pt)
TypeMask	include/3rd_party/Matrix.h	/^    enum TypeMask {$/;"	g	class:CV::Matrix	access:public
TypeMask	test/include/3rd_party/Matrix.h	/^    enum TypeMask {$/;"	g	class:CV::Matrix	access:public
YCbCr_to_RGB_kernel	include/3rd_party/stb_image.h	/^   void (*YCbCr_to_RGB_kernel)(stbi_uc *out, const stbi_uc *y, const stbi_uc *pcb, const stbi_uc *pcr, int count, int step);$/;"	m	struct:__anon46	access:public
YCbCr_to_RGB_kernel	test/include/3rd_party/stb_image.h	/^   void (*YCbCr_to_RGB_kernel)(stbi_uc *out, const stbi_uc *y, const stbi_uc *pcb, const stbi_uc *pcr, int count, int step);$/;"	m	struct:__anon15	access:public
_CRT_NONSTDC_NO_DEPRECATE	include/3rd_party/stb_image_write.h	208;"	d
_CRT_NONSTDC_NO_DEPRECATE	test/include/3rd_party/stb_image_write.h	208;"	d
_CRT_SECURE_NO_WARNINGS	include/3rd_party/stb_image_write.h	205;"	d
_CRT_SECURE_NO_WARNINGS	test/include/3rd_party/stb_image_write.h	205;"	d
__AIE_MMAP_H__	include/jz_aip/aie_mmap.h	13;"	d
__AIE_MMAP_H__	test/include/drivers/aie_mmap.h	13;"	d
__AIP_F_MDL_H__	include/model/aip_f_mdl.h	13;"	d
__AIP_F_MDL_H__	test/include/model/aip_f_mdl.h	13;"	d
__AIP_P_MDL_H__	include/model/aip_p_mdl.h	13;"	d
__AIP_P_MDL_H__	test/include/model/aip_p_mdl.h	13;"	d
__BSCALER_A1_H__	include/model/bs_src.h	2;"	d
__BSCALER_A1_H__	test/include/model/bs_src.h	2;"	d
__BSCALER_API_H__	include/jz_aip/ingenic_aip.h	2;"	d
__DDR_MEM_H__	include/jz_aip/ddr_mem.h	2;"	d
__DDR_MEM_H__	test/include/drivers/ddr_mem.h	2;"	d
__DRIVERS_UTILS_H__	test/include/drivers/utils.h	2;"	d
__IMAGE_PROCESS_H__	include/3rd_party/image_process.h	13;"	d
__IMAGE_PROCESS_H__	test/include/3rd_party/image_process.h	13;"	d
__JZMXU_COMMON_HPP__	test/model/mxu_common.hpp	2;"	d
__JZMXU_CORE_TYPES_C_H__	include/model/mxu_types_c.h	2;"	d
__JZMXU_CORE_TYPES_C_H__	test/include/model/mxu_types_c.h	2;"	d
__JZ_AIP_H__	src/jz_aip_hal.h	2;"	d
__ORAM_MEM_H__	include/jz_aip/oram_mem.h	2;"	d
__ORAM_MEM_H__	test/include/drivers/oram_mem.h	2;"	d
__aie_get_bscaler_io_vbase	include/jz_aip/aie_mmap.h	/^uint32_t __aie_get_bscaler_io_vbase() {$/;"	f	signature:()
__aie_get_bscaler_io_vbase	test/include/drivers/aie_mmap.h	/^inline __attribute__((always_inline)) uint32_t __aie_get_bscaler_io_vbase() {$/;"	f	signature:()
__aie_get_ddr_cache_attr	include/jz_aip/aie_mmap.h	/^uint32_t __aie_get_ddr_cache_attr() {$/;"	f	signature:()
__aie_get_ddr_cache_attr	test/include/drivers/aie_mmap.h	/^inline __attribute__((always_inline)) uint32_t __aie_get_ddr_cache_attr() {$/;"	f	signature:()
__aie_get_ddr_paddr	include/jz_aip/aie_mmap.h	/^uint32_t __aie_get_ddr_paddr(uint32_t ddr_vaddr) {$/;"	f	signature:(uint32_t ddr_vaddr)
__aie_get_ddr_paddr	test/include/drivers/aie_mmap.h	/^inline __attribute__((always_inline)) uint32_t __aie_get_ddr_paddr(uint32_t ddr_vaddr) {$/;"	f	signature:(uint32_t ddr_vaddr)
__aie_get_desram_cache_attr	include/jz_aip/aie_mmap.h	/^uint32_t __aie_get_desram_cache_attr() {$/;"	f	signature:()
__aie_get_desram_cache_attr	test/include/drivers/aie_mmap.h	/^inline __attribute__((always_inline)) uint32_t __aie_get_desram_cache_attr() {$/;"	f	signature:()
__aie_get_nndbg_io_vbase	include/jz_aip/aie_mmap.h	/^uint32_t __aie_get_nndbg_io_vbase() {$/;"	f	signature:()
__aie_get_nndbg_io_vbase	test/include/drivers/aie_mmap.h	/^inline __attribute__((always_inline)) uint32_t __aie_get_nndbg_io_vbase() {$/;"	f	signature:()
__aie_get_nndma_desram_vbase	include/jz_aip/aie_mmap.h	/^uint32_t __aie_get_nndma_desram_vbase() {$/;"	f	signature:()
__aie_get_nndma_desram_vbase	test/include/drivers/aie_mmap.h	/^inline __attribute__((always_inline)) uint32_t __aie_get_nndma_desram_vbase() {$/;"	f	signature:()
__aie_get_nndma_io_vbase	include/jz_aip/aie_mmap.h	/^uint32_t __aie_get_nndma_io_vbase() {$/;"	f	signature:()
__aie_get_nndma_io_vbase	test/include/drivers/aie_mmap.h	/^inline __attribute__((always_inline)) uint32_t __aie_get_nndma_io_vbase() {$/;"	f	signature:()
__aie_get_oram_cache_attr	include/jz_aip/aie_mmap.h	/^uint32_t __aie_get_oram_cache_attr() {$/;"	f	signature:()
__aie_get_oram_cache_attr	test/include/drivers/aie_mmap.h	/^inline __attribute__((always_inline)) uint32_t __aie_get_oram_cache_attr() {$/;"	f	signature:()
__aie_get_oram_offset	include/jz_aip/aie_mmap.h	/^uint32_t __aie_get_oram_offset(uint32_t oram_vaddr) {$/;"	f	signature:(uint32_t oram_vaddr)
__aie_get_oram_offset	test/include/drivers/aie_mmap.h	/^inline __attribute__((always_inline)) uint32_t __aie_get_oram_offset(uint32_t oram_vaddr) {$/;"	f	signature:(uint32_t oram_vaddr)
__aie_get_oram_paddr	include/jz_aip/aie_mmap.h	/^uint32_t __aie_get_oram_paddr(uint32_t oram_vaddr) {$/;"	f	signature:(uint32_t oram_vaddr)
__aie_get_oram_paddr	test/include/drivers/aie_mmap.h	/^inline __attribute__((always_inline)) uint32_t __aie_get_oram_paddr(uint32_t oram_vaddr) {$/;"	f	signature:(uint32_t oram_vaddr)
__aie_get_oram_vbase	include/jz_aip/aie_mmap.h	/^uint32_t __aie_get_oram_vbase() {$/;"	f	signature:()
__aie_get_oram_vbase	test/include/drivers/aie_mmap.h	/^inline __attribute__((always_inline)) uint32_t __aie_get_oram_vbase() {$/;"	f	signature:()
__anon10::buffer_start	test/include/3rd_party/stb_image.h	/^   stbi_uc buffer_start[128];$/;"	m	struct:__anon10	access:public
__anon10::buflen	test/include/3rd_party/stb_image.h	/^   int buflen;$/;"	m	struct:__anon10	access:public
__anon10::img_buffer	test/include/3rd_party/stb_image.h	/^   stbi_uc *img_buffer, *img_buffer_end;$/;"	m	struct:__anon10	access:public
__anon10::img_buffer_end	test/include/3rd_party/stb_image.h	/^   stbi_uc *img_buffer, *img_buffer_end;$/;"	m	struct:__anon10	access:public
__anon10::img_buffer_original	test/include/3rd_party/stb_image.h	/^   stbi_uc *img_buffer_original, *img_buffer_original_end;$/;"	m	struct:__anon10	access:public
__anon10::img_buffer_original_end	test/include/3rd_party/stb_image.h	/^   stbi_uc *img_buffer_original, *img_buffer_original_end;$/;"	m	struct:__anon10	access:public
__anon10::img_n	test/include/3rd_party/stb_image.h	/^   int img_n, img_out_n;$/;"	m	struct:__anon10	access:public
__anon10::img_out_n	test/include/3rd_party/stb_image.h	/^   int img_n, img_out_n;$/;"	m	struct:__anon10	access:public
__anon10::img_x	test/include/3rd_party/stb_image.h	/^   stbi__uint32 img_x, img_y;$/;"	m	struct:__anon10	access:public
__anon10::img_y	test/include/3rd_party/stb_image.h	/^   stbi__uint32 img_x, img_y;$/;"	m	struct:__anon10	access:public
__anon10::io	test/include/3rd_party/stb_image.h	/^   stbi_io_callbacks io;$/;"	m	struct:__anon10	access:public
__anon10::io_user_data	test/include/3rd_party/stb_image.h	/^   void *io_user_data;$/;"	m	struct:__anon10	access:public
__anon10::read_from_callbacks	test/include/3rd_party/stb_image.h	/^   int read_from_callbacks;$/;"	m	struct:__anon10	access:public
__anon12::bits_per_channel	test/include/3rd_party/stb_image.h	/^   int bits_per_channel;$/;"	m	struct:__anon12	access:public
__anon12::channel_order	test/include/3rd_party/stb_image.h	/^   int channel_order;$/;"	m	struct:__anon12	access:public
__anon12::num_channels	test/include/3rd_party/stb_image.h	/^   int num_channels;$/;"	m	struct:__anon12	access:public
__anon14::code	test/include/3rd_party/stb_image.h	/^   stbi__uint16 code[256];$/;"	m	struct:__anon14	access:public
__anon14::delta	test/include/3rd_party/stb_image.h	/^   int    delta[17];   \/\/ old 'firstsymbol' - old 'firstcode'$/;"	m	struct:__anon14	access:public
__anon14::fast	test/include/3rd_party/stb_image.h	/^   stbi_uc  fast[1 << FAST_BITS];$/;"	m	struct:__anon14	access:public
__anon14::maxcode	test/include/3rd_party/stb_image.h	/^   unsigned int maxcode[18];$/;"	m	struct:__anon14	access:public
__anon14::size	test/include/3rd_party/stb_image.h	/^   stbi_uc  size[257];$/;"	m	struct:__anon14	access:public
__anon14::values	test/include/3rd_party/stb_image.h	/^   stbi_uc  values[256];$/;"	m	struct:__anon14	access:public
__anon15::YCbCr_to_RGB_kernel	test/include/3rd_party/stb_image.h	/^   void (*YCbCr_to_RGB_kernel)(stbi_uc *out, const stbi_uc *y, const stbi_uc *pcb, const stbi_uc *pcr, int count, int step);$/;"	m	struct:__anon15	access:public
__anon15::__anon16::coeff	test/include/3rd_party/stb_image.h	/^      short   *coeff;   \/\/ progressive only$/;"	m	struct:__anon15::__anon16	access:public
__anon15::__anon16::coeff_h	test/include/3rd_party/stb_image.h	/^      int      coeff_w, coeff_h; \/\/ number of 8x8 coefficient blocks$/;"	m	struct:__anon15::__anon16	access:public
__anon15::__anon16::coeff_w	test/include/3rd_party/stb_image.h	/^      int      coeff_w, coeff_h; \/\/ number of 8x8 coefficient blocks$/;"	m	struct:__anon15::__anon16	access:public
__anon15::__anon16::data	test/include/3rd_party/stb_image.h	/^      stbi_uc *data;$/;"	m	struct:__anon15::__anon16	access:public
__anon15::__anon16::dc_pred	test/include/3rd_party/stb_image.h	/^      int dc_pred;$/;"	m	struct:__anon15::__anon16	access:public
__anon15::__anon16::h	test/include/3rd_party/stb_image.h	/^      int h,v;$/;"	m	struct:__anon15::__anon16	access:public
__anon15::__anon16::h2	test/include/3rd_party/stb_image.h	/^      int x,y,w2,h2;$/;"	m	struct:__anon15::__anon16	access:public
__anon15::__anon16::ha	test/include/3rd_party/stb_image.h	/^      int hd,ha;$/;"	m	struct:__anon15::__anon16	access:public
__anon15::__anon16::hd	test/include/3rd_party/stb_image.h	/^      int hd,ha;$/;"	m	struct:__anon15::__anon16	access:public
__anon15::__anon16::id	test/include/3rd_party/stb_image.h	/^      int id;$/;"	m	struct:__anon15::__anon16	access:public
__anon15::__anon16::linebuf	test/include/3rd_party/stb_image.h	/^      stbi_uc *linebuf;$/;"	m	struct:__anon15::__anon16	access:public
__anon15::__anon16::raw_coeff	test/include/3rd_party/stb_image.h	/^      void *raw_data, *raw_coeff;$/;"	m	struct:__anon15::__anon16	access:public
__anon15::__anon16::raw_data	test/include/3rd_party/stb_image.h	/^      void *raw_data, *raw_coeff;$/;"	m	struct:__anon15::__anon16	access:public
__anon15::__anon16::tq	test/include/3rd_party/stb_image.h	/^      int tq;$/;"	m	struct:__anon15::__anon16	access:public
__anon15::__anon16::v	test/include/3rd_party/stb_image.h	/^      int h,v;$/;"	m	struct:__anon15::__anon16	access:public
__anon15::__anon16::w2	test/include/3rd_party/stb_image.h	/^      int x,y,w2,h2;$/;"	m	struct:__anon15::__anon16	access:public
__anon15::__anon16::x	test/include/3rd_party/stb_image.h	/^      int x,y,w2,h2;$/;"	m	struct:__anon15::__anon16	access:public
__anon15::__anon16::y	test/include/3rd_party/stb_image.h	/^      int x,y,w2,h2;$/;"	m	struct:__anon15::__anon16	access:public
__anon15::app14_color_transform	test/include/3rd_party/stb_image.h	/^   int            app14_color_transform; \/\/ Adobe APP14 tag$/;"	m	struct:__anon15	access:public
__anon15::code_bits	test/include/3rd_party/stb_image.h	/^   int            code_bits;   \/\/ number of valid bits$/;"	m	struct:__anon15	access:public
__anon15::code_buffer	test/include/3rd_party/stb_image.h	/^   stbi__uint32   code_buffer; \/\/ jpeg entropy-coded buffer$/;"	m	struct:__anon15	access:public
__anon15::dequant	test/include/3rd_party/stb_image.h	/^   stbi__uint16 dequant[4][64];$/;"	m	struct:__anon15	access:public
__anon15::eob_run	test/include/3rd_party/stb_image.h	/^   int            eob_run;$/;"	m	struct:__anon15	access:public
__anon15::fast_ac	test/include/3rd_party/stb_image.h	/^   stbi__int16 fast_ac[4][1 << FAST_BITS];$/;"	m	struct:__anon15	access:public
__anon15::huff_ac	test/include/3rd_party/stb_image.h	/^   stbi__huffman huff_ac[4];$/;"	m	struct:__anon15	access:public
__anon15::huff_dc	test/include/3rd_party/stb_image.h	/^   stbi__huffman huff_dc[4];$/;"	m	struct:__anon15	access:public
__anon15::idct_block_kernel	test/include/3rd_party/stb_image.h	/^   void (*idct_block_kernel)(stbi_uc *out, int out_stride, short data[64]);$/;"	m	struct:__anon15	access:public
__anon15::img_comp	test/include/3rd_party/stb_image.h	/^   } img_comp[4];$/;"	m	struct:__anon15	typeref:struct:__anon15::__anon16	access:public
__anon15::img_h_max	test/include/3rd_party/stb_image.h	/^   int img_h_max, img_v_max;$/;"	m	struct:__anon15	access:public
__anon15::img_mcu_h	test/include/3rd_party/stb_image.h	/^   int img_mcu_w, img_mcu_h;$/;"	m	struct:__anon15	access:public
__anon15::img_mcu_w	test/include/3rd_party/stb_image.h	/^   int img_mcu_w, img_mcu_h;$/;"	m	struct:__anon15	access:public
__anon15::img_mcu_x	test/include/3rd_party/stb_image.h	/^   int img_mcu_x, img_mcu_y;$/;"	m	struct:__anon15	access:public
__anon15::img_mcu_y	test/include/3rd_party/stb_image.h	/^   int img_mcu_x, img_mcu_y;$/;"	m	struct:__anon15	access:public
__anon15::img_v_max	test/include/3rd_party/stb_image.h	/^   int img_h_max, img_v_max;$/;"	m	struct:__anon15	access:public
__anon15::jfif	test/include/3rd_party/stb_image.h	/^   int            jfif;$/;"	m	struct:__anon15	access:public
__anon15::marker	test/include/3rd_party/stb_image.h	/^   unsigned char  marker;      \/\/ marker seen while filling entropy buffer$/;"	m	struct:__anon15	access:public
__anon15::nomore	test/include/3rd_party/stb_image.h	/^   int            nomore;      \/\/ flag if we saw a marker so must stop$/;"	m	struct:__anon15	access:public
__anon15::order	test/include/3rd_party/stb_image.h	/^   int scan_n, order[4];$/;"	m	struct:__anon15	access:public
__anon15::progressive	test/include/3rd_party/stb_image.h	/^   int            progressive;$/;"	m	struct:__anon15	access:public
__anon15::resample_row_hv_2_kernel	test/include/3rd_party/stb_image.h	/^   stbi_uc *(*resample_row_hv_2_kernel)(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs);$/;"	m	struct:__anon15	access:public
__anon15::restart_interval	test/include/3rd_party/stb_image.h	/^   int restart_interval, todo;$/;"	m	struct:__anon15	access:public
__anon15::rgb	test/include/3rd_party/stb_image.h	/^   int            rgb;$/;"	m	struct:__anon15	access:public
__anon15::s	test/include/3rd_party/stb_image.h	/^   stbi__context *s;$/;"	m	struct:__anon15	access:public
__anon15::scan_n	test/include/3rd_party/stb_image.h	/^   int scan_n, order[4];$/;"	m	struct:__anon15	access:public
__anon15::spec_end	test/include/3rd_party/stb_image.h	/^   int            spec_end;$/;"	m	struct:__anon15	access:public
__anon15::spec_start	test/include/3rd_party/stb_image.h	/^   int            spec_start;$/;"	m	struct:__anon15	access:public
__anon15::succ_high	test/include/3rd_party/stb_image.h	/^   int            succ_high;$/;"	m	struct:__anon15	access:public
__anon15::succ_low	test/include/3rd_party/stb_image.h	/^   int            succ_low;$/;"	m	struct:__anon15	access:public
__anon15::todo	test/include/3rd_party/stb_image.h	/^   int restart_interval, todo;$/;"	m	struct:__anon15	access:public
__anon17::hs	test/include/3rd_party/stb_image.h	/^   int hs,vs;   \/\/ expansion factor in each axis$/;"	m	struct:__anon17	access:public
__anon17::line0	test/include/3rd_party/stb_image.h	/^   stbi_uc *line0,*line1;$/;"	m	struct:__anon17	access:public
__anon17::line1	test/include/3rd_party/stb_image.h	/^   stbi_uc *line0,*line1;$/;"	m	struct:__anon17	access:public
__anon17::resample	test/include/3rd_party/stb_image.h	/^   resample_row_func resample;$/;"	m	struct:__anon17	access:public
__anon17::vs	test/include/3rd_party/stb_image.h	/^   int hs,vs;   \/\/ expansion factor in each axis$/;"	m	struct:__anon17	access:public
__anon17::w_lores	test/include/3rd_party/stb_image.h	/^   int w_lores; \/\/ horizontal pixels pre-expansion$/;"	m	struct:__anon17	access:public
__anon17::ypos	test/include/3rd_party/stb_image.h	/^   int ypos;    \/\/ which pre-expansion row we're on$/;"	m	struct:__anon17	access:public
__anon17::ystep	test/include/3rd_party/stb_image.h	/^   int ystep;   \/\/ how far through vertical expansion we are$/;"	m	struct:__anon17	access:public
__anon18::fast	test/include/3rd_party/stb_image.h	/^   stbi__uint16 fast[1 << STBI__ZFAST_BITS];$/;"	m	struct:__anon18	access:public
__anon18::firstcode	test/include/3rd_party/stb_image.h	/^   stbi__uint16 firstcode[16];$/;"	m	struct:__anon18	access:public
__anon18::firstsymbol	test/include/3rd_party/stb_image.h	/^   stbi__uint16 firstsymbol[16];$/;"	m	struct:__anon18	access:public
__anon18::maxcode	test/include/3rd_party/stb_image.h	/^   int maxcode[17];$/;"	m	struct:__anon18	access:public
__anon18::size	test/include/3rd_party/stb_image.h	/^   stbi_uc  size[288];$/;"	m	struct:__anon18	access:public
__anon18::value	test/include/3rd_party/stb_image.h	/^   stbi__uint16 value[288];$/;"	m	struct:__anon18	access:public
__anon19::code_buffer	test/include/3rd_party/stb_image.h	/^   stbi__uint32 code_buffer;$/;"	m	struct:__anon19	access:public
__anon19::num_bits	test/include/3rd_party/stb_image.h	/^   int num_bits;$/;"	m	struct:__anon19	access:public
__anon19::z_distance	test/include/3rd_party/stb_image.h	/^   stbi__zhuffman z_length, z_distance;$/;"	m	struct:__anon19	access:public
__anon19::z_expandable	test/include/3rd_party/stb_image.h	/^   int   z_expandable;$/;"	m	struct:__anon19	access:public
__anon19::z_length	test/include/3rd_party/stb_image.h	/^   stbi__zhuffman z_length, z_distance;$/;"	m	struct:__anon19	access:public
__anon19::zbuffer	test/include/3rd_party/stb_image.h	/^   stbi_uc *zbuffer, *zbuffer_end;$/;"	m	struct:__anon19	access:public
__anon19::zbuffer_end	test/include/3rd_party/stb_image.h	/^   stbi_uc *zbuffer, *zbuffer_end;$/;"	m	struct:__anon19	access:public
__anon19::zout	test/include/3rd_party/stb_image.h	/^   char *zout;$/;"	m	struct:__anon19	access:public
__anon19::zout_end	test/include/3rd_party/stb_image.h	/^   char *zout_end;$/;"	m	struct:__anon19	access:public
__anon19::zout_start	test/include/3rd_party/stb_image.h	/^   char *zout_start;$/;"	m	struct:__anon19	access:public
__anon20::length	test/include/3rd_party/stb_image.h	/^   stbi__uint32 length;$/;"	m	struct:__anon20	access:public
__anon20::type	test/include/3rd_party/stb_image.h	/^   stbi__uint32 type;$/;"	m	struct:__anon20	access:public
__anon21::depth	test/include/3rd_party/stb_image.h	/^   int depth;$/;"	m	struct:__anon21	access:public
__anon21::expanded	test/include/3rd_party/stb_image.h	/^   stbi_uc *idata, *expanded, *out;$/;"	m	struct:__anon21	access:public
__anon21::idata	test/include/3rd_party/stb_image.h	/^   stbi_uc *idata, *expanded, *out;$/;"	m	struct:__anon21	access:public
__anon21::out	test/include/3rd_party/stb_image.h	/^   stbi_uc *idata, *expanded, *out;$/;"	m	struct:__anon21	access:public
__anon21::s	test/include/3rd_party/stb_image.h	/^   stbi__context *s;$/;"	m	struct:__anon21	access:public
__anon23::all_a	test/include/3rd_party/stb_image.h	/^   unsigned int mr,mg,mb,ma, all_a;$/;"	m	struct:__anon23	access:public
__anon23::bpp	test/include/3rd_party/stb_image.h	/^   int bpp, offset, hsz;$/;"	m	struct:__anon23	access:public
__anon23::hsz	test/include/3rd_party/stb_image.h	/^   int bpp, offset, hsz;$/;"	m	struct:__anon23	access:public
__anon23::ma	test/include/3rd_party/stb_image.h	/^   unsigned int mr,mg,mb,ma, all_a;$/;"	m	struct:__anon23	access:public
__anon23::mb	test/include/3rd_party/stb_image.h	/^   unsigned int mr,mg,mb,ma, all_a;$/;"	m	struct:__anon23	access:public
__anon23::mg	test/include/3rd_party/stb_image.h	/^   unsigned int mr,mg,mb,ma, all_a;$/;"	m	struct:__anon23	access:public
__anon23::mr	test/include/3rd_party/stb_image.h	/^   unsigned int mr,mg,mb,ma, all_a;$/;"	m	struct:__anon23	access:public
__anon23::offset	test/include/3rd_party/stb_image.h	/^   int bpp, offset, hsz;$/;"	m	struct:__anon23	access:public
__anon24::channel	test/include/3rd_party/stb_image.h	/^   stbi_uc size,type,channel;$/;"	m	struct:__anon24	access:public
__anon24::size	test/include/3rd_party/stb_image.h	/^   stbi_uc size,type,channel;$/;"	m	struct:__anon24	access:public
__anon24::type	test/include/3rd_party/stb_image.h	/^   stbi_uc size,type,channel;$/;"	m	struct:__anon24	access:public
__anon25::first	test/include/3rd_party/stb_image.h	/^   stbi_uc first;$/;"	m	struct:__anon25	access:public
__anon25::prefix	test/include/3rd_party/stb_image.h	/^   stbi__int16 prefix;$/;"	m	struct:__anon25	access:public
__anon25::suffix	test/include/3rd_party/stb_image.h	/^   stbi_uc suffix;$/;"	m	struct:__anon25	access:public
__anon26::background	test/include/3rd_party/stb_image.h	/^   stbi_uc *background;          \/\/ The current "background" as far as a gif is concerned$/;"	m	struct:__anon26	access:public
__anon26::bgindex	test/include/3rd_party/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags;$/;"	m	struct:__anon26	access:public
__anon26::codes	test/include/3rd_party/stb_image.h	/^   stbi__gif_lzw codes[8192];$/;"	m	struct:__anon26	access:public
__anon26::color_table	test/include/3rd_party/stb_image.h	/^   stbi_uc *color_table;$/;"	m	struct:__anon26	access:public
__anon26::cur_x	test/include/3rd_party/stb_image.h	/^   int cur_x, cur_y;$/;"	m	struct:__anon26	access:public
__anon26::cur_y	test/include/3rd_party/stb_image.h	/^   int cur_x, cur_y;$/;"	m	struct:__anon26	access:public
__anon26::delay	test/include/3rd_party/stb_image.h	/^   int delay;$/;"	m	struct:__anon26	access:public
__anon26::eflags	test/include/3rd_party/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags;$/;"	m	struct:__anon26	access:public
__anon26::flags	test/include/3rd_party/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags;$/;"	m	struct:__anon26	access:public
__anon26::h	test/include/3rd_party/stb_image.h	/^   int w,h;$/;"	m	struct:__anon26	access:public
__anon26::history	test/include/3rd_party/stb_image.h	/^   stbi_uc *history;$/;"	m	struct:__anon26	access:public
__anon26::lflags	test/include/3rd_party/stb_image.h	/^   int lflags;$/;"	m	struct:__anon26	access:public
__anon26::line_size	test/include/3rd_party/stb_image.h	/^   int line_size;$/;"	m	struct:__anon26	access:public
__anon26::lpal	test/include/3rd_party/stb_image.h	/^   stbi_uc lpal[256][4];$/;"	m	struct:__anon26	access:public
__anon26::max_x	test/include/3rd_party/stb_image.h	/^   int max_x, max_y;$/;"	m	struct:__anon26	access:public
__anon26::max_y	test/include/3rd_party/stb_image.h	/^   int max_x, max_y;$/;"	m	struct:__anon26	access:public
__anon26::out	test/include/3rd_party/stb_image.h	/^   stbi_uc *out;                 \/\/ output buffer (always 4 components)$/;"	m	struct:__anon26	access:public
__anon26::pal	test/include/3rd_party/stb_image.h	/^   stbi_uc  pal[256][4];$/;"	m	struct:__anon26	access:public
__anon26::parse	test/include/3rd_party/stb_image.h	/^   int parse, step;$/;"	m	struct:__anon26	access:public
__anon26::ratio	test/include/3rd_party/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags;$/;"	m	struct:__anon26	access:public
__anon26::start_x	test/include/3rd_party/stb_image.h	/^   int start_x, start_y;$/;"	m	struct:__anon26	access:public
__anon26::start_y	test/include/3rd_party/stb_image.h	/^   int start_x, start_y;$/;"	m	struct:__anon26	access:public
__anon26::step	test/include/3rd_party/stb_image.h	/^   int parse, step;$/;"	m	struct:__anon26	access:public
__anon26::transparent	test/include/3rd_party/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags;$/;"	m	struct:__anon26	access:public
__anon26::w	test/include/3rd_party/stb_image.h	/^   int w,h;$/;"	m	struct:__anon26	access:public
__anon27::context	test/include/3rd_party/stb_image_write.h	/^   void *context;$/;"	m	struct:__anon27	access:public
__anon27::func	test/include/3rd_party/stb_image_write.h	/^   stbi_write_func *func;$/;"	m	struct:__anon27	access:public
__anon29::bitmode	include/model/aip_f_mdl.h	/^	uint8_t                     bitmode;$/;"	m	struct:__anon29	access:public
__anon29::dst_base	include/model/aip_f_mdl.h	/^	uint8_t                     *dst_base;$/;"	m	struct:__anon29	access:public
__anon29::dst_cbase	include/model/aip_f_mdl.h	/^	uint8_t                     *dst_cbase;$/;"	m	struct:__anon29	access:public
__anon29::dst_h	include/model/aip_f_mdl.h	/^	int16_t                     dst_h;$/;"	m	struct:__anon29	access:public
__anon29::dst_stride	include/model/aip_f_mdl.h	/^	int16_t                     dst_stride;$/;"	m	struct:__anon29	access:public
__anon29::dst_w	include/model/aip_f_mdl.h	/^	int16_t                     dst_w;$/;"	m	struct:__anon29	access:public
__anon29::scale_x	include/model/aip_f_mdl.h	/^	int32_t                     scale_x;$/;"	m	struct:__anon29	access:public
__anon29::scale_y	include/model/aip_f_mdl.h	/^	int32_t                     scale_y;$/;"	m	struct:__anon29	access:public
__anon29::src_base	include/model/aip_f_mdl.h	/^	uint8_t                     *src_base;$/;"	m	struct:__anon29	access:public
__anon29::src_cbase	include/model/aip_f_mdl.h	/^	uint8_t                     *src_cbase;$/;"	m	struct:__anon29	access:public
__anon29::src_h	include/model/aip_f_mdl.h	/^	int16_t                     src_h;$/;"	m	struct:__anon29	access:public
__anon29::src_stride	include/model/aip_f_mdl.h	/^	int16_t                     src_stride;$/;"	m	struct:__anon29	access:public
__anon29::src_w	include/model/aip_f_mdl.h	/^	int16_t                     src_w;$/;"	m	struct:__anon29	access:public
__anon29::trans_x	include/model/aip_f_mdl.h	/^	int32_t                     trans_x;$/;"	m	struct:__anon29	access:public
__anon29::trans_y	include/model/aip_f_mdl.h	/^	int32_t                     trans_y;$/;"	m	struct:__anon29	access:public
__anon30::h	include/jz_aip/ingenic_aip.h	/^    int                 h;$/;"	m	struct:__anon30	access:public
__anon30::w	include/jz_aip/ingenic_aip.h	/^    int                 w;$/;"	m	struct:__anon30	access:public
__anon30::x	include/jz_aip/ingenic_aip.h	/^    int                 x;$/;"	m	struct:__anon30	access:public
__anon30::y	include/jz_aip/ingenic_aip.h	/^    int                 y;$/;"	m	struct:__anon30	access:public
__anon31::box	include/jz_aip/ingenic_aip.h	/^    box_info_s          box;\/\/source box$/;"	m	struct:__anon31	access:public
__anon31::matrix	include/jz_aip/ingenic_aip.h	/^    float               matrix[9];\/\/fixme$/;"	m	struct:__anon31	access:public
__anon31::wrap	include/jz_aip/ingenic_aip.h	/^    uint32_t            wrap;$/;"	m	struct:__anon31	access:public
__anon31::zero_point	include/jz_aip/ingenic_aip.h	/^    uint32_t            zero_point;$/;"	m	struct:__anon31	access:public
__anon32::box	include/jz_aip/ingenic_aip.h	/^    box_info_s          box;\/\/source box$/;"	m	struct:__anon32	access:public
__anon32::matrix	include/jz_aip/ingenic_aip.h	/^    float               matrix[9];$/;"	m	struct:__anon32	access:public
__anon32::wrap	include/jz_aip/ingenic_aip.h	/^    uint32_t            wrap;$/;"	m	struct:__anon32	access:public
__anon32::zero_point	include/jz_aip/ingenic_aip.h	/^    uint32_t            zero_point;$/;"	m	struct:__anon32	access:public
__anon33::box	include/jz_aip/ingenic_aip.h	/^    box_info_s          box;\/\/source box$/;"	m	struct:__anon33	access:public
__anon33::wrap	include/jz_aip/ingenic_aip.h	/^    uint32_t            wrap;$/;"	m	struct:__anon33	access:public
__anon33::zero_point	include/jz_aip/ingenic_aip.h	/^    uint32_t            zero_point;$/;"	m	struct:__anon33	access:public
__anon36::base	include/jz_aip/ingenic_aip.h	/^    uint32_t		base;$/;"	m	struct:__anon36	access:public
__anon36::base1	include/jz_aip/ingenic_aip.h	/^    uint32_t		base1;$/;"	m	struct:__anon36	access:public
__anon36::chn	include/jz_aip/ingenic_aip.h	/^    int                 chn;$/;"	m	struct:__anon36	access:public
__anon36::format	include/jz_aip/ingenic_aip.h	/^    bs_data_format_e    format;$/;"	m	struct:__anon36	access:public
__anon36::height	include/jz_aip/ingenic_aip.h	/^    int                 height;$/;"	m	struct:__anon36	access:public
__anon36::line_stride	include/jz_aip/ingenic_aip.h	/^    int                 line_stride;$/;"	m	struct:__anon36	access:public
__anon36::locate	include/jz_aip/ingenic_aip.h	/^    bs_data_locate_e    locate;$/;"	m	struct:__anon36	access:public
__anon36::width	include/jz_aip/ingenic_aip.h	/^    int                 width;$/;"	m	struct:__anon36	access:public
__anon37::k_stride_x	include/jz_aip/ingenic_aip.h	/^    uint8_t             k_stride_x; \/\/ kernel stride in x$/;"	m	struct:__anon37	access:public
__anon37::k_stride_y	include/jz_aip/ingenic_aip.h	/^    uint8_t             k_stride_y; \/\/ kernel stride in y$/;"	m	struct:__anon37	access:public
__anon37::kh	include/jz_aip/ingenic_aip.h	/^    uint8_t             kh; \/\/ kernel size height$/;"	m	struct:__anon37	access:public
__anon37::kw	include/jz_aip/ingenic_aip.h	/^    uint8_t             kw; \/\/ kernel size width$/;"	m	struct:__anon37	access:public
__anon37::pad_bottom	include/jz_aip/ingenic_aip.h	/^    uint8_t             pad_bottom;$/;"	m	struct:__anon37	access:public
__anon37::pad_left	include/jz_aip/ingenic_aip.h	/^    uint8_t             pad_left;$/;"	m	struct:__anon37	access:public
__anon37::pad_right	include/jz_aip/ingenic_aip.h	/^    uint8_t             pad_right;$/;"	m	struct:__anon37	access:public
__anon37::pad_top	include/jz_aip/ingenic_aip.h	/^    uint8_t             pad_top;$/;"	m	struct:__anon37	access:public
__anon37::plane_stride	include/jz_aip/ingenic_aip.h	/^    uint32_t            plane_stride;$/;"	m	struct:__anon37	access:public
__anon37::task_len	include/jz_aip/ingenic_aip.h	/^    uint32_t            task_len;$/;"	m	struct:__anon37	access:public
__anon37::zero_point	include/jz_aip/ingenic_aip.h	/^    uint32_t            zero_point; \/\/ 3 chain$/;"	m	struct:__anon37	access:public
__anon38::plane_stride	include/jz_aip/ingenic_aip.h	/^    uint32_t            plane_stride;$/;"	m	struct:__anon38	access:public
__anon38::task_len	include/jz_aip/ingenic_aip.h	/^    uint32_t            task_len;$/;"	m	struct:__anon38	access:public
__anon38::zero_point	include/jz_aip/ingenic_aip.h	/^    uint32_t            zero_point; \/\/ 3 chain$/;"	m	struct:__anon38	access:public
__anon40::eof	include/3rd_party/stb_image.h	/^   int      (*eof)   (void *user);                       \/\/ returns nonzero if we are at end of file\/data$/;"	m	struct:__anon40	access:public
__anon40::read	include/3rd_party/stb_image.h	/^   int      (*read)  (void *user,char *data,int size);   \/\/ fill 'data' with 'size' bytes.  return number of bytes actually read$/;"	m	struct:__anon40	access:public
__anon40::skip	include/3rd_party/stb_image.h	/^   void     (*skip)  (void *user,int n);                 \/\/ skip the next 'n' bytes, or 'unget' the last -n bytes if negative$/;"	m	struct:__anon40	access:public
__anon41::buffer_start	include/3rd_party/stb_image.h	/^   stbi_uc buffer_start[128];$/;"	m	struct:__anon41	access:public
__anon41::buflen	include/3rd_party/stb_image.h	/^   int buflen;$/;"	m	struct:__anon41	access:public
__anon41::img_buffer	include/3rd_party/stb_image.h	/^   stbi_uc *img_buffer, *img_buffer_end;$/;"	m	struct:__anon41	access:public
__anon41::img_buffer_end	include/3rd_party/stb_image.h	/^   stbi_uc *img_buffer, *img_buffer_end;$/;"	m	struct:__anon41	access:public
__anon41::img_buffer_original	include/3rd_party/stb_image.h	/^   stbi_uc *img_buffer_original, *img_buffer_original_end;$/;"	m	struct:__anon41	access:public
__anon41::img_buffer_original_end	include/3rd_party/stb_image.h	/^   stbi_uc *img_buffer_original, *img_buffer_original_end;$/;"	m	struct:__anon41	access:public
__anon41::img_n	include/3rd_party/stb_image.h	/^   int img_n, img_out_n;$/;"	m	struct:__anon41	access:public
__anon41::img_out_n	include/3rd_party/stb_image.h	/^   int img_n, img_out_n;$/;"	m	struct:__anon41	access:public
__anon41::img_x	include/3rd_party/stb_image.h	/^   stbi__uint32 img_x, img_y;$/;"	m	struct:__anon41	access:public
__anon41::img_y	include/3rd_party/stb_image.h	/^   stbi__uint32 img_x, img_y;$/;"	m	struct:__anon41	access:public
__anon41::io	include/3rd_party/stb_image.h	/^   stbi_io_callbacks io;$/;"	m	struct:__anon41	access:public
__anon41::io_user_data	include/3rd_party/stb_image.h	/^   void *io_user_data;$/;"	m	struct:__anon41	access:public
__anon41::read_from_callbacks	include/3rd_party/stb_image.h	/^   int read_from_callbacks;$/;"	m	struct:__anon41	access:public
__anon43::bits_per_channel	include/3rd_party/stb_image.h	/^   int bits_per_channel;$/;"	m	struct:__anon43	access:public
__anon43::channel_order	include/3rd_party/stb_image.h	/^   int channel_order;$/;"	m	struct:__anon43	access:public
__anon43::num_channels	include/3rd_party/stb_image.h	/^   int num_channels;$/;"	m	struct:__anon43	access:public
__anon45::code	include/3rd_party/stb_image.h	/^   stbi__uint16 code[256];$/;"	m	struct:__anon45	access:public
__anon45::delta	include/3rd_party/stb_image.h	/^   int    delta[17];   \/\/ old 'firstsymbol' - old 'firstcode'$/;"	m	struct:__anon45	access:public
__anon45::fast	include/3rd_party/stb_image.h	/^   stbi_uc  fast[1 << FAST_BITS];$/;"	m	struct:__anon45	access:public
__anon45::maxcode	include/3rd_party/stb_image.h	/^   unsigned int maxcode[18];$/;"	m	struct:__anon45	access:public
__anon45::size	include/3rd_party/stb_image.h	/^   stbi_uc  size[257];$/;"	m	struct:__anon45	access:public
__anon45::values	include/3rd_party/stb_image.h	/^   stbi_uc  values[256];$/;"	m	struct:__anon45	access:public
__anon46::YCbCr_to_RGB_kernel	include/3rd_party/stb_image.h	/^   void (*YCbCr_to_RGB_kernel)(stbi_uc *out, const stbi_uc *y, const stbi_uc *pcb, const stbi_uc *pcr, int count, int step);$/;"	m	struct:__anon46	access:public
__anon46::__anon47::coeff	include/3rd_party/stb_image.h	/^      short   *coeff;   \/\/ progressive only$/;"	m	struct:__anon46::__anon47	access:public
__anon46::__anon47::coeff_h	include/3rd_party/stb_image.h	/^      int      coeff_w, coeff_h; \/\/ number of 8x8 coefficient blocks$/;"	m	struct:__anon46::__anon47	access:public
__anon46::__anon47::coeff_w	include/3rd_party/stb_image.h	/^      int      coeff_w, coeff_h; \/\/ number of 8x8 coefficient blocks$/;"	m	struct:__anon46::__anon47	access:public
__anon46::__anon47::data	include/3rd_party/stb_image.h	/^      stbi_uc *data;$/;"	m	struct:__anon46::__anon47	access:public
__anon46::__anon47::dc_pred	include/3rd_party/stb_image.h	/^      int dc_pred;$/;"	m	struct:__anon46::__anon47	access:public
__anon46::__anon47::h	include/3rd_party/stb_image.h	/^      int h,v;$/;"	m	struct:__anon46::__anon47	access:public
__anon46::__anon47::h2	include/3rd_party/stb_image.h	/^      int x,y,w2,h2;$/;"	m	struct:__anon46::__anon47	access:public
__anon46::__anon47::ha	include/3rd_party/stb_image.h	/^      int hd,ha;$/;"	m	struct:__anon46::__anon47	access:public
__anon46::__anon47::hd	include/3rd_party/stb_image.h	/^      int hd,ha;$/;"	m	struct:__anon46::__anon47	access:public
__anon46::__anon47::id	include/3rd_party/stb_image.h	/^      int id;$/;"	m	struct:__anon46::__anon47	access:public
__anon46::__anon47::linebuf	include/3rd_party/stb_image.h	/^      stbi_uc *linebuf;$/;"	m	struct:__anon46::__anon47	access:public
__anon46::__anon47::raw_coeff	include/3rd_party/stb_image.h	/^      void *raw_data, *raw_coeff;$/;"	m	struct:__anon46::__anon47	access:public
__anon46::__anon47::raw_data	include/3rd_party/stb_image.h	/^      void *raw_data, *raw_coeff;$/;"	m	struct:__anon46::__anon47	access:public
__anon46::__anon47::tq	include/3rd_party/stb_image.h	/^      int tq;$/;"	m	struct:__anon46::__anon47	access:public
__anon46::__anon47::v	include/3rd_party/stb_image.h	/^      int h,v;$/;"	m	struct:__anon46::__anon47	access:public
__anon46::__anon47::w2	include/3rd_party/stb_image.h	/^      int x,y,w2,h2;$/;"	m	struct:__anon46::__anon47	access:public
__anon46::__anon47::x	include/3rd_party/stb_image.h	/^      int x,y,w2,h2;$/;"	m	struct:__anon46::__anon47	access:public
__anon46::__anon47::y	include/3rd_party/stb_image.h	/^      int x,y,w2,h2;$/;"	m	struct:__anon46::__anon47	access:public
__anon46::app14_color_transform	include/3rd_party/stb_image.h	/^   int            app14_color_transform; \/\/ Adobe APP14 tag$/;"	m	struct:__anon46	access:public
__anon46::code_bits	include/3rd_party/stb_image.h	/^   int            code_bits;   \/\/ number of valid bits$/;"	m	struct:__anon46	access:public
__anon46::code_buffer	include/3rd_party/stb_image.h	/^   stbi__uint32   code_buffer; \/\/ jpeg entropy-coded buffer$/;"	m	struct:__anon46	access:public
__anon46::dequant	include/3rd_party/stb_image.h	/^   stbi__uint16 dequant[4][64];$/;"	m	struct:__anon46	access:public
__anon46::eob_run	include/3rd_party/stb_image.h	/^   int            eob_run;$/;"	m	struct:__anon46	access:public
__anon46::fast_ac	include/3rd_party/stb_image.h	/^   stbi__int16 fast_ac[4][1 << FAST_BITS];$/;"	m	struct:__anon46	access:public
__anon46::huff_ac	include/3rd_party/stb_image.h	/^   stbi__huffman huff_ac[4];$/;"	m	struct:__anon46	access:public
__anon46::huff_dc	include/3rd_party/stb_image.h	/^   stbi__huffman huff_dc[4];$/;"	m	struct:__anon46	access:public
__anon46::idct_block_kernel	include/3rd_party/stb_image.h	/^   void (*idct_block_kernel)(stbi_uc *out, int out_stride, short data[64]);$/;"	m	struct:__anon46	access:public
__anon46::img_comp	include/3rd_party/stb_image.h	/^   } img_comp[4];$/;"	m	struct:__anon46	typeref:struct:__anon46::__anon47	access:public
__anon46::img_h_max	include/3rd_party/stb_image.h	/^   int img_h_max, img_v_max;$/;"	m	struct:__anon46	access:public
__anon46::img_mcu_h	include/3rd_party/stb_image.h	/^   int img_mcu_w, img_mcu_h;$/;"	m	struct:__anon46	access:public
__anon46::img_mcu_w	include/3rd_party/stb_image.h	/^   int img_mcu_w, img_mcu_h;$/;"	m	struct:__anon46	access:public
__anon46::img_mcu_x	include/3rd_party/stb_image.h	/^   int img_mcu_x, img_mcu_y;$/;"	m	struct:__anon46	access:public
__anon46::img_mcu_y	include/3rd_party/stb_image.h	/^   int img_mcu_x, img_mcu_y;$/;"	m	struct:__anon46	access:public
__anon46::img_v_max	include/3rd_party/stb_image.h	/^   int img_h_max, img_v_max;$/;"	m	struct:__anon46	access:public
__anon46::jfif	include/3rd_party/stb_image.h	/^   int            jfif;$/;"	m	struct:__anon46	access:public
__anon46::marker	include/3rd_party/stb_image.h	/^   unsigned char  marker;      \/\/ marker seen while filling entropy buffer$/;"	m	struct:__anon46	access:public
__anon46::nomore	include/3rd_party/stb_image.h	/^   int            nomore;      \/\/ flag if we saw a marker so must stop$/;"	m	struct:__anon46	access:public
__anon46::order	include/3rd_party/stb_image.h	/^   int scan_n, order[4];$/;"	m	struct:__anon46	access:public
__anon46::progressive	include/3rd_party/stb_image.h	/^   int            progressive;$/;"	m	struct:__anon46	access:public
__anon46::resample_row_hv_2_kernel	include/3rd_party/stb_image.h	/^   stbi_uc *(*resample_row_hv_2_kernel)(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs);$/;"	m	struct:__anon46	access:public
__anon46::restart_interval	include/3rd_party/stb_image.h	/^   int restart_interval, todo;$/;"	m	struct:__anon46	access:public
__anon46::rgb	include/3rd_party/stb_image.h	/^   int            rgb;$/;"	m	struct:__anon46	access:public
__anon46::s	include/3rd_party/stb_image.h	/^   stbi__context *s;$/;"	m	struct:__anon46	access:public
__anon46::scan_n	include/3rd_party/stb_image.h	/^   int scan_n, order[4];$/;"	m	struct:__anon46	access:public
__anon46::spec_end	include/3rd_party/stb_image.h	/^   int            spec_end;$/;"	m	struct:__anon46	access:public
__anon46::spec_start	include/3rd_party/stb_image.h	/^   int            spec_start;$/;"	m	struct:__anon46	access:public
__anon46::succ_high	include/3rd_party/stb_image.h	/^   int            succ_high;$/;"	m	struct:__anon46	access:public
__anon46::succ_low	include/3rd_party/stb_image.h	/^   int            succ_low;$/;"	m	struct:__anon46	access:public
__anon46::todo	include/3rd_party/stb_image.h	/^   int restart_interval, todo;$/;"	m	struct:__anon46	access:public
__anon48::hs	include/3rd_party/stb_image.h	/^   int hs,vs;   \/\/ expansion factor in each axis$/;"	m	struct:__anon48	access:public
__anon48::line0	include/3rd_party/stb_image.h	/^   stbi_uc *line0,*line1;$/;"	m	struct:__anon48	access:public
__anon48::line1	include/3rd_party/stb_image.h	/^   stbi_uc *line0,*line1;$/;"	m	struct:__anon48	access:public
__anon48::resample	include/3rd_party/stb_image.h	/^   resample_row_func resample;$/;"	m	struct:__anon48	access:public
__anon48::vs	include/3rd_party/stb_image.h	/^   int hs,vs;   \/\/ expansion factor in each axis$/;"	m	struct:__anon48	access:public
__anon48::w_lores	include/3rd_party/stb_image.h	/^   int w_lores; \/\/ horizontal pixels pre-expansion$/;"	m	struct:__anon48	access:public
__anon48::ypos	include/3rd_party/stb_image.h	/^   int ypos;    \/\/ which pre-expansion row we're on$/;"	m	struct:__anon48	access:public
__anon48::ystep	include/3rd_party/stb_image.h	/^   int ystep;   \/\/ how far through vertical expansion we are$/;"	m	struct:__anon48	access:public
__anon49::fast	include/3rd_party/stb_image.h	/^   stbi__uint16 fast[1 << STBI__ZFAST_BITS];$/;"	m	struct:__anon49	access:public
__anon49::firstcode	include/3rd_party/stb_image.h	/^   stbi__uint16 firstcode[16];$/;"	m	struct:__anon49	access:public
__anon49::firstsymbol	include/3rd_party/stb_image.h	/^   stbi__uint16 firstsymbol[16];$/;"	m	struct:__anon49	access:public
__anon49::maxcode	include/3rd_party/stb_image.h	/^   int maxcode[17];$/;"	m	struct:__anon49	access:public
__anon49::size	include/3rd_party/stb_image.h	/^   stbi_uc  size[288];$/;"	m	struct:__anon49	access:public
__anon49::value	include/3rd_party/stb_image.h	/^   stbi__uint16 value[288];$/;"	m	struct:__anon49	access:public
__anon50::code_buffer	include/3rd_party/stb_image.h	/^   stbi__uint32 code_buffer;$/;"	m	struct:__anon50	access:public
__anon50::num_bits	include/3rd_party/stb_image.h	/^   int num_bits;$/;"	m	struct:__anon50	access:public
__anon50::z_distance	include/3rd_party/stb_image.h	/^   stbi__zhuffman z_length, z_distance;$/;"	m	struct:__anon50	access:public
__anon50::z_expandable	include/3rd_party/stb_image.h	/^   int   z_expandable;$/;"	m	struct:__anon50	access:public
__anon50::z_length	include/3rd_party/stb_image.h	/^   stbi__zhuffman z_length, z_distance;$/;"	m	struct:__anon50	access:public
__anon50::zbuffer	include/3rd_party/stb_image.h	/^   stbi_uc *zbuffer, *zbuffer_end;$/;"	m	struct:__anon50	access:public
__anon50::zbuffer_end	include/3rd_party/stb_image.h	/^   stbi_uc *zbuffer, *zbuffer_end;$/;"	m	struct:__anon50	access:public
__anon50::zout	include/3rd_party/stb_image.h	/^   char *zout;$/;"	m	struct:__anon50	access:public
__anon50::zout_end	include/3rd_party/stb_image.h	/^   char *zout_end;$/;"	m	struct:__anon50	access:public
__anon50::zout_start	include/3rd_party/stb_image.h	/^   char *zout_start;$/;"	m	struct:__anon50	access:public
__anon51::length	include/3rd_party/stb_image.h	/^   stbi__uint32 length;$/;"	m	struct:__anon51	access:public
__anon51::type	include/3rd_party/stb_image.h	/^   stbi__uint32 type;$/;"	m	struct:__anon51	access:public
__anon52::depth	include/3rd_party/stb_image.h	/^   int depth;$/;"	m	struct:__anon52	access:public
__anon52::expanded	include/3rd_party/stb_image.h	/^   stbi_uc *idata, *expanded, *out;$/;"	m	struct:__anon52	access:public
__anon52::idata	include/3rd_party/stb_image.h	/^   stbi_uc *idata, *expanded, *out;$/;"	m	struct:__anon52	access:public
__anon52::out	include/3rd_party/stb_image.h	/^   stbi_uc *idata, *expanded, *out;$/;"	m	struct:__anon52	access:public
__anon52::s	include/3rd_party/stb_image.h	/^   stbi__context *s;$/;"	m	struct:__anon52	access:public
__anon54::all_a	include/3rd_party/stb_image.h	/^   unsigned int mr,mg,mb,ma, all_a;$/;"	m	struct:__anon54	access:public
__anon54::bpp	include/3rd_party/stb_image.h	/^   int bpp, offset, hsz;$/;"	m	struct:__anon54	access:public
__anon54::hsz	include/3rd_party/stb_image.h	/^   int bpp, offset, hsz;$/;"	m	struct:__anon54	access:public
__anon54::ma	include/3rd_party/stb_image.h	/^   unsigned int mr,mg,mb,ma, all_a;$/;"	m	struct:__anon54	access:public
__anon54::mb	include/3rd_party/stb_image.h	/^   unsigned int mr,mg,mb,ma, all_a;$/;"	m	struct:__anon54	access:public
__anon54::mg	include/3rd_party/stb_image.h	/^   unsigned int mr,mg,mb,ma, all_a;$/;"	m	struct:__anon54	access:public
__anon54::mr	include/3rd_party/stb_image.h	/^   unsigned int mr,mg,mb,ma, all_a;$/;"	m	struct:__anon54	access:public
__anon54::offset	include/3rd_party/stb_image.h	/^   int bpp, offset, hsz;$/;"	m	struct:__anon54	access:public
__anon55::channel	include/3rd_party/stb_image.h	/^   stbi_uc size,type,channel;$/;"	m	struct:__anon55	access:public
__anon55::size	include/3rd_party/stb_image.h	/^   stbi_uc size,type,channel;$/;"	m	struct:__anon55	access:public
__anon55::type	include/3rd_party/stb_image.h	/^   stbi_uc size,type,channel;$/;"	m	struct:__anon55	access:public
__anon56::first	include/3rd_party/stb_image.h	/^   stbi_uc first;$/;"	m	struct:__anon56	access:public
__anon56::prefix	include/3rd_party/stb_image.h	/^   stbi__int16 prefix;$/;"	m	struct:__anon56	access:public
__anon56::suffix	include/3rd_party/stb_image.h	/^   stbi_uc suffix;$/;"	m	struct:__anon56	access:public
__anon57::background	include/3rd_party/stb_image.h	/^   stbi_uc *background;          \/\/ The current "background" as far as a gif is concerned$/;"	m	struct:__anon57	access:public
__anon57::bgindex	include/3rd_party/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags;$/;"	m	struct:__anon57	access:public
__anon57::codes	include/3rd_party/stb_image.h	/^   stbi__gif_lzw codes[8192];$/;"	m	struct:__anon57	access:public
__anon57::color_table	include/3rd_party/stb_image.h	/^   stbi_uc *color_table;$/;"	m	struct:__anon57	access:public
__anon57::cur_x	include/3rd_party/stb_image.h	/^   int cur_x, cur_y;$/;"	m	struct:__anon57	access:public
__anon57::cur_y	include/3rd_party/stb_image.h	/^   int cur_x, cur_y;$/;"	m	struct:__anon57	access:public
__anon57::delay	include/3rd_party/stb_image.h	/^   int delay;$/;"	m	struct:__anon57	access:public
__anon57::eflags	include/3rd_party/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags;$/;"	m	struct:__anon57	access:public
__anon57::flags	include/3rd_party/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags;$/;"	m	struct:__anon57	access:public
__anon57::h	include/3rd_party/stb_image.h	/^   int w,h;$/;"	m	struct:__anon57	access:public
__anon57::history	include/3rd_party/stb_image.h	/^   stbi_uc *history;$/;"	m	struct:__anon57	access:public
__anon57::lflags	include/3rd_party/stb_image.h	/^   int lflags;$/;"	m	struct:__anon57	access:public
__anon57::line_size	include/3rd_party/stb_image.h	/^   int line_size;$/;"	m	struct:__anon57	access:public
__anon57::lpal	include/3rd_party/stb_image.h	/^   stbi_uc lpal[256][4];$/;"	m	struct:__anon57	access:public
__anon57::max_x	include/3rd_party/stb_image.h	/^   int max_x, max_y;$/;"	m	struct:__anon57	access:public
__anon57::max_y	include/3rd_party/stb_image.h	/^   int max_x, max_y;$/;"	m	struct:__anon57	access:public
__anon57::out	include/3rd_party/stb_image.h	/^   stbi_uc *out;                 \/\/ output buffer (always 4 components)$/;"	m	struct:__anon57	access:public
__anon57::pal	include/3rd_party/stb_image.h	/^   stbi_uc  pal[256][4];$/;"	m	struct:__anon57	access:public
__anon57::parse	include/3rd_party/stb_image.h	/^   int parse, step;$/;"	m	struct:__anon57	access:public
__anon57::ratio	include/3rd_party/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags;$/;"	m	struct:__anon57	access:public
__anon57::start_x	include/3rd_party/stb_image.h	/^   int start_x, start_y;$/;"	m	struct:__anon57	access:public
__anon57::start_y	include/3rd_party/stb_image.h	/^   int start_x, start_y;$/;"	m	struct:__anon57	access:public
__anon57::step	include/3rd_party/stb_image.h	/^   int parse, step;$/;"	m	struct:__anon57	access:public
__anon57::transparent	include/3rd_party/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags;$/;"	m	struct:__anon57	access:public
__anon57::w	include/3rd_party/stb_image.h	/^   int w,h;$/;"	m	struct:__anon57	access:public
__anon58::context	include/3rd_party/stb_image_write.h	/^   void *context;$/;"	m	struct:__anon58	access:public
__anon58::func	include/3rd_party/stb_image_write.h	/^   stbi_write_func *func;$/;"	m	struct:__anon58	access:public
__anon7::bitmode	test/include/model/aip_f_mdl.h	/^	uint8_t                     bitmode;$/;"	m	struct:__anon7	access:public
__anon7::dst_base	test/include/model/aip_f_mdl.h	/^	uint8_t                     *dst_base;$/;"	m	struct:__anon7	access:public
__anon7::dst_cbase	test/include/model/aip_f_mdl.h	/^	uint8_t                     *dst_cbase;$/;"	m	struct:__anon7	access:public
__anon7::dst_h	test/include/model/aip_f_mdl.h	/^	int16_t                     dst_h;$/;"	m	struct:__anon7	access:public
__anon7::dst_stride	test/include/model/aip_f_mdl.h	/^	int16_t                     dst_stride;$/;"	m	struct:__anon7	access:public
__anon7::dst_w	test/include/model/aip_f_mdl.h	/^	int16_t                     dst_w;$/;"	m	struct:__anon7	access:public
__anon7::scale_x	test/include/model/aip_f_mdl.h	/^	int32_t                     scale_x;$/;"	m	struct:__anon7	access:public
__anon7::scale_y	test/include/model/aip_f_mdl.h	/^	int32_t                     scale_y;$/;"	m	struct:__anon7	access:public
__anon7::src_base	test/include/model/aip_f_mdl.h	/^	uint8_t                     *src_base;$/;"	m	struct:__anon7	access:public
__anon7::src_cbase	test/include/model/aip_f_mdl.h	/^	uint8_t                     *src_cbase;$/;"	m	struct:__anon7	access:public
__anon7::src_h	test/include/model/aip_f_mdl.h	/^	int16_t                     src_h;$/;"	m	struct:__anon7	access:public
__anon7::src_stride	test/include/model/aip_f_mdl.h	/^	int16_t                     src_stride;$/;"	m	struct:__anon7	access:public
__anon7::src_w	test/include/model/aip_f_mdl.h	/^	int16_t                     src_w;$/;"	m	struct:__anon7	access:public
__anon7::trans_x	test/include/model/aip_f_mdl.h	/^	int32_t                     trans_x;$/;"	m	struct:__anon7	access:public
__anon7::trans_y	test/include/model/aip_f_mdl.h	/^	int32_t                     trans_y;$/;"	m	struct:__anon7	access:public
__anon9::eof	test/include/3rd_party/stb_image.h	/^   int      (*eof)   (void *user);                       \/\/ returns nonzero if we are at end of file\/data$/;"	m	struct:__anon9	access:public
__anon9::read	test/include/3rd_party/stb_image.h	/^   int      (*read)  (void *user,char *data,int size);   \/\/ fill 'data' with 'size' bytes.  return number of bytes actually read$/;"	m	struct:__anon9	access:public
__anon9::skip	test/include/3rd_party/stb_image.h	/^   void     (*skip)  (void *user,int n);                 \/\/ skip the next 'n' bytes, or 'unget' the last -n bytes if negative$/;"	m	struct:__anon9	access:public
__ehb	test/include/drivers/aie_mmap.h	76;"	d
__fast_iob	include/jz_aip/aie_mmap.h	83;"	d
__fast_iob	test/include/drivers/aie_mmap.h	90;"	d
__sync	include/jz_aip/aie_mmap.h	68;"	d
__sync	test/include/drivers/aie_mmap.h	66;"	d
affine	test/sample/aip_resize/aip_resize_test.c	/^void * affine(void *arg)$/;"	f	signature:(void *arg)
aip_affine_test	test/sample/aip_affine/aip_affine_test.c	/^int aip_affine_test(bs_data_format_e format, uint32_t box_num)$/;"	f	signature:(bs_data_format_e format, uint32_t box_num)
aip_affine_test	test/sample/aip_resize/aip_resize_test.c	/^int aip_affine_test(bs_data_format_e format, uint32_t box_num)$/;"	f	signature:(bs_data_format_e format, uint32_t box_num)
aip_cfg_ddr_oram	src/jz_aip_hal.c	/^int aip_cfg_ddr_oram(struct aip_manage *manage,$/;"	f	signature:(struct aip_manage *manage, unsigned int bus_type, unsigned int reg)
aip_chainbuf_alloc	src/jz_aip_hal.c	/^int aip_chainbuf_alloc(struct aip_manage *manage)$/;"	f	signature:(struct aip_manage *manage)
aip_chainbuf_free	src/jz_aip_hal.c	/^int aip_chainbuf_free(struct aip_manage *manage)$/;"	f	signature:(struct aip_manage *manage)
aip_covert_test	test/sample/aip_covent/aip_covent_test.c	/^int aip_covert_test(uint32_t len)$/;"	f	signature:(uint32_t len)
aip_f_cfg_s	include/model/aip_f_mdl.h	/^} aip_f_cfg_s;$/;"	t	typeref:struct:__anon29
aip_f_cfg_s	test/include/model/aip_f_mdl.h	/^} aip_f_cfg_s;$/;"	t	typeref:struct:__anon7
aip_f_chaindesc	src/jz_aip_hal.h	/^struct aip_f_chaindesc {$/;"	s
aip_f_chaindesc::cfg	src/jz_aip_hal.h	/^	uint32_t        cfg[2];$/;"	m	struct:aip_f_chaindesc	access:public
aip_f_chaindesc::dst_base_uv	src/jz_aip_hal.h	/^	uint32_t		dst_base_uv[2];$/;"	m	struct:aip_f_chaindesc	access:public
aip_f_chaindesc::dst_base_y	src/jz_aip_hal.h	/^	uint32_t		dst_base_y[2];$/;"	m	struct:aip_f_chaindesc	access:public
aip_f_chaindesc::dst_size	src/jz_aip_hal.h	/^	uint32_t		dst_size[2];$/;"	m	struct:aip_f_chaindesc	access:public
aip_f_chaindesc::f_ctrl	src/jz_aip_hal.h	/^	uint32_t		f_ctrl[2];$/;"	m	struct:aip_f_chaindesc	access:public
aip_f_chaindesc::scale_x	src/jz_aip_hal.h	/^	uint32_t		scale_x[2];$/;"	m	struct:aip_f_chaindesc	access:public
aip_f_chaindesc::scale_y	src/jz_aip_hal.h	/^	uint32_t		scale_y[2];$/;"	m	struct:aip_f_chaindesc	access:public
aip_f_chaindesc::src_base_uv	src/jz_aip_hal.h	/^	uint32_t		src_base_uv[2];$/;"	m	struct:aip_f_chaindesc	access:public
aip_f_chaindesc::src_base_y	src/jz_aip_hal.h	/^	uint32_t		src_base_y[2];$/;"	m	struct:aip_f_chaindesc	access:public
aip_f_chaindesc::src_size	src/jz_aip_hal.h	/^	uint32_t		src_size[2];$/;"	m	struct:aip_f_chaindesc	access:public
aip_f_chaindesc::stride	src/jz_aip_hal.h	/^	uint32_t		stride[2];$/;"	m	struct:aip_f_chaindesc	access:public
aip_f_chaindesc::timeout	src/jz_aip_hal.h	/^	uint32_t		timeout[2];$/;"	m	struct:aip_f_chaindesc	access:public
aip_f_chaindesc::trans_x	src/jz_aip_hal.h	/^	int32_t			trans_x[2];$/;"	m	struct:aip_f_chaindesc	access:public
aip_f_chaindesc::trans_y	src/jz_aip_hal.h	/^	int32_t			trans_y[2];$/;"	m	struct:aip_f_chaindesc	access:public
aip_f_chainnode	src/jz_aip_hal.h	/^struct aip_f_chainnode {$/;"	s
aip_f_chainnode::dst_base_uv	src/jz_aip_hal.h	/^	uint32_t		dst_base_uv;$/;"	m	struct:aip_f_chainnode	access:public
aip_f_chainnode::dst_base_y	src/jz_aip_hal.h	/^	uint32_t		dst_base_y;$/;"	m	struct:aip_f_chainnode	access:public
aip_f_chainnode::dst_height	src/jz_aip_hal.h	/^	uint16_t		dst_height;$/;"	m	struct:aip_f_chainnode	access:public
aip_f_chainnode::dst_stride	src/jz_aip_hal.h	/^	uint16_t		dst_stride;$/;"	m	struct:aip_f_chainnode	access:public
aip_f_chainnode::dst_width	src/jz_aip_hal.h	/^	uint16_t		dst_width;$/;"	m	struct:aip_f_chainnode	access:public
aip_f_chainnode::f_ctrl	src/jz_aip_hal.h	/^	uint32_t		f_ctrl;$/;"	m	struct:aip_f_chainnode	access:public
aip_f_chainnode::scale_x	src/jz_aip_hal.h	/^	uint32_t		scale_x;$/;"	m	struct:aip_f_chainnode	access:public
aip_f_chainnode::scale_y	src/jz_aip_hal.h	/^	uint32_t		scale_y;$/;"	m	struct:aip_f_chainnode	access:public
aip_f_chainnode::src_base_uv	src/jz_aip_hal.h	/^	uint32_t		src_base_uv;$/;"	m	struct:aip_f_chainnode	access:public
aip_f_chainnode::src_base_y	src/jz_aip_hal.h	/^	uint32_t		src_base_y;$/;"	m	struct:aip_f_chainnode	access:public
aip_f_chainnode::src_height	src/jz_aip_hal.h	/^	uint16_t		src_height;$/;"	m	struct:aip_f_chainnode	access:public
aip_f_chainnode::src_stride	src/jz_aip_hal.h	/^	uint16_t		src_stride;$/;"	m	struct:aip_f_chainnode	access:public
aip_f_chainnode::src_width	src/jz_aip_hal.h	/^	uint16_t		src_width;$/;"	m	struct:aip_f_chainnode	access:public
aip_f_chainnode::trans_x	src/jz_aip_hal.h	/^	int32_t			trans_x;$/;"	m	struct:aip_f_chainnode	access:public
aip_f_chainnode::trans_y	src/jz_aip_hal.h	/^	int32_t			trans_y;$/;"	m	struct:aip_f_chainnode	access:public
aip_f_config_nodes	src/jz_aip_hal.c	/^int aip_f_config_nodes(struct aip_manage *manage,$/;"	f	signature:(struct aip_manage *manage, struct aip_f_chainnode *chainnode, int chain_num, unsigned int cfg)
aip_f_init	src/jz_aip_hal.c	/^int aip_f_init(struct aip_f_chainnode *chainnode, int chain_num , unsigned int cfg)$/;"	f	signature:(struct aip_f_chainnode *chainnode, int chain_num , unsigned int cfg)
aip_f_mode_e	include/model/aip_f_mdl.h	/^} aip_f_mode_e;$/;"	t	typeref:enum:__anon28
aip_f_mode_e	test/include/model/aip_f_mdl.h	/^} aip_f_mode_e;$/;"	t	typeref:enum:__anon6
aip_f_reset	src/jz_aip_hal.c	/^int aip_f_reset()$/;"	f
aip_f_start	src/jz_aip_hal.c	/^int aip_f_start(int chain_num)$/;"	f	signature:(int chain_num)
aip_f_wait	src/jz_aip_hal.c	/^int aip_f_wait()$/;"	f
aip_io_size	src/jz_aip_hal.h	/^	uint32_t aip_io_size;$/;"	m	struct:aip_manage	access:public
aip_io_vaddr	src/jz_aip_hal.h	/^	uint32_t aip_io_vaddr;$/;"	m	struct:aip_manage	access:public
aip_manage	src/jz_aip_hal.h	/^struct aip_manage {$/;"	s
aip_manage::aip_io_size	src/jz_aip_hal.h	/^	uint32_t aip_io_size;$/;"	m	struct:aip_manage	access:public
aip_manage::aip_io_vaddr	src/jz_aip_hal.h	/^	uint32_t aip_io_vaddr;$/;"	m	struct:aip_manage	access:public
aip_manage::chain_num	src/jz_aip_hal.h	/^	uint32_t chain_num;$/;"	m	struct:aip_manage	access:public
aip_manage::chainbuf	src/jz_aip_hal.h	/^	struct jz_aip_chainbuf chainbuf;$/;"	m	struct:aip_manage	typeref:struct:aip_manage::jz_aip_chainbuf	access:public
aip_manage::fd	src/jz_aip_hal.h	/^	int fd;$/;"	m	struct:aip_manage	access:public
aip_manage::fd_open_cnt	src/jz_aip_hal.h	/^	int fd_open_cnt;$/;"	m	struct:aip_manage	access:public
aip_manage::index	src/jz_aip_hal.h	/^	char index;$/;"	m	struct:aip_manage	access:public
aip_manage::mem_fd	src/jz_aip_hal.h	/^	int mem_fd;$/;"	m	struct:aip_manage	access:public
aip_manage::name	src/jz_aip_hal.h	/^	char name[16];$/;"	m	struct:aip_manage	access:public
aip_mem_free	src/jz_aip_hal.c	/^int aip_mem_free(void)$/;"	f	signature:(void)
aip_mem_init	src/jz_aip_hal.c	/^int aip_mem_init(void)$/;"	f	signature:(void)
aip_p_chaindesc	src/jz_aip_hal.h	/^struct  aip_p_chaindesc {$/;"	s
aip_p_chaindesc::coef0	src/jz_aip_hal.h	/^	uint32_t	coef0[2];$/;"	m	struct:aip_p_chaindesc	access:public
aip_p_chaindesc::coef1	src/jz_aip_hal.h	/^	int32_t		coef1[2];$/;"	m	struct:aip_p_chaindesc	access:public
aip_p_chaindesc::coef10	src/jz_aip_hal.h	/^	int32_t		coef10[2];$/;"	m	struct:aip_p_chaindesc	access:public
aip_p_chaindesc::coef11	src/jz_aip_hal.h	/^	int32_t		coef11[2];$/;"	m	struct:aip_p_chaindesc	access:public
aip_p_chaindesc::coef12	src/jz_aip_hal.h	/^	int32_t		coef12[2];$/;"	m	struct:aip_p_chaindesc	access:public
aip_p_chaindesc::coef13	src/jz_aip_hal.h	/^	int32_t		coef13[2];$/;"	m	struct:aip_p_chaindesc	access:public
aip_p_chaindesc::coef14	src/jz_aip_hal.h	/^	int32_t		coef14[2];$/;"	m	struct:aip_p_chaindesc	access:public
aip_p_chaindesc::coef2	src/jz_aip_hal.h	/^	int32_t		coef2[2];$/;"	m	struct:aip_p_chaindesc	access:public
aip_p_chaindesc::coef3	src/jz_aip_hal.h	/^	int32_t		coef3[2];$/;"	m	struct:aip_p_chaindesc	access:public
aip_p_chaindesc::coef4	src/jz_aip_hal.h	/^	int32_t		coef4[2];$/;"	m	struct:aip_p_chaindesc	access:public
aip_p_chaindesc::coef5	src/jz_aip_hal.h	/^	int32_t		coef5[2];$/;"	m	struct:aip_p_chaindesc	access:public
aip_p_chaindesc::coef6	src/jz_aip_hal.h	/^	int32_t		coef6[2];$/;"	m	struct:aip_p_chaindesc	access:public
aip_p_chaindesc::coef7	src/jz_aip_hal.h	/^	int32_t		coef7[2];$/;"	m	struct:aip_p_chaindesc	access:public
aip_p_chaindesc::coef8	src/jz_aip_hal.h	/^	int32_t		coef8[2];$/;"	m	struct:aip_p_chaindesc	access:public
aip_p_chaindesc::coef9	src/jz_aip_hal.h	/^	int32_t		coef9[2];$/;"	m	struct:aip_p_chaindesc	access:public
aip_p_chaindesc::dst_base	src/jz_aip_hal.h	/^	uint32_t	dst_base[2];$/;"	m	struct:aip_p_chaindesc	access:public
aip_p_chaindesc::dst_size	src/jz_aip_hal.h	/^	uint32_t	dst_size[2];$/;"	m	struct:aip_p_chaindesc	access:public
aip_p_chaindesc::dst_stride	src/jz_aip_hal.h	/^	uint32_t	dst_stride[2];$/;"	m	struct:aip_p_chaindesc	access:public
aip_p_chaindesc::dummy_val	src/jz_aip_hal.h	/^	uint32_t	dummy_val[2];$/;"	m	struct:aip_p_chaindesc	access:public
aip_p_chaindesc::mode	src/jz_aip_hal.h	/^	uint32_t	mode[2];$/;"	m	struct:aip_p_chaindesc	access:public
aip_p_chaindesc::offset	src/jz_aip_hal.h	/^	uint32_t	offset[2];$/;"	m	struct:aip_p_chaindesc	access:public
aip_p_chaindesc::p_ctrl	src/jz_aip_hal.h	/^	uint32_t	p_ctrl[2];$/;"	m	struct:aip_p_chaindesc	access:public
aip_p_chaindesc::src_base_uv	src/jz_aip_hal.h	/^	uint32_t	src_base_uv[2];$/;"	m	struct:aip_p_chaindesc	access:public
aip_p_chaindesc::src_base_y	src/jz_aip_hal.h	/^	uint32_t	src_base_y[2];$/;"	m	struct:aip_p_chaindesc	access:public
aip_p_chaindesc::src_size	src/jz_aip_hal.h	/^	uint32_t	src_size[2];$/;"	m	struct:aip_p_chaindesc	access:public
aip_p_chaindesc::src_stride	src/jz_aip_hal.h	/^	uint32_t	src_stride[2];$/;"	m	struct:aip_p_chaindesc	access:public
aip_p_chaindesc::timeout	src/jz_aip_hal.h	/^	uint32_t	timeout[2];$/;"	m	struct:aip_p_chaindesc	access:public
aip_p_chainnode	src/jz_aip_hal.h	/^struct aip_p_chainnode {$/;"	s
aip_p_chainnode::coef_parm0	src/jz_aip_hal.h	/^	int32_t			coef_parm0;$/;"	m	struct:aip_p_chainnode	access:public
aip_p_chainnode::coef_parm1	src/jz_aip_hal.h	/^	int32_t			coef_parm1;$/;"	m	struct:aip_p_chainnode	access:public
aip_p_chainnode::coef_parm10	src/jz_aip_hal.h	/^	int32_t			coef_parm10;$/;"	m	struct:aip_p_chainnode	access:public
aip_p_chainnode::coef_parm11	src/jz_aip_hal.h	/^	int32_t			coef_parm11;$/;"	m	struct:aip_p_chainnode	access:public
aip_p_chainnode::coef_parm12	src/jz_aip_hal.h	/^	int32_t			coef_parm12;$/;"	m	struct:aip_p_chainnode	access:public
aip_p_chainnode::coef_parm13	src/jz_aip_hal.h	/^	int32_t			coef_parm13;$/;"	m	struct:aip_p_chainnode	access:public
aip_p_chainnode::coef_parm14	src/jz_aip_hal.h	/^	int32_t			coef_parm14;$/;"	m	struct:aip_p_chainnode	access:public
aip_p_chainnode::coef_parm2	src/jz_aip_hal.h	/^	int32_t			coef_parm2;$/;"	m	struct:aip_p_chainnode	access:public
aip_p_chainnode::coef_parm3	src/jz_aip_hal.h	/^	int32_t			coef_parm3;$/;"	m	struct:aip_p_chainnode	access:public
aip_p_chainnode::coef_parm4	src/jz_aip_hal.h	/^	int32_t			coef_parm4;$/;"	m	struct:aip_p_chainnode	access:public
aip_p_chainnode::coef_parm5	src/jz_aip_hal.h	/^	int32_t			coef_parm5;$/;"	m	struct:aip_p_chainnode	access:public
aip_p_chainnode::coef_parm6	src/jz_aip_hal.h	/^	int32_t			coef_parm6;$/;"	m	struct:aip_p_chainnode	access:public
aip_p_chainnode::coef_parm7	src/jz_aip_hal.h	/^	int32_t			coef_parm7;$/;"	m	struct:aip_p_chainnode	access:public
aip_p_chainnode::coef_parm8	src/jz_aip_hal.h	/^	int32_t			coef_parm8;$/;"	m	struct:aip_p_chainnode	access:public
aip_p_chainnode::coef_parm9	src/jz_aip_hal.h	/^	int32_t			coef_parm9;$/;"	m	struct:aip_p_chainnode	access:public
aip_p_chainnode::dst_base	src/jz_aip_hal.h	/^	uint32_t		dst_base;$/;"	m	struct:aip_p_chainnode	access:public
aip_p_chainnode::dst_height	src/jz_aip_hal.h	/^	uint16_t		dst_height;$/;"	m	struct:aip_p_chainnode	access:public
aip_p_chainnode::dst_stride	src/jz_aip_hal.h	/^	uint32_t		dst_stride;$/;"	m	struct:aip_p_chainnode	access:public
aip_p_chainnode::dst_width	src/jz_aip_hal.h	/^	uint16_t		dst_width;$/;"	m	struct:aip_p_chainnode	access:public
aip_p_chainnode::dummy_val	src/jz_aip_hal.h	/^	uint32_t		dummy_val;$/;"	m	struct:aip_p_chainnode	access:public
aip_p_chainnode::mode	src/jz_aip_hal.h	/^	uint32_t		mode;$/;"	m	struct:aip_p_chainnode	access:public
aip_p_chainnode::offset	src/jz_aip_hal.h	/^	uint32_t		offset;$/;"	m	struct:aip_p_chainnode	access:public
aip_p_chainnode::p_ctrl	src/jz_aip_hal.h	/^	uint32_t		p_ctrl;$/;"	m	struct:aip_p_chainnode	access:public
aip_p_chainnode::src_base_uv	src/jz_aip_hal.h	/^	uint32_t		src_base_uv;$/;"	m	struct:aip_p_chainnode	access:public
aip_p_chainnode::src_base_y	src/jz_aip_hal.h	/^	uint32_t		src_base_y;$/;"	m	struct:aip_p_chainnode	access:public
aip_p_chainnode::src_height	src/jz_aip_hal.h	/^	uint16_t		src_height;$/;"	m	struct:aip_p_chainnode	access:public
aip_p_chainnode::src_stride	src/jz_aip_hal.h	/^	uint32_t		src_stride;$/;"	m	struct:aip_p_chainnode	access:public
aip_p_chainnode::src_width	src/jz_aip_hal.h	/^	uint16_t		src_width;$/;"	m	struct:aip_p_chainnode	access:public
aip_p_config_nodes	src/jz_aip_hal.c	/^int aip_p_config_nodes(struct aip_manage *manage,$/;"	f	signature:(struct aip_manage *manage, struct aip_p_chainnode *chainnode, int chain_num)
aip_p_init	src/jz_aip_hal.c	/^int aip_p_init(struct aip_p_chainnode *chainnode, int chain_num,$/;"	f	signature:(struct aip_p_chainnode *chainnode, int chain_num, const uint32_t *nv2rgb_parm, uint32_t cfg)
aip_p_reset	src/jz_aip_hal.c	/^int aip_p_reset()$/;"	f
aip_p_start	src/jz_aip_hal.c	/^int aip_p_start(int chain_num)$/;"	f	signature:(int chain_num)
aip_p_wait	src/jz_aip_hal.c	/^int aip_p_wait()$/;"	f
aip_perspective_test	test/sample/aip_perspective/aip_perspective_test.c	/^int aip_perspective_test(bs_data_format_e format, uint32_t box_num)$/;"	f	signature:(bs_data_format_e format, uint32_t box_num)
aip_perspective_test	test/sample/aip_resize/aip_resize_test.c	/^int aip_perspective_test(bs_data_format_e format, uint32_t box_num)$/;"	f	signature:(bs_data_format_e format, uint32_t box_num)
aip_resize_test	test/sample/aip_resize/aip_resize_test.c	/^int aip_resize_test(bs_data_format_e format, uint32_t box_num)$/;"	f	signature:(bs_data_format_e format, uint32_t box_num)
aip_set_timeout	src/jz_aip_hal.c	/^int aip_set_timeout(struct aip_manage *manage,$/;"	f	signature:(struct aip_manage *manage, unsigned int timeout, unsigned int reg)
aip_t_chaindesc	src/jz_aip_hal.h	/^struct aip_t_chaindesc {$/;"	s
aip_t_chaindesc::dst_base	src/jz_aip_hal.h	/^	uint32_t		dst_base[2];$/;"	m	struct:aip_t_chaindesc	access:public
aip_t_chaindesc::src_base_uv	src/jz_aip_hal.h	/^	uint32_t		src_base_uv[2];$/;"	m	struct:aip_t_chaindesc	access:public
aip_t_chaindesc::src_base_y	src/jz_aip_hal.h	/^	uint32_t		src_base_y[2];$/;"	m	struct:aip_t_chaindesc	access:public
aip_t_chaindesc::src_size	src/jz_aip_hal.h	/^	uint32_t		src_size[2];$/;"	m	struct:aip_t_chaindesc	access:public
aip_t_chaindesc::stride	src/jz_aip_hal.h	/^	uint32_t		stride[2];$/;"	m	struct:aip_t_chaindesc	access:public
aip_t_chaindesc::t_ctrl	src/jz_aip_hal.h	/^	uint32_t		t_ctrl[2];$/;"	m	struct:aip_t_chaindesc	access:public
aip_t_chaindesc::task_len	src/jz_aip_hal.h	/^	uint32_t		task_len[2];$/;"	m	struct:aip_t_chaindesc	access:public
aip_t_chaindesc::task_skip_base	src/jz_aip_hal.h	/^	uint32_t		task_skip_base[2];$/;"	m	struct:aip_t_chaindesc	access:public
aip_t_chaindesc::timeout	src/jz_aip_hal.h	/^	uint32_t		timeout[2];$/;"	m	struct:aip_t_chaindesc	access:public
aip_t_chainnode	src/jz_aip_hal.h	/^struct aip_t_chainnode {$/;"	s
aip_t_chainnode::dst_base	src/jz_aip_hal.h	/^	uint32_t		dst_base;$/;"	m	struct:aip_t_chainnode	access:public
aip_t_chainnode::dst_stride	src/jz_aip_hal.h	/^	uint16_t		dst_stride;$/;"	m	struct:aip_t_chainnode	access:public
aip_t_chainnode::src_base_uv	src/jz_aip_hal.h	/^	uint32_t		src_base_uv;$/;"	m	struct:aip_t_chainnode	access:public
aip_t_chainnode::src_base_y	src/jz_aip_hal.h	/^	uint32_t		src_base_y;$/;"	m	struct:aip_t_chainnode	access:public
aip_t_chainnode::src_height	src/jz_aip_hal.h	/^	uint16_t		src_height;$/;"	m	struct:aip_t_chainnode	access:public
aip_t_chainnode::src_stride	src/jz_aip_hal.h	/^	uint16_t		src_stride;$/;"	m	struct:aip_t_chainnode	access:public
aip_t_chainnode::src_width	src/jz_aip_hal.h	/^	uint16_t		src_width;$/;"	m	struct:aip_t_chainnode	access:public
aip_t_chainnode::t_ctrl	src/jz_aip_hal.h	/^	uint32_t		t_ctrl;$/;"	m	struct:aip_t_chainnode	access:public
aip_t_chainnode::task_len	src/jz_aip_hal.h	/^	uint32_t		task_len;$/;"	m	struct:aip_t_chainnode	access:public
aip_t_chainnode::task_skip_base	src/jz_aip_hal.h	/^	uint32_t		task_skip_base;$/;"	m	struct:aip_t_chainnode	access:public
aip_t_config_nodes	src/jz_aip_hal.c	/^int aip_t_config_nodes(struct aip_manage *manage,$/;"	f	signature:(struct aip_manage *manage, struct aip_t_chainnode *chainnode, int chain_num)
aip_t_init	src/jz_aip_hal.c	/^int aip_t_init(struct aip_t_chainnode *chainnode, int chain_num,$/;"	f	signature:(struct aip_t_chainnode *chainnode, int chain_num, const uint32_t *nv2rgb_parm, uint32_t offset, uint32_t cfg)
aip_t_reset	src/jz_aip_hal.c	/^int aip_t_reset()$/;"	f
aip_t_start	src/jz_aip_hal.c	/^int aip_t_start(unsigned int task_len, unsigned int skip_dst_base)$/;"	f	signature:(unsigned int task_len, unsigned int skip_dst_base)
aip_t_wait	src/jz_aip_hal.c	/^int aip_t_wait()$/;"	f
aip_version	src/ingenic_aip.c	/^void *aip_version(void)$/;"	f	signature:(void)
alignSize	test/model/mxu_common.hpp	/^static inline size_t alignSize(size_t sz, int n)$/;"	f	signature:(size_t sz, int n)
all_a	include/3rd_party/stb_image.h	/^   unsigned int mr,mg,mb,ma, all_a;$/;"	m	struct:__anon54	access:public
all_a	test/include/3rd_party/stb_image.h	/^   unsigned int mr,mg,mb,ma, all_a;$/;"	m	struct:__anon23	access:public
alpha	include/model/aip_p_mdl.h	/^    uint8_t                     alpha;$/;"	m	struct:AIP_P_CFG_S	access:public
alpha	test/include/model/aip_p_mdl.h	/^    uint8_t                     alpha;$/;"	m	struct:AIP_P_CFG_S	access:public
anode	src/ingenic_aip.c	/^static struct aip_p_chainnode *anode = NULL;$/;"	v	typeref:struct:aip_p_chainnode	file:
anode_size	src/ingenic_aip.c	/^uint32_t anode_size = 0;$/;"	v
app14_color_transform	include/3rd_party/stb_image.h	/^   int            app14_color_transform; \/\/ Adobe APP14 tag$/;"	m	struct:__anon46	access:public
app14_color_transform	test/include/3rd_party/stb_image.h	/^   int            app14_color_transform; \/\/ Adobe APP14 tag$/;"	m	struct:__anon15	access:public
asAffine	test/model/3rd_party/Matrix.cc	/^bool Matrix::asAffine(float affine[6]) const {$/;"	f	class:CV::Matrix	signature:(float affine[6]) const
asScalars	include/3rd_party/Rect.h	/^    const float* asScalars() const {$/;"	f	struct:CV::Rect	access:public	signature:() const
asScalars	test/include/3rd_party/Rect.h	/^    const float* asScalars() const {$/;"	f	struct:CV::Rect	access:public	signature:() const
ax	include/model/aip_p_mdl.h	/^    int64_t                     ax;$/;"	m	struct:AIP_P_CFG_S	access:public
ax	test/include/model/aip_p_mdl.h	/^    int64_t                     ax;$/;"	m	struct:AIP_P_CFG_S	access:public
ay	include/model/aip_p_mdl.h	/^    int64_t                     ay;$/;"	m	struct:AIP_P_CFG_S	access:public
ay	test/include/model/aip_p_mdl.h	/^    int64_t                     ay;$/;"	m	struct:AIP_P_CFG_S	access:public
az	include/model/aip_p_mdl.h	/^    int64_t                     az;$/;"	m	struct:AIP_P_CFG_S	access:public
az	test/include/model/aip_p_mdl.h	/^    int64_t                     az;$/;"	m	struct:AIP_P_CFG_S	access:public
background	include/3rd_party/stb_image.h	/^   stbi_uc *background;          \/\/ The current "background" as far as a gif is concerned$/;"	m	struct:__anon57	access:public
background	test/include/3rd_party/stb_image.h	/^   stbi_uc *background;          \/\/ The current "background" as far as a gif is concerned$/;"	m	struct:__anon26	access:public
base	include/jz_aip/ingenic_aip.h	/^    uint32_t		base;$/;"	m	struct:__anon36	access:public
base	include/model/bs_src.h	/^	uint8_t *base;$/;"	m	struct:Mat_c	access:public
base	test/include/model/bs_src.h	/^	uint8_t *base;$/;"	m	struct:Mat_c	access:public
base1	include/jz_aip/ingenic_aip.h	/^    uint32_t		base1;$/;"	m	struct:__anon36	access:public
bgindex	include/3rd_party/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags;$/;"	m	struct:__anon57	access:public
bgindex	test/include/3rd_party/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags;$/;"	m	struct:__anon26	access:public
bilinear_bound_check	test/model/bs_src.cc	/^static inline void bilinear_bound_check(short x, short y, uint16_t w, uint16_t h,$/;"	f	file:	signature:(short x, short y, uint16_t w, uint16_t h, bool *out_bound)
bilinear_bound_check_uv	test/model/bs_src.cc	/^static inline void bilinear_bound_check_uv(short x0, short x1,short y0,short y1,int w,int h,$/;"	f	file:	signature:(short x0, short x1,short y0,short y1,int w,int h, bool *out_bound)
bitmode	include/model/aip_f_mdl.h	/^	uint8_t                     bitmode;$/;"	m	struct:__anon29	access:public
bitmode	test/include/model/aip_f_mdl.h	/^	uint8_t                     bitmode;$/;"	m	struct:__anon7	access:public
bits_per_channel	include/3rd_party/stb_image.h	/^   int bits_per_channel;$/;"	m	struct:__anon43	access:public
bits_per_channel	test/include/3rd_party/stb_image.h	/^   int bits_per_channel;$/;"	m	struct:__anon12	access:public
bottom	include/3rd_party/Rect.h	/^    float bottom() const {$/;"	f	struct:CV::Rect	access:public	signature:() const
bottom	test/include/3rd_party/Rect.h	/^    float bottom() const {$/;"	f	struct:CV::Rect	access:public	signature:() const
box	include/jz_aip/ingenic_aip.h	/^    box_info_s          box;\/\/source box$/;"	m	struct:__anon31	access:public
box	include/jz_aip/ingenic_aip.h	/^    box_info_s          box;\/\/source box$/;"	m	struct:__anon32	access:public
box	include/jz_aip/ingenic_aip.h	/^    box_info_s          box;\/\/source box$/;"	m	struct:__anon33	access:public
box	test/sample/aip_affine/aip_affine_test.c	/^int box[][4] = {$/;"	v
box	test/sample/aip_covent/aip_covent_test.c	/^int box[][4] = {$/;"	v
box	test/sample/aip_perspective/aip_perspective_test.c	/^int box[][4] = {$/;"	v
box	test/sample/aip_resize/aip_resize_test.c	/^int box[][4] = {$/;"	v
box_affine_info_s	include/jz_aip/ingenic_aip.h	/^} box_affine_info_s;$/;"	t	typeref:struct:__anon31
box_info_s	include/jz_aip/ingenic_aip.h	/^} box_info_s;$/;"	t	typeref:struct:__anon30
box_perspective_info_s	include/jz_aip/ingenic_aip.h	/^} box_perspective_info_s;$/;"	t	typeref:struct:__anon32
box_resize_info_s	include/jz_aip/ingenic_aip.h	/^} box_resize_info_s;$/;"	t	typeref:struct:__anon33
bpp	include/3rd_party/stb_image.h	/^   int bpp, offset, hsz;$/;"	m	struct:__anon54	access:public
bpp	test/include/3rd_party/stb_image.h	/^   int bpp, offset, hsz;$/;"	m	struct:__anon23	access:public
bs_covert_cfg	src/ingenic_aip.c	/^int bs_covert_cfg(data_info_s *src, const data_info_s *dst,$/;"	f	signature:(data_info_s *src, const data_info_s *dst, const uint32_t *coef, const uint32_t *offset, const task_info_s *task_info)
bs_covert_step_exit	src/ingenic_aip.c	/^int bs_covert_step_exit()$/;"	f
bs_covert_step_start	src/ingenic_aip.c	/^int bs_covert_step_start(const task_info_s *task_info,$/;"	f	signature:(const task_info_s *task_info, uint32_t dst_ptr, const bs_data_locate_e locate)
bs_covert_step_wait	src/ingenic_aip.c	/^int bs_covert_step_wait()$/;"	f
bs_data_format_e	include/jz_aip/ingenic_aip.h	/^} bs_data_format_e;$/;"	t	typeref:enum:__anon34
bs_data_locate_e	include/jz_aip/ingenic_aip.h	/^} bs_data_locate_e;$/;"	t	typeref:enum:__anon35
buffer_start	include/3rd_party/stb_image.h	/^   stbi_uc buffer_start[128];$/;"	m	struct:__anon41	access:public
buffer_start	test/include/3rd_party/stb_image.h	/^   stbi_uc buffer_start[128];$/;"	m	struct:__anon10	access:public
buflen	include/3rd_party/stb_image.h	/^   int buflen;$/;"	m	struct:__anon41	access:public
buflen	test/include/3rd_party/stb_image.h	/^   int buflen;$/;"	m	struct:__anon10	access:public
bw	include/model/aip_p_mdl.h	/^    uint32_t                    bw; \/\/0: 1byte; 1: 2bytes; 2: nv12; 3:4byte;$/;"	m	struct:AIP_P_CFG_S	access:public
bw	test/include/model/aip_p_mdl.h	/^    uint32_t                    bw; \/\/0: 1byte; 1: 2bytes; 2: nv12; 3:4byte;$/;"	m	struct:AIP_P_CFG_S	access:public
bx	include/model/aip_p_mdl.h	/^    int64_t                     bx;$/;"	m	struct:AIP_P_CFG_S	access:public
bx	test/include/model/aip_p_mdl.h	/^    int64_t                     bx;$/;"	m	struct:AIP_P_CFG_S	access:public
by	include/model/aip_p_mdl.h	/^    int64_t                     by;$/;"	m	struct:AIP_P_CFG_S	access:public
by	test/include/model/aip_p_mdl.h	/^    int64_t                     by;$/;"	m	struct:AIP_P_CFG_S	access:public
bz	include/model/aip_p_mdl.h	/^    int64_t                     bz;$/;"	m	struct:AIP_P_CFG_S	access:public
bz	test/include/model/aip_p_mdl.h	/^    int64_t                     bz;$/;"	m	struct:AIP_P_CFG_S	access:public
centerX	include/3rd_party/Rect.h	/^    float centerX() const {$/;"	f	struct:CV::Rect	access:public	signature:() const
centerX	test/include/3rd_party/Rect.h	/^    float centerX() const {$/;"	f	struct:CV::Rect	access:public	signature:() const
centerY	include/3rd_party/Rect.h	/^    float centerY() const {$/;"	f	struct:CV::Rect	access:public	signature:() const
centerY	test/include/3rd_party/Rect.h	/^    float centerY() const {$/;"	f	struct:CV::Rect	access:public	signature:() const
cfg	src/jz_aip_hal.h	/^	uint32_t        cfg[2];$/;"	m	struct:aip_f_chaindesc	access:public
chain_buf_size	src/jz_aip_hal.c	/^static int chain_buf_size = 0;$/;"	v	file:
chain_num	src/jz_aip_hal.h	/^	uint32_t chain_num;$/;"	m	struct:aip_manage	access:public
chainbuf	src/jz_aip_hal.h	/^	struct jz_aip_chainbuf chainbuf;$/;"	m	struct:aip_manage	typeref:struct:aip_manage::jz_aip_chainbuf	access:public
channel	include/3rd_party/stb_image.h	/^   stbi_uc size,type,channel;$/;"	m	struct:__anon55	access:public
channel	test/include/3rd_party/stb_image.h	/^   stbi_uc size,type,channel;$/;"	m	struct:__anon24	access:public
channel_order	include/3rd_party/stb_image.h	/^   int channel_order;$/;"	m	struct:__anon43	access:public
channel_order	test/include/3rd_party/stb_image.h	/^   int channel_order;$/;"	m	struct:__anon12	access:public
channels	include/model/bs_src.h	/^	int channels;$/;"	m	struct:Mat_c	access:public
channels	test/include/model/bs_src.h	/^	int channels;$/;"	m	struct:Mat_c	access:public
cheapEqualTo	include/3rd_party/Matrix.h	/^    bool cheapEqualTo(const Matrix& m) const {$/;"	f	class:CV::Matrix	access:public	signature:(const Matrix& m) const
cheapEqualTo	test/include/3rd_party/Matrix.h	/^    bool cheapEqualTo(const Matrix& m) const {$/;"	f	class:CV::Matrix	access:public	signature:(const Matrix& m) const
checkForZero	test/model/3rd_party/Matrix.cc	/^static inline bool checkForZero(float x) {$/;"	f	namespace:CV	signature:(float x)
chn	include/jz_aip/ingenic_aip.h	/^    int                 chn;$/;"	m	struct:__anon36	access:public
clearTypeMask	include/3rd_party/Matrix.h	/^    void clearTypeMask(int mask) {$/;"	f	class:CV::Matrix	access:private	signature:(int mask)
clearTypeMask	test/include/3rd_party/Matrix.h	/^    void clearTypeMask(int mask) {$/;"	f	class:CV::Matrix	access:private	signature:(int mask)
code	include/3rd_party/stb_image.h	/^   stbi__uint16 code[256];$/;"	m	struct:__anon45	access:public
code	test/include/3rd_party/stb_image.h	/^   stbi__uint16 code[256];$/;"	m	struct:__anon14	access:public
code_bits	include/3rd_party/stb_image.h	/^   int            code_bits;   \/\/ number of valid bits$/;"	m	struct:__anon46	access:public
code_bits	test/include/3rd_party/stb_image.h	/^   int            code_bits;   \/\/ number of valid bits$/;"	m	struct:__anon15	access:public
code_buffer	include/3rd_party/stb_image.h	/^   stbi__uint32   code_buffer; \/\/ jpeg entropy-coded buffer$/;"	m	struct:__anon46	access:public
code_buffer	include/3rd_party/stb_image.h	/^   stbi__uint32 code_buffer;$/;"	m	struct:__anon50	access:public
code_buffer	test/include/3rd_party/stb_image.h	/^   stbi__uint32   code_buffer; \/\/ jpeg entropy-coded buffer$/;"	m	struct:__anon15	access:public
code_buffer	test/include/3rd_party/stb_image.h	/^   stbi__uint32 code_buffer;$/;"	m	struct:__anon19	access:public
codes	include/3rd_party/stb_image.h	/^   stbi__gif_lzw codes[8192];$/;"	m	struct:__anon57	access:public
codes	test/include/3rd_party/stb_image.h	/^   stbi__gif_lzw codes[8192];$/;"	m	struct:__anon26	access:public
coef0	src/jz_aip_hal.h	/^	uint32_t	coef0[2];$/;"	m	struct:aip_p_chaindesc	access:public
coef1	src/jz_aip_hal.h	/^	int32_t		coef1[2];$/;"	m	struct:aip_p_chaindesc	access:public
coef10	src/jz_aip_hal.h	/^	int32_t		coef10[2];$/;"	m	struct:aip_p_chaindesc	access:public
coef11	src/jz_aip_hal.h	/^	int32_t		coef11[2];$/;"	m	struct:aip_p_chaindesc	access:public
coef12	src/jz_aip_hal.h	/^	int32_t		coef12[2];$/;"	m	struct:aip_p_chaindesc	access:public
coef13	src/jz_aip_hal.h	/^	int32_t		coef13[2];$/;"	m	struct:aip_p_chaindesc	access:public
coef14	src/jz_aip_hal.h	/^	int32_t		coef14[2];$/;"	m	struct:aip_p_chaindesc	access:public
coef2	src/jz_aip_hal.h	/^	int32_t		coef2[2];$/;"	m	struct:aip_p_chaindesc	access:public
coef3	src/jz_aip_hal.h	/^	int32_t		coef3[2];$/;"	m	struct:aip_p_chaindesc	access:public
coef4	src/jz_aip_hal.h	/^	int32_t		coef4[2];$/;"	m	struct:aip_p_chaindesc	access:public
coef5	src/jz_aip_hal.h	/^	int32_t		coef5[2];$/;"	m	struct:aip_p_chaindesc	access:public
coef6	src/jz_aip_hal.h	/^	int32_t		coef6[2];$/;"	m	struct:aip_p_chaindesc	access:public
coef7	src/jz_aip_hal.h	/^	int32_t		coef7[2];$/;"	m	struct:aip_p_chaindesc	access:public
coef8	src/jz_aip_hal.h	/^	int32_t		coef8[2];$/;"	m	struct:aip_p_chaindesc	access:public
coef9	src/jz_aip_hal.h	/^	int32_t		coef9[2];$/;"	m	struct:aip_p_chaindesc	access:public
coef_parm0	src/jz_aip_hal.h	/^	int32_t			coef_parm0;$/;"	m	struct:aip_p_chainnode	access:public
coef_parm1	src/jz_aip_hal.h	/^	int32_t			coef_parm1;$/;"	m	struct:aip_p_chainnode	access:public
coef_parm10	src/jz_aip_hal.h	/^	int32_t			coef_parm10;$/;"	m	struct:aip_p_chainnode	access:public
coef_parm11	src/jz_aip_hal.h	/^	int32_t			coef_parm11;$/;"	m	struct:aip_p_chainnode	access:public
coef_parm12	src/jz_aip_hal.h	/^	int32_t			coef_parm12;$/;"	m	struct:aip_p_chainnode	access:public
coef_parm13	src/jz_aip_hal.h	/^	int32_t			coef_parm13;$/;"	m	struct:aip_p_chainnode	access:public
coef_parm14	src/jz_aip_hal.h	/^	int32_t			coef_parm14;$/;"	m	struct:aip_p_chainnode	access:public
coef_parm2	src/jz_aip_hal.h	/^	int32_t			coef_parm2;$/;"	m	struct:aip_p_chainnode	access:public
coef_parm3	src/jz_aip_hal.h	/^	int32_t			coef_parm3;$/;"	m	struct:aip_p_chainnode	access:public
coef_parm4	src/jz_aip_hal.h	/^	int32_t			coef_parm4;$/;"	m	struct:aip_p_chainnode	access:public
coef_parm5	src/jz_aip_hal.h	/^	int32_t			coef_parm5;$/;"	m	struct:aip_p_chainnode	access:public
coef_parm6	src/jz_aip_hal.h	/^	int32_t			coef_parm6;$/;"	m	struct:aip_p_chainnode	access:public
coef_parm7	src/jz_aip_hal.h	/^	int32_t			coef_parm7;$/;"	m	struct:aip_p_chainnode	access:public
coef_parm8	src/jz_aip_hal.h	/^	int32_t			coef_parm8;$/;"	m	struct:aip_p_chainnode	access:public
coef_parm9	src/jz_aip_hal.h	/^	int32_t			coef_parm9;$/;"	m	struct:aip_p_chainnode	access:public
coeff	include/3rd_party/stb_image.h	/^      short   *coeff;   \/\/ progressive only$/;"	m	struct:__anon46::__anon47	access:public
coeff	test/include/3rd_party/stb_image.h	/^      short   *coeff;   \/\/ progressive only$/;"	m	struct:__anon15::__anon16	access:public
coeff_h	include/3rd_party/stb_image.h	/^      int      coeff_w, coeff_h; \/\/ number of 8x8 coefficient blocks$/;"	m	struct:__anon46::__anon47	access:public
coeff_h	test/include/3rd_party/stb_image.h	/^      int      coeff_w, coeff_h; \/\/ number of 8x8 coefficient blocks$/;"	m	struct:__anon15::__anon16	access:public
coeff_w	include/3rd_party/stb_image.h	/^      int      coeff_w, coeff_h; \/\/ number of 8x8 coefficient blocks$/;"	m	struct:__anon46::__anon47	access:public
coeff_w	test/include/3rd_party/stb_image.h	/^      int      coeff_w, coeff_h; \/\/ number of 8x8 coefficient blocks$/;"	m	struct:__anon15::__anon16	access:public
color_table	include/3rd_party/stb_image.h	/^   stbi_uc *color_table;$/;"	m	struct:__anon57	access:public
color_table	test/include/3rd_party/stb_image.h	/^   stbi_uc *color_table;$/;"	m	struct:__anon26	access:public
cols	include/model/bs_src.h	/^	int cols;$/;"	m	struct:Mat_c	access:public
cols	test/include/model/bs_src.h	/^	int cols;$/;"	m	struct:Mat_c	access:public
compare_bgra	test/model/bs_src.cc	/^int compare_bgra(uint8_t *dst_ptr,uint8_t *dst_opencv_ptr,int rows,int cols,int channels)$/;"	f	signature:(uint8_t *dst_ptr,uint8_t *dst_opencv_ptr,int rows,int cols,int channels)
compare_nv12	test/model/bs_src.cc	/^int compare_nv12(uint8_t *dst_ptr,uint8_t *dst_opencv_ptr,int rows,int cols)$/;"	f	signature:(uint8_t *dst_ptr,uint8_t *dst_opencv_ptr,int rows,int cols)
computePerspectiveTypeMask	test/model/3rd_party/Matrix.cc	/^uint8_t Matrix::computePerspectiveTypeMask() const {$/;"	f	class:CV::Matrix	signature:() const
computeTypeMask	test/model/3rd_party/Matrix.cc	/^uint8_t Matrix::computeTypeMask() const {$/;"	f	class:CV::Matrix	signature:() const
constexpr	include/3rd_party/Rect.h	34;"	d
constexpr	test/include/3rd_party/Rect.h	34;"	d
contains	include/3rd_party/Rect.h	/^    bool contains(float x, float y) const {$/;"	f	struct:CV::Rect	access:public	signature:(float x, float y) const
contains	test/include/3rd_party/Rect.h	/^    bool contains(float x, float y) const {$/;"	f	struct:CV::Rect	access:public	signature:(float x, float y) const
context	include/3rd_party/stb_image_write.h	/^   void *context;$/;"	m	struct:__anon58	access:public
context	test/include/3rd_party/stb_image_write.h	/^   void *context;$/;"	m	struct:__anon27	access:public
cur_x	include/3rd_party/stb_image.h	/^   int cur_x, cur_y;$/;"	m	struct:__anon57	access:public
cur_x	test/include/3rd_party/stb_image.h	/^   int cur_x, cur_y;$/;"	m	struct:__anon26	access:public
cur_y	include/3rd_party/stb_image.h	/^   int cur_x, cur_y;$/;"	m	struct:__anon57	access:public
cur_y	test/include/3rd_party/stb_image.h	/^   int cur_x, cur_y;$/;"	m	struct:__anon26	access:public
cx	include/model/aip_p_mdl.h	/^    int64_t                     cx;$/;"	m	struct:AIP_P_CFG_S	access:public
cx	test/include/model/aip_p_mdl.h	/^    int64_t                     cx;$/;"	m	struct:AIP_P_CFG_S	access:public
cy	include/model/aip_p_mdl.h	/^    int64_t                     cy;$/;"	m	struct:AIP_P_CFG_S	access:public
cy	test/include/model/aip_p_mdl.h	/^    int64_t                     cy;$/;"	m	struct:AIP_P_CFG_S	access:public
cz	include/model/aip_p_mdl.h	/^    int64_t                     cz;$/;"	m	struct:AIP_P_CFG_S	access:public
cz	test/include/model/aip_p_mdl.h	/^    int64_t                     cz;$/;"	m	struct:AIP_P_CFG_S	access:public
data	include/3rd_party/stb_image.h	/^      stbi_uc *data;$/;"	m	struct:__anon46::__anon47	access:public
data	test/include/3rd_party/stb_image.h	/^      stbi_uc *data;$/;"	m	struct:__anon15::__anon16	access:public
data_info_s	include/jz_aip/ingenic_aip.h	/^} data_info_s;$/;"	t	typeref:struct:__anon36
dc_pred	include/3rd_party/stb_image.h	/^      int dc_pred;$/;"	m	struct:__anon46::__anon47	access:public
dc_pred	test/include/3rd_party/stb_image.h	/^      int dc_pred;$/;"	m	struct:__anon15::__anon16	access:public
dcross	test/model/3rd_party/Matrix.cc	/^static inline double dcross(double a, double b, double c, double d) {$/;"	f	namespace:CV	signature:(double a, double b, double c, double d)
dcross_dscale	test/model/3rd_party/Matrix.cc	/^static inline float dcross_dscale(double a, double b, double c, double d, double scale) {$/;"	f	namespace:CV	signature:(double a, double b, double c, double d, double scale)
dct_bfly32o	include/3rd_party/stb_image.h	2352;"	d
dct_bfly32o	include/3rd_party/stb_image.h	2486;"	d
dct_bfly32o	include/3rd_party/stb_image.h	2538;"	d
dct_bfly32o	include/3rd_party/stb_image.h	2696;"	d
dct_bfly32o	test/include/3rd_party/stb_image.h	2352;"	d
dct_bfly32o	test/include/3rd_party/stb_image.h	2486;"	d
dct_bfly32o	test/include/3rd_party/stb_image.h	2538;"	d
dct_bfly32o	test/include/3rd_party/stb_image.h	2696;"	d
dct_const	include/3rd_party/stb_image.h	2324;"	d
dct_const	include/3rd_party/stb_image.h	2481;"	d
dct_const	test/include/3rd_party/stb_image.h	2324;"	d
dct_const	test/include/3rd_party/stb_image.h	2481;"	d
dct_interleave16	include/3rd_party/stb_image.h	2369;"	d
dct_interleave16	include/3rd_party/stb_image.h	2488;"	d
dct_interleave16	test/include/3rd_party/stb_image.h	2369;"	d
dct_interleave16	test/include/3rd_party/stb_image.h	2488;"	d
dct_interleave8	include/3rd_party/stb_image.h	2363;"	d
dct_interleave8	include/3rd_party/stb_image.h	2487;"	d
dct_interleave8	test/include/3rd_party/stb_image.h	2363;"	d
dct_interleave8	test/include/3rd_party/stb_image.h	2487;"	d
dct_long_mac	include/3rd_party/stb_image.h	2519;"	d
dct_long_mac	include/3rd_party/stb_image.h	2692;"	d
dct_long_mac	test/include/3rd_party/stb_image.h	2519;"	d
dct_long_mac	test/include/3rd_party/stb_image.h	2692;"	d
dct_long_mul	include/3rd_party/stb_image.h	2515;"	d
dct_long_mul	include/3rd_party/stb_image.h	2691;"	d
dct_long_mul	test/include/3rd_party/stb_image.h	2515;"	d
dct_long_mul	test/include/3rd_party/stb_image.h	2691;"	d
dct_pass	include/3rd_party/stb_image.h	2374;"	d
dct_pass	include/3rd_party/stb_image.h	2489;"	d
dct_pass	include/3rd_party/stb_image.h	2546;"	d
dct_pass	include/3rd_party/stb_image.h	2697;"	d
dct_pass	test/include/3rd_party/stb_image.h	2374;"	d
dct_pass	test/include/3rd_party/stb_image.h	2489;"	d
dct_pass	test/include/3rd_party/stb_image.h	2546;"	d
dct_pass	test/include/3rd_party/stb_image.h	2697;"	d
dct_rot	include/3rd_party/stb_image.h	2328;"	d
dct_rot	include/3rd_party/stb_image.h	2482;"	d
dct_rot	test/include/3rd_party/stb_image.h	2328;"	d
dct_rot	test/include/3rd_party/stb_image.h	2482;"	d
dct_trn16	include/3rd_party/stb_image.h	2606;"	d
dct_trn16	include/3rd_party/stb_image.h	2628;"	d
dct_trn16	test/include/3rd_party/stb_image.h	2606;"	d
dct_trn16	test/include/3rd_party/stb_image.h	2628;"	d
dct_trn32	include/3rd_party/stb_image.h	2607;"	d
dct_trn32	include/3rd_party/stb_image.h	2629;"	d
dct_trn32	test/include/3rd_party/stb_image.h	2607;"	d
dct_trn32	test/include/3rd_party/stb_image.h	2629;"	d
dct_trn64	include/3rd_party/stb_image.h	2608;"	d
dct_trn64	include/3rd_party/stb_image.h	2630;"	d
dct_trn64	test/include/3rd_party/stb_image.h	2608;"	d
dct_trn64	test/include/3rd_party/stb_image.h	2630;"	d
dct_trn8_16	include/3rd_party/stb_image.h	2652;"	d
dct_trn8_16	include/3rd_party/stb_image.h	2687;"	d
dct_trn8_16	test/include/3rd_party/stb_image.h	2652;"	d
dct_trn8_16	test/include/3rd_party/stb_image.h	2687;"	d
dct_trn8_32	include/3rd_party/stb_image.h	2653;"	d
dct_trn8_32	include/3rd_party/stb_image.h	2688;"	d
dct_trn8_32	test/include/3rd_party/stb_image.h	2653;"	d
dct_trn8_32	test/include/3rd_party/stb_image.h	2688;"	d
dct_trn8_8	include/3rd_party/stb_image.h	2651;"	d
dct_trn8_8	include/3rd_party/stb_image.h	2686;"	d
dct_trn8_8	test/include/3rd_party/stb_image.h	2651;"	d
dct_trn8_8	test/include/3rd_party/stb_image.h	2686;"	d
dct_wadd	include/3rd_party/stb_image.h	2342;"	d
dct_wadd	include/3rd_party/stb_image.h	2484;"	d
dct_wadd	include/3rd_party/stb_image.h	2528;"	d
dct_wadd	include/3rd_party/stb_image.h	2694;"	d
dct_wadd	test/include/3rd_party/stb_image.h	2342;"	d
dct_wadd	test/include/3rd_party/stb_image.h	2484;"	d
dct_wadd	test/include/3rd_party/stb_image.h	2528;"	d
dct_wadd	test/include/3rd_party/stb_image.h	2694;"	d
dct_widen	include/3rd_party/stb_image.h	2337;"	d
dct_widen	include/3rd_party/stb_image.h	2483;"	d
dct_widen	include/3rd_party/stb_image.h	2523;"	d
dct_widen	include/3rd_party/stb_image.h	2693;"	d
dct_widen	test/include/3rd_party/stb_image.h	2337;"	d
dct_widen	test/include/3rd_party/stb_image.h	2483;"	d
dct_widen	test/include/3rd_party/stb_image.h	2523;"	d
dct_widen	test/include/3rd_party/stb_image.h	2693;"	d
dct_wsub	include/3rd_party/stb_image.h	2347;"	d
dct_wsub	include/3rd_party/stb_image.h	2485;"	d
dct_wsub	include/3rd_party/stb_image.h	2533;"	d
dct_wsub	include/3rd_party/stb_image.h	2695;"	d
dct_wsub	test/include/3rd_party/stb_image.h	2347;"	d
dct_wsub	test/include/3rd_party/stb_image.h	2485;"	d
dct_wsub	test/include/3rd_party/stb_image.h	2533;"	d
dct_wsub	test/include/3rd_party/stb_image.h	2695;"	d
ddr_head_ptr	test/include/drivers/ddr_mem.h	/^    unsigned int ddr_head_ptr;$/;"	m	struct:ddr_memory_info	access:public
ddr_memory_info	test/include/drivers/ddr_mem.h	/^struct ddr_memory_info {$/;"	s
ddr_memory_info::ddr_head_ptr	test/include/drivers/ddr_mem.h	/^    unsigned int ddr_head_ptr;$/;"	m	struct:ddr_memory_info	access:public
ddr_memory_info::ddr_total_size	test/include/drivers/ddr_mem.h	/^    unsigned int ddr_total_size;$/;"	m	struct:ddr_memory_info	access:public
ddr_memory_info::ddr_used_size	test/include/drivers/ddr_mem.h	/^    unsigned int ddr_used_size;$/;"	m	struct:ddr_memory_info	access:public
ddr_total_size	test/include/drivers/ddr_mem.h	/^    unsigned int ddr_total_size;$/;"	m	struct:ddr_memory_info	access:public
ddr_used_size	test/include/drivers/ddr_mem.h	/^    unsigned int ddr_used_size;$/;"	m	struct:ddr_memory_info	access:public
debug_en	include/model/aip_p_mdl.h	/^    bool                        debug_en;$/;"	m	struct:AIP_P_CFG_S	access:public
debug_en	test/include/model/aip_p_mdl.h	/^    bool                        debug_en;$/;"	m	struct:AIP_P_CFG_S	access:public
delay	include/3rd_party/stb_image.h	/^   int delay;$/;"	m	struct:__anon57	access:public
delay	test/include/3rd_party/stb_image.h	/^   int delay;$/;"	m	struct:__anon26	access:public
delta	include/3rd_party/stb_image.h	/^   int    delta[17];   \/\/ old 'firstsymbol' - old 'firstcode'$/;"	m	struct:__anon45	access:public
delta	test/include/3rd_party/stb_image.h	/^   int    delta[17];   \/\/ old 'firstsymbol' - old 'firstcode'$/;"	m	struct:__anon14	access:public
depth	include/3rd_party/stb_image.h	/^   int depth;$/;"	m	struct:__anon52	access:public
depth	test/include/3rd_party/stb_image.h	/^   int depth;$/;"	m	struct:__anon21	access:public
dequant	include/3rd_party/stb_image.h	/^   stbi__uint16 dequant[4][64];$/;"	m	struct:__anon46	access:public
dequant	test/include/3rd_party/stb_image.h	/^   stbi__uint16 dequant[4][64];$/;"	m	struct:__anon15	access:public
dh	include/model/aip_p_mdl.h	/^    uint32_t                    dh; \/\/dst height$/;"	m	struct:AIP_P_CFG_S	access:public
dh	test/include/model/aip_p_mdl.h	/^    uint32_t                    dh; \/\/dst height$/;"	m	struct:AIP_P_CFG_S	access:public
dirtyMatrixTypeCache	include/3rd_party/Matrix.h	/^    void dirtyMatrixTypeCache() {$/;"	f	class:CV::Matrix	access:public	signature:()
dirtyMatrixTypeCache	test/include/3rd_party/Matrix.h	/^    void dirtyMatrixTypeCache() {$/;"	f	class:CV::Matrix	access:public	signature:()
dst_base	include/model/aip_f_mdl.h	/^	uint8_t                     *dst_base;$/;"	m	struct:__anon29	access:public
dst_base	include/model/aip_p_mdl.h	/^    uint8_t                     *dst_base;$/;"	m	struct:AIP_P_CFG_S	access:public
dst_base	src/jz_aip_hal.h	/^	uint32_t		dst_base;$/;"	m	struct:aip_p_chainnode	access:public
dst_base	src/jz_aip_hal.h	/^	uint32_t		dst_base;$/;"	m	struct:aip_t_chainnode	access:public
dst_base	src/jz_aip_hal.h	/^	uint32_t		dst_base[2];$/;"	m	struct:aip_t_chaindesc	access:public
dst_base	src/jz_aip_hal.h	/^	uint32_t	dst_base[2];$/;"	m	struct:aip_p_chaindesc	access:public
dst_base	test/include/model/aip_f_mdl.h	/^	uint8_t                     *dst_base;$/;"	m	struct:__anon7	access:public
dst_base	test/include/model/aip_p_mdl.h	/^    uint8_t                     *dst_base;$/;"	m	struct:AIP_P_CFG_S	access:public
dst_base_useless_paddr	src/ingenic_aip.c	/^static void *dst_base_useless_paddr = NULL;$/;"	v	file:
dst_base_useless_vaddr	src/ingenic_aip.c	/^static void *dst_base_useless_vaddr = NULL;$/;"	v	file:
dst_base_uv	src/jz_aip_hal.h	/^	uint32_t		dst_base_uv;$/;"	m	struct:aip_f_chainnode	access:public
dst_base_uv	src/jz_aip_hal.h	/^	uint32_t		dst_base_uv[2];$/;"	m	struct:aip_f_chaindesc	access:public
dst_base_y	src/jz_aip_hal.h	/^	uint32_t		dst_base_y;$/;"	m	struct:aip_f_chainnode	access:public
dst_base_y	src/jz_aip_hal.h	/^	uint32_t		dst_base_y[2];$/;"	m	struct:aip_f_chaindesc	access:public
dst_cbase	include/model/aip_f_mdl.h	/^	uint8_t                     *dst_cbase;$/;"	m	struct:__anon29	access:public
dst_cbase	test/include/model/aip_f_mdl.h	/^	uint8_t                     *dst_cbase;$/;"	m	struct:__anon7	access:public
dst_h	include/model/aip_f_mdl.h	/^	int16_t                     dst_h;$/;"	m	struct:__anon29	access:public
dst_h	test/include/model/aip_f_mdl.h	/^	int16_t                     dst_h;$/;"	m	struct:__anon7	access:public
dst_height	src/jz_aip_hal.h	/^	uint16_t		dst_height;$/;"	m	struct:aip_f_chainnode	access:public
dst_height	src/jz_aip_hal.h	/^	uint16_t		dst_height;$/;"	m	struct:aip_p_chainnode	access:public
dst_size	src/jz_aip_hal.h	/^	uint32_t		dst_size[2];$/;"	m	struct:aip_f_chaindesc	access:public
dst_size	src/jz_aip_hal.h	/^	uint32_t	dst_size[2];$/;"	m	struct:aip_p_chaindesc	access:public
dst_stride	include/model/aip_f_mdl.h	/^	int16_t                     dst_stride;$/;"	m	struct:__anon29	access:public
dst_stride	include/model/aip_p_mdl.h	/^    uint32_t                    dst_stride;$/;"	m	struct:AIP_P_CFG_S	access:public
dst_stride	src/jz_aip_hal.h	/^	uint16_t		dst_stride;$/;"	m	struct:aip_f_chainnode	access:public
dst_stride	src/jz_aip_hal.h	/^	uint16_t		dst_stride;$/;"	m	struct:aip_t_chainnode	access:public
dst_stride	src/jz_aip_hal.h	/^	uint32_t		dst_stride;$/;"	m	struct:aip_p_chainnode	access:public
dst_stride	src/jz_aip_hal.h	/^	uint32_t	dst_stride[2];$/;"	m	struct:aip_p_chaindesc	access:public
dst_stride	test/include/model/aip_f_mdl.h	/^	int16_t                     dst_stride;$/;"	m	struct:__anon7	access:public
dst_stride	test/include/model/aip_p_mdl.h	/^    uint32_t                    dst_stride;$/;"	m	struct:AIP_P_CFG_S	access:public
dst_w	include/model/aip_f_mdl.h	/^	int16_t                     dst_w;$/;"	m	struct:__anon29	access:public
dst_w	test/include/model/aip_f_mdl.h	/^	int16_t                     dst_w;$/;"	m	struct:__anon7	access:public
dst_width	src/jz_aip_hal.h	/^	uint16_t		dst_width;$/;"	m	struct:aip_f_chainnode	access:public
dst_width	src/jz_aip_hal.h	/^	uint16_t		dst_width;$/;"	m	struct:aip_p_chainnode	access:public
dummy_val	include/model/aip_p_mdl.h	/^    uint32_t                    dummy_val; \/\/NOTE: nv12: [7:0],Y; [23:16],U; [31:24],v;$/;"	m	struct:AIP_P_CFG_S	access:public
dummy_val	src/jz_aip_hal.h	/^	uint32_t		dummy_val;$/;"	m	struct:aip_p_chainnode	access:public
dummy_val	src/jz_aip_hal.h	/^	uint32_t	dummy_val[2];$/;"	m	struct:aip_p_chaindesc	access:public
dummy_val	test/include/model/aip_p_mdl.h	/^    uint32_t                    dummy_val; \/\/NOTE: nv12: [7:0],Y; [23:16],U; [31:24],v;$/;"	m	struct:AIP_P_CFG_S	access:public
dump	test/model/3rd_party/Matrix.cc	/^void Matrix::dump() const {$/;"	f	class:CV::Matrix	signature:() const
dump_aip_f_reg	src/jz_aip_hal.c	/^void dump_aip_f_reg(struct aip_manage *manage)$/;"	f	signature:(struct aip_manage *manage)
dump_aip_p_reg	src/jz_aip_hal.c	/^void dump_aip_p_reg(struct aip_manage *manage)$/;"	f	signature:(struct aip_manage *manage)
dump_aip_t_reg	src/jz_aip_hal.c	/^void dump_aip_t_reg(struct aip_manage *manage)$/;"	f	signature:(struct aip_manage *manage)
dw	include/model/aip_p_mdl.h	/^    uint32_t                    dw; \/\/dst width$/;"	m	struct:AIP_P_CFG_S	access:public
dw	test/include/model/aip_p_mdl.h	/^    uint32_t                    dw; \/\/dst width$/;"	m	struct:AIP_P_CFG_S	access:public
eflags	include/3rd_party/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags;$/;"	m	struct:__anon57	access:public
eflags	test/include/3rd_party/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags;$/;"	m	struct:__anon26	access:public
eob_run	include/3rd_party/stb_image.h	/^   int            eob_run;$/;"	m	struct:__anon46	access:public
eob_run	test/include/3rd_party/stb_image.h	/^   int            eob_run;$/;"	m	struct:__anon15	access:public
eof	include/3rd_party/stb_image.h	/^   int      (*eof)   (void *user);                       \/\/ returns nonzero if we are at end of file\/data$/;"	m	struct:__anon40	access:public
eof	test/include/3rd_party/stb_image.h	/^   int      (*eof)   (void *user);                       \/\/ returns nonzero if we are at end of file\/data$/;"	m	struct:__anon9	access:public
expanded	include/3rd_party/stb_image.h	/^   stbi_uc *idata, *expanded, *out;$/;"	m	struct:__anon52	access:public
expanded	test/include/3rd_party/stb_image.h	/^   stbi_uc *idata, *expanded, *out;$/;"	m	struct:__anon21	access:public
fBottom	include/3rd_party/Rect.h	/^    float fBottom; \/\/!< larger y-axis bounds$/;"	m	struct:CV::Rect	access:public
fBottom	test/include/3rd_party/Rect.h	/^    float fBottom; \/\/!< larger y-axis bounds$/;"	m	struct:CV::Rect	access:public
fLeft	include/3rd_party/Rect.h	/^    float fLeft;   \/\/!< smaller x-axis bounds$/;"	m	struct:CV::Rect	access:public
fLeft	test/include/3rd_party/Rect.h	/^    float fLeft;   \/\/!< smaller x-axis bounds$/;"	m	struct:CV::Rect	access:public
fMat	include/3rd_party/Matrix.h	/^    float fMat[9];$/;"	m	class:CV::Matrix	access:private
fMat	test/include/3rd_party/Matrix.h	/^    float fMat[9];$/;"	m	class:CV::Matrix	access:private
fRight	include/3rd_party/Rect.h	/^    float fRight;  \/\/!< larger x-axis bounds$/;"	m	struct:CV::Rect	access:public
fRight	test/include/3rd_party/Rect.h	/^    float fRight;  \/\/!< larger x-axis bounds$/;"	m	struct:CV::Rect	access:public
fTop	include/3rd_party/Rect.h	/^    float fTop;    \/\/!< smaller y-axis bounds$/;"	m	struct:CV::Rect	access:public
fTop	test/include/3rd_party/Rect.h	/^    float fTop;    \/\/!< smaller y-axis bounds$/;"	m	struct:CV::Rect	access:public
fTypeMask	include/3rd_party/Matrix.h	/^    mutable uint32_t fTypeMask;$/;"	m	class:CV::Matrix	access:private
fTypeMask	test/include/3rd_party/Matrix.h	/^    mutable uint32_t fTypeMask;$/;"	m	class:CV::Matrix	access:private
fX	include/3rd_party/Rect.h	/^    float fX;$/;"	m	struct:CV::Point	access:public
fX	test/include/3rd_party/Rect.h	/^    float fX;$/;"	m	struct:CV::Point	access:public
fY	include/3rd_party/Rect.h	/^    float fY;$/;"	m	struct:CV::Point	access:public
fY	test/include/3rd_party/Rect.h	/^    float fY;$/;"	m	struct:CV::Point	access:public
f_ctrl	src/jz_aip_hal.h	/^	uint32_t		f_ctrl;$/;"	m	struct:aip_f_chainnode	access:public
f_ctrl	src/jz_aip_hal.h	/^	uint32_t		f_ctrl[2];$/;"	m	struct:aip_f_chaindesc	access:public
fast	include/3rd_party/stb_image.h	/^   stbi__uint16 fast[1 << STBI__ZFAST_BITS];$/;"	m	struct:__anon49	access:public
fast	include/3rd_party/stb_image.h	/^   stbi_uc  fast[1 << FAST_BITS];$/;"	m	struct:__anon45	access:public
fast	test/include/3rd_party/stb_image.h	/^   stbi__uint16 fast[1 << STBI__ZFAST_BITS];$/;"	m	struct:__anon18	access:public
fast	test/include/3rd_party/stb_image.h	/^   stbi_uc  fast[1 << FAST_BITS];$/;"	m	struct:__anon14	access:public
fast_ac	include/3rd_party/stb_image.h	/^   stbi__int16 fast_ac[4][1 << FAST_BITS];$/;"	m	struct:__anon46	access:public
fast_ac	test/include/3rd_party/stb_image.h	/^   stbi__int16 fast_ac[4][1 << FAST_BITS];$/;"	m	struct:__anon15	access:public
fast_iob	include/jz_aip/aie_mmap.h	94;"	d
fast_iob	test/include/drivers/aie_mmap.h	100;"	d
fd	src/jz_aip_hal.h	/^	int fd;$/;"	m	struct:aip_manage	access:public
fd_open_cnt	src/jz_aip_hal.h	/^	int fd_open_cnt;$/;"	m	struct:aip_manage	access:public
first	include/3rd_party/stb_image.h	/^   stbi_uc first;$/;"	m	struct:__anon56	access:public
first	test/include/3rd_party/stb_image.h	/^   stbi_uc first;$/;"	m	struct:__anon25	access:public
first_row_filter	include/3rd_party/stb_image.h	/^static stbi_uc first_row_filter[5] =$/;"	v
first_row_filter	test/include/3rd_party/stb_image.h	/^static stbi_uc first_row_filter[5] =$/;"	v
firstcode	include/3rd_party/stb_image.h	/^   stbi__uint16 firstcode[16];$/;"	m	struct:__anon49	access:public
firstcode	test/include/3rd_party/stb_image.h	/^   stbi__uint16 firstcode[16];$/;"	m	struct:__anon18	access:public
firstsymbol	include/3rd_party/stb_image.h	/^   stbi__uint16 firstsymbol[16];$/;"	m	struct:__anon49	access:public
firstsymbol	test/include/3rd_party/stb_image.h	/^   stbi__uint16 firstsymbol[16];$/;"	m	struct:__anon18	access:public
flags	include/3rd_party/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags;$/;"	m	struct:__anon57	access:public
flags	test/include/3rd_party/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags;$/;"	m	struct:__anon26	access:public
floatInvert	test/model/3rd_party/Matrix.cc	56;"	d	file:
fnode	src/ingenic_aip.c	/^static struct aip_f_chainnode *fnode = NULL;$/;"	v	typeref:struct:aip_f_chainnode	file:
fnode_size	src/ingenic_aip.c	/^uint32_t fnode_size = 0;$/;"	v
format	include/jz_aip/ingenic_aip.h	/^    bs_data_format_e    format;$/;"	m	struct:__anon36	access:public
func	include/3rd_party/stb_image_write.h	/^   stbi_write_func *func;$/;"	m	struct:__anon58	access:public
func	test/include/3rd_party/stb_image_write.h	/^   stbi_write_func *func;$/;"	m	struct:__anon27	access:public
gMapPtsProcs	include/3rd_party/Matrix.h	/^    static const MapPtsProc gMapPtsProcs[];$/;"	m	class:CV::Matrix	access:private
gMapPtsProcs	test/include/3rd_party/Matrix.h	/^    static const MapPtsProc gMapPtsProcs[];$/;"	m	class:CV::Matrix	access:private
gMapXYProcs	include/3rd_party/Matrix.h	/^    static const MapXYProc gMapXYProcs[];$/;"	m	class:CV::Matrix	access:private
gMapXYProcs	test/include/3rd_party/Matrix.h	/^    static const MapXYProc gMapXYProcs[];$/;"	m	class:CV::Matrix	access:private
gMapXYProcs	test/model/3rd_party/Matrix.cc	/^const Matrix::MapXYProc Matrix::gMapXYProcs[] = {$/;"	m	class:CV::Matrix	file:
get	include/3rd_party/Matrix.h	/^    float get(int index) const {$/;"	f	class:CV::Matrix	access:public	signature:(int index) const
get	test/include/3rd_party/Matrix.h	/^    float get(int index) const {$/;"	f	class:CV::Matrix	access:public	signature:(int index) const
get9	include/3rd_party/Matrix.h	/^    void get9(float buffer[9]) const {$/;"	f	class:CV::Matrix	access:public	signature:(float buffer[9]) const
get9	test/include/3rd_party/Matrix.h	/^    void get9(float buffer[9]) const {$/;"	f	class:CV::Matrix	access:public	signature:(float buffer[9]) const
getMapPtsProc	include/3rd_party/Matrix.h	/^    MapPtsProc getMapPtsProc() const {$/;"	f	class:CV::Matrix	access:private	signature:() const
getMapPtsProc	test/include/3rd_party/Matrix.h	/^    MapPtsProc getMapPtsProc() const {$/;"	f	class:CV::Matrix	access:private	signature:() const
getMapXYProc	include/3rd_party/Matrix.h	/^    MapXYProc getMapXYProc() const {$/;"	f	class:CV::Matrix	access:private	signature:() const
getMapXYProc	test/include/3rd_party/Matrix.h	/^    MapXYProc getMapXYProc() const {$/;"	f	class:CV::Matrix	access:private	signature:() const
getPerspX	include/3rd_party/Matrix.h	/^    float getPerspX() const {$/;"	f	class:CV::Matrix	access:public	signature:() const
getPerspX	test/include/3rd_party/Matrix.h	/^    float getPerspX() const {$/;"	f	class:CV::Matrix	access:public	signature:() const
getPerspY	include/3rd_party/Matrix.h	/^    float getPerspY() const {$/;"	f	class:CV::Matrix	access:public	signature:() const
getPerspY	test/include/3rd_party/Matrix.h	/^    float getPerspY() const {$/;"	f	class:CV::Matrix	access:public	signature:() const
getPerspectiveTypeMaskOnly	include/3rd_party/Matrix.h	/^    TypeMask getPerspectiveTypeMaskOnly() const {$/;"	f	class:CV::Matrix	access:private	signature:() const
getPerspectiveTypeMaskOnly	test/include/3rd_party/Matrix.h	/^    TypeMask getPerspectiveTypeMaskOnly() const {$/;"	f	class:CV::Matrix	access:private	signature:() const
getScaleX	include/3rd_party/Matrix.h	/^    float getScaleX() const {$/;"	f	class:CV::Matrix	access:public	signature:() const
getScaleX	test/include/3rd_party/Matrix.h	/^    float getScaleX() const {$/;"	f	class:CV::Matrix	access:public	signature:() const
getScaleY	include/3rd_party/Matrix.h	/^    float getScaleY() const {$/;"	f	class:CV::Matrix	access:public	signature:() const
getScaleY	test/include/3rd_party/Matrix.h	/^    float getScaleY() const {$/;"	f	class:CV::Matrix	access:public	signature:() const
getSkewX	include/3rd_party/Matrix.h	/^    float getSkewX() const {$/;"	f	class:CV::Matrix	access:public	signature:() const
getSkewX	test/include/3rd_party/Matrix.h	/^    float getSkewX() const {$/;"	f	class:CV::Matrix	access:public	signature:() const
getSkewY	include/3rd_party/Matrix.h	/^    float getSkewY() const {$/;"	f	class:CV::Matrix	access:public	signature:() const
getSkewY	test/include/3rd_party/Matrix.h	/^    float getSkewY() const {$/;"	f	class:CV::Matrix	access:public	signature:() const
getTranslateX	include/3rd_party/Matrix.h	/^    float getTranslateX() const {$/;"	f	class:CV::Matrix	access:public	signature:() const
getTranslateX	test/include/3rd_party/Matrix.h	/^    float getTranslateX() const {$/;"	f	class:CV::Matrix	access:public	signature:() const
getTranslateY	include/3rd_party/Matrix.h	/^    float getTranslateY() const {$/;"	f	class:CV::Matrix	access:public	signature:() const
getTranslateY	test/include/3rd_party/Matrix.h	/^    float getTranslateY() const {$/;"	f	class:CV::Matrix	access:public	signature:() const
getType	include/3rd_party/Matrix.h	/^    TypeMask getType() const {$/;"	f	class:CV::Matrix	access:public	signature:() const
getType	test/include/3rd_party/Matrix.h	/^    TypeMask getType() const {$/;"	f	class:CV::Matrix	access:public	signature:() const
get_aip_ioaddr	src/jz_aip_hal.c	/^static int get_aip_ioaddr(struct aip_manage* manage)$/;"	f	file:	signature:(struct aip_manage* manage)
get_box_info	src/jz_aip_hal.c	/^int get_box_info(int type)$/;"	f	signature:(int type)
get_matrixs	test/model/3rd_party/Matrix.cc	/^int get_matrixs(float *matrix, float angel, uint32_t src_w, uint32_t src_h,$/;"	f	signature:(float *matrix, float angel, uint32_t src_w, uint32_t src_h, uint32_t dst_w, uint32_t dst_h, uint8_t type)
h	include/3rd_party/stb_image.h	/^      int h,v;$/;"	m	struct:__anon46::__anon47	access:public
h	include/3rd_party/stb_image.h	/^   int w,h;$/;"	m	struct:__anon57	access:public
h	include/jz_aip/ingenic_aip.h	/^    int                 h;$/;"	m	struct:__anon30	access:public
h	test/include/3rd_party/stb_image.h	/^      int h,v;$/;"	m	struct:__anon15::__anon16	access:public
h	test/include/3rd_party/stb_image.h	/^   int w,h;$/;"	m	struct:__anon26	access:public
h2	include/3rd_party/stb_image.h	/^      int x,y,w2,h2;$/;"	m	struct:__anon46::__anon47	access:public
h2	test/include/3rd_party/stb_image.h	/^      int x,y,w2,h2;$/;"	m	struct:__anon15::__anon16	access:public
ha	include/3rd_party/stb_image.h	/^      int hd,ha;$/;"	m	struct:__anon46::__anon47	access:public
ha	test/include/3rd_party/stb_image.h	/^      int hd,ha;$/;"	m	struct:__anon15::__anon16	access:public
hd	include/3rd_party/stb_image.h	/^      int hd,ha;$/;"	m	struct:__anon46::__anon47	access:public
hd	test/include/3rd_party/stb_image.h	/^      int hd,ha;$/;"	m	struct:__anon15::__anon16	access:public
height	include/3rd_party/Rect.h	/^    float height() const {$/;"	f	struct:CV::Rect	access:public	signature:() const
height	include/jz_aip/ingenic_aip.h	/^    int                 height;$/;"	m	struct:__anon36	access:public
height	test/include/3rd_party/Rect.h	/^    float height() const {$/;"	f	struct:CV::Rect	access:public	signature:() const
history	include/3rd_party/stb_image.h	/^   stbi_uc *history;$/;"	m	struct:__anon57	access:public
history	test/include/3rd_party/stb_image.h	/^   stbi_uc *history;$/;"	m	struct:__anon26	access:public
hs	include/3rd_party/stb_image.h	/^   int hs,vs;   \/\/ expansion factor in each axis$/;"	m	struct:__anon48	access:public
hs	test/include/3rd_party/stb_image.h	/^   int hs,vs;   \/\/ expansion factor in each axis$/;"	m	struct:__anon17	access:public
hsz	include/3rd_party/stb_image.h	/^   int bpp, offset, hsz;$/;"	m	struct:__anon54	access:public
hsz	test/include/3rd_party/stb_image.h	/^   int bpp, offset, hsz;$/;"	m	struct:__anon23	access:public
huff_ac	include/3rd_party/stb_image.h	/^   stbi__huffman huff_ac[4];$/;"	m	struct:__anon46	access:public
huff_ac	test/include/3rd_party/stb_image.h	/^   stbi__huffman huff_ac[4];$/;"	m	struct:__anon15	access:public
huff_dc	include/3rd_party/stb_image.h	/^   stbi__huffman huff_dc[4];$/;"	m	struct:__anon46	access:public
huff_dc	test/include/3rd_party/stb_image.h	/^   stbi__huffman huff_dc[4];$/;"	m	struct:__anon15	access:public
i_rdhwr	test/include/drivers/aie_mmap.h	107;"	d
id	include/3rd_party/stb_image.h	/^      int id;$/;"	m	struct:__anon46::__anon47	access:public
id	test/include/3rd_party/stb_image.h	/^      int id;$/;"	m	struct:__anon15::__anon16	access:public
idata	include/3rd_party/stb_image.h	/^   stbi_uc *idata, *expanded, *out;$/;"	m	struct:__anon52	access:public
idata	test/include/3rd_party/stb_image.h	/^   stbi_uc *idata, *expanded, *out;$/;"	m	struct:__anon21	access:public
idct_block_kernel	include/3rd_party/stb_image.h	/^   void (*idct_block_kernel)(stbi_uc *out, int out_stride, short data[64]);$/;"	m	struct:__anon46	access:public
idct_block_kernel	test/include/3rd_party/stb_image.h	/^   void (*idct_block_kernel)(stbi_uc *out, int out_stride, short data[64]);$/;"	m	struct:__anon15	access:public
img_buffer	include/3rd_party/stb_image.h	/^   stbi_uc *img_buffer, *img_buffer_end;$/;"	m	struct:__anon41	access:public
img_buffer	test/include/3rd_party/stb_image.h	/^   stbi_uc *img_buffer, *img_buffer_end;$/;"	m	struct:__anon10	access:public
img_buffer_end	include/3rd_party/stb_image.h	/^   stbi_uc *img_buffer, *img_buffer_end;$/;"	m	struct:__anon41	access:public
img_buffer_end	test/include/3rd_party/stb_image.h	/^   stbi_uc *img_buffer, *img_buffer_end;$/;"	m	struct:__anon10	access:public
img_buffer_original	include/3rd_party/stb_image.h	/^   stbi_uc *img_buffer_original, *img_buffer_original_end;$/;"	m	struct:__anon41	access:public
img_buffer_original	test/include/3rd_party/stb_image.h	/^   stbi_uc *img_buffer_original, *img_buffer_original_end;$/;"	m	struct:__anon10	access:public
img_buffer_original_end	include/3rd_party/stb_image.h	/^   stbi_uc *img_buffer_original, *img_buffer_original_end;$/;"	m	struct:__anon41	access:public
img_buffer_original_end	test/include/3rd_party/stb_image.h	/^   stbi_uc *img_buffer_original, *img_buffer_original_end;$/;"	m	struct:__anon10	access:public
img_comp	include/3rd_party/stb_image.h	/^   } img_comp[4];$/;"	m	struct:__anon46	typeref:struct:__anon46::__anon47	access:public
img_comp	test/include/3rd_party/stb_image.h	/^   } img_comp[4];$/;"	m	struct:__anon15	typeref:struct:__anon15::__anon16	access:public
img_h_max	include/3rd_party/stb_image.h	/^   int img_h_max, img_v_max;$/;"	m	struct:__anon46	access:public
img_h_max	test/include/3rd_party/stb_image.h	/^   int img_h_max, img_v_max;$/;"	m	struct:__anon15	access:public
img_mcu_h	include/3rd_party/stb_image.h	/^   int img_mcu_w, img_mcu_h;$/;"	m	struct:__anon46	access:public
img_mcu_h	test/include/3rd_party/stb_image.h	/^   int img_mcu_w, img_mcu_h;$/;"	m	struct:__anon15	access:public
img_mcu_w	include/3rd_party/stb_image.h	/^   int img_mcu_w, img_mcu_h;$/;"	m	struct:__anon46	access:public
img_mcu_w	test/include/3rd_party/stb_image.h	/^   int img_mcu_w, img_mcu_h;$/;"	m	struct:__anon15	access:public
img_mcu_x	include/3rd_party/stb_image.h	/^   int img_mcu_x, img_mcu_y;$/;"	m	struct:__anon46	access:public
img_mcu_x	test/include/3rd_party/stb_image.h	/^   int img_mcu_x, img_mcu_y;$/;"	m	struct:__anon15	access:public
img_mcu_y	include/3rd_party/stb_image.h	/^   int img_mcu_x, img_mcu_y;$/;"	m	struct:__anon46	access:public
img_mcu_y	test/include/3rd_party/stb_image.h	/^   int img_mcu_x, img_mcu_y;$/;"	m	struct:__anon15	access:public
img_n	include/3rd_party/stb_image.h	/^   int img_n, img_out_n;$/;"	m	struct:__anon41	access:public
img_n	test/include/3rd_party/stb_image.h	/^   int img_n, img_out_n;$/;"	m	struct:__anon10	access:public
img_out_n	include/3rd_party/stb_image.h	/^   int img_n, img_out_n;$/;"	m	struct:__anon41	access:public
img_out_n	test/include/3rd_party/stb_image.h	/^   int img_n, img_out_n;$/;"	m	struct:__anon10	access:public
img_v_max	include/3rd_party/stb_image.h	/^   int img_h_max, img_v_max;$/;"	m	struct:__anon46	access:public
img_v_max	test/include/3rd_party/stb_image.h	/^   int img_h_max, img_v_max;$/;"	m	struct:__anon15	access:public
img_x	include/3rd_party/stb_image.h	/^   stbi__uint32 img_x, img_y;$/;"	m	struct:__anon41	access:public
img_x	test/include/3rd_party/stb_image.h	/^   stbi__uint32 img_x, img_y;$/;"	m	struct:__anon10	access:public
img_y	include/3rd_party/stb_image.h	/^   stbi__uint32 img_x, img_y;$/;"	m	struct:__anon41	access:public
img_y	test/include/3rd_party/stb_image.h	/^   stbi__uint32 img_x, img_y;$/;"	m	struct:__anon10	access:public
index	src/jz_aip_hal.h	/^	char index;$/;"	m	struct:aip_manage	access:public
ingenic_aip_affine_process	src/ingenic_aip.c	/^int ingenic_aip_affine_process(data_info_s *src,$/;"	f	signature:(data_info_s *src, const int box_num, const data_info_s *dst, const box_affine_info_s *boxes, const uint32_t *coef, const uint32_t *offset)
ingenic_aip_deinit	src/ingenic_aip.c	/^int ingenic_aip_deinit(void)$/;"	f	signature:(void)
ingenic_aip_init	src/ingenic_aip.c	/^int ingenic_aip_init(void)$/;"	f	signature:(void)
ingenic_aip_max_cnt	src/ingenic_aip.c	/^int ingenic_aip_max_cnt(int aip_type)$/;"	f	signature:(int aip_type)
ingenic_aip_perspective_process	src/ingenic_aip.c	/^int ingenic_aip_perspective_process(data_info_s *src,$/;"	f	signature:(data_info_s *src, const int box_num, const data_info_s *dst, const box_affine_info_s *boxes, const uint32_t *coef, const uint32_t *offset)
ingenic_aip_resize_process	src/ingenic_aip.c	/^int ingenic_aip_resize_process(data_info_s *src,$/;"	f	signature:(data_info_s *src, const int box_num,data_info_s *dst, const box_resize_info_s *boxes, const uint32_t *coef, const uint32_t *offset)
inset	include/3rd_party/Rect.h	/^    void inset(float dx, float dy) {$/;"	f	struct:CV::Rect	access:public	signature:(float dx, float dy)
inset	test/include/3rd_party/Rect.h	/^    void inset(float dx, float dy) {$/;"	f	struct:CV::Rect	access:public	signature:(float dx, float dy)
intersects	include/3rd_party/Rect.h	/^    bool intersects(const Rect& r) const {$/;"	f	struct:CV::Rect	access:public	signature:(const Rect& r) const
intersects	include/3rd_party/Rect.h	/^    bool intersects(float left, float top, float right, float bottom) const {$/;"	f	struct:CV::Rect	access:public	signature:(float left, float top, float right, float bottom) const
intersects	test/include/3rd_party/Rect.h	/^    bool intersects(const Rect& r) const {$/;"	f	struct:CV::Rect	access:public	signature:(const Rect& r) const
intersects	test/include/3rd_party/Rect.h	/^    bool intersects(float left, float top, float right, float bottom) const {$/;"	f	struct:CV::Rect	access:public	signature:(float left, float top, float right, float bottom) const
invert	include/3rd_party/Matrix.h	/^    bool invert(Matrix* inverse) const {$/;"	f	class:CV::Matrix	access:public	signature:(Matrix* inverse) const
invert	test/include/3rd_party/Matrix.h	/^    bool invert(Matrix* inverse) const {$/;"	f	class:CV::Matrix	access:public	signature:(Matrix* inverse) const
invertNonIdentity	test/model/3rd_party/Matrix.cc	/^bool Matrix::invertNonIdentity(Matrix* inv) const {$/;"	f	class:CV::Matrix	signature:(Matrix* inv) const
io	include/3rd_party/stb_image.h	/^   stbi_io_callbacks io;$/;"	m	struct:__anon41	access:public
io	test/include/3rd_party/stb_image.h	/^   stbi_io_callbacks io;$/;"	m	struct:__anon10	access:public
io_user_data	include/3rd_party/stb_image.h	/^   void *io_user_data;$/;"	m	struct:__anon41	access:public
io_user_data	test/include/3rd_party/stb_image.h	/^   void *io_user_data;$/;"	m	struct:__anon10	access:public
isEmpty	include/3rd_party/Rect.h	/^    bool isEmpty() const {$/;"	f	struct:CV::Rect	access:public	signature:() const
isEmpty	test/include/3rd_party/Rect.h	/^    bool isEmpty() const {$/;"	f	struct:CV::Rect	access:public	signature:() const
isIdentity	include/3rd_party/Matrix.h	/^    bool isIdentity() const {$/;"	f	class:CV::Matrix	access:public	signature:() const
isIdentity	test/include/3rd_party/Matrix.h	/^    bool isIdentity() const {$/;"	f	class:CV::Matrix	access:public	signature:() const
isScaleTranslate	include/3rd_party/Matrix.h	/^    bool isScaleTranslate() const {$/;"	f	class:CV::Matrix	access:public	signature:() const
isScaleTranslate	test/include/3rd_party/Matrix.h	/^    bool isScaleTranslate() const {$/;"	f	class:CV::Matrix	access:public	signature:() const
isSorted	include/3rd_party/Rect.h	/^    bool isSorted() const {$/;"	f	struct:CV::Rect	access:public	signature:() const
isSorted	test/include/3rd_party/Rect.h	/^    bool isSorted() const {$/;"	f	struct:CV::Rect	access:public	signature:() const
isTranslate	include/3rd_party/Matrix.h	/^    bool isTranslate() const {$/;"	f	class:CV::Matrix	access:public	signature:() const
isTranslate	test/include/3rd_party/Matrix.h	/^    bool isTranslate() const {$/;"	f	class:CV::Matrix	access:public	signature:() const
isTriviallyIdentity	include/3rd_party/Matrix.h	/^    bool isTriviallyIdentity() const {$/;"	f	class:CV::Matrix	access:private	signature:() const
isTriviallyIdentity	test/include/3rd_party/Matrix.h	/^    bool isTriviallyIdentity() const {$/;"	f	class:CV::Matrix	access:private	signature:() const
iset	include/3rd_party/Rect.h	/^    void iset(int left, int top, int right, int bottom) {$/;"	f	struct:CV::Rect	access:public	signature:(int left, int top, int right, int bottom)
iset	test/include/3rd_party/Rect.h	/^    void iset(int left, int top, int right, int bottom) {$/;"	f	struct:CV::Rect	access:public	signature:(int left, int top, int right, int bottom)
isetWH	include/3rd_party/Rect.h	/^    void isetWH(int width, int height) {$/;"	f	struct:CV::Rect	access:public	signature:(int width, int height)
isetWH	test/include/3rd_party/Rect.h	/^    void isetWH(int width, int height) {$/;"	f	struct:CV::Rect	access:public	signature:(int width, int height)
iwarpAffine	test/model/bs_src.cc	/^int iwarpAffine(uint8_t *src,uint8_t *dst,int src_w,int src_h,int src_chn,int dst_w,int dst_h,int dst_chn,double *M)$/;"	f	signature:(uint8_t *src,uint8_t *dst,int src_w,int src_h,int src_chn,int dst_w,int dst_h,int dst_chn,double *M)
iwarpAffine_nv12_nv12	test/model/bs_src.cc	/^int iwarpAffine_nv12_nv12(uint8_t *src,uint8_t *dst,int src_w,int src_h,int dst_w,int dst_h,double *M)$/;"	f	signature:(uint8_t *src,uint8_t *dst,int src_w,int src_h,int dst_w,int dst_h,double *M)
iwarpPerspective	test/model/bs_src.cc	/^int iwarpPerspective(uint8_t *src,uint8_t *dst,int src_w,int src_h,int src_chn,int dst_w,int dst_h,int dst_chn,double *M)$/;"	f	signature:(uint8_t *src,uint8_t *dst,int src_w,int src_h,int src_chn,int dst_w,int dst_h,int dst_chn,double *M)
jfif	include/3rd_party/stb_image.h	/^   int            jfif;$/;"	m	struct:__anon46	access:public
jfif	test/include/3rd_party/stb_image.h	/^   int            jfif;$/;"	m	struct:__anon15	access:public
joinNonEmptyArg	include/3rd_party/Rect.h	/^    void joinNonEmptyArg(const Rect& r) {$/;"	f	struct:CV::Rect	access:public	signature:(const Rect& r)
joinNonEmptyArg	test/include/3rd_party/Rect.h	/^    void joinNonEmptyArg(const Rect& r) {$/;"	f	struct:CV::Rect	access:public	signature:(const Rect& r)
joinPossiblyEmptyRect	include/3rd_party/Rect.h	/^    void joinPossiblyEmptyRect(const Rect& r) {$/;"	f	struct:CV::Rect	access:public	signature:(const Rect& r)
joinPossiblyEmptyRect	test/include/3rd_party/Rect.h	/^    void joinPossiblyEmptyRect(const Rect& r) {$/;"	f	struct:CV::Rect	access:public	signature:(const Rect& r)
jz_aip_chainbuf	src/jz_aip_hal.h	/^struct jz_aip_chainbuf {$/;"	s
jz_aip_chainbuf::paddr	src/jz_aip_hal.h	/^	uint32_t paddr;$/;"	m	struct:jz_aip_chainbuf	access:public
jz_aip_chainbuf::size	src/jz_aip_hal.h	/^	uint32_t size;$/;"	m	struct:jz_aip_chainbuf	access:public
jz_aip_chainbuf::vaddr	src/jz_aip_hal.h	/^	void *vaddr;$/;"	m	struct:jz_aip_chainbuf	access:public
jz_aip_readl	src/jz_aip_hal.c	/^unsigned int jz_aip_readl(unsigned int base, unsigned int offset)$/;"	f	signature:(unsigned int base, unsigned int offset)
jz_aip_writel	src/jz_aip_hal.c	/^unsigned int jz_aip_writel(unsigned int base, unsigned int offset, unsigned int value)$/;"	f	signature:(unsigned int base, unsigned int offset, unsigned int value)
kAScaleX	include/3rd_party/Matrix.h	/^    static constexpr int kAScaleX = 0; \/\/!< horizontal scale factor$/;"	m	class:CV::Matrix	access:public
kAScaleX	test/include/3rd_party/Matrix.h	/^    static constexpr int kAScaleX = 0; \/\/!< horizontal scale factor$/;"	m	class:CV::Matrix	access:public
kAScaleY	include/3rd_party/Matrix.h	/^    static constexpr int kAScaleY = 3; \/\/!< vertical scale factor$/;"	m	class:CV::Matrix	access:public
kAScaleY	test/include/3rd_party/Matrix.h	/^    static constexpr int kAScaleY = 3; \/\/!< vertical scale factor$/;"	m	class:CV::Matrix	access:public
kASkewX	include/3rd_party/Matrix.h	/^    static constexpr int kASkewX  = 2; \/\/!< horizontal skew factor$/;"	m	class:CV::Matrix	access:public
kASkewX	test/include/3rd_party/Matrix.h	/^    static constexpr int kASkewX  = 2; \/\/!< horizontal skew factor$/;"	m	class:CV::Matrix	access:public
kASkewY	include/3rd_party/Matrix.h	/^    static constexpr int kASkewY  = 1; \/\/!< vertical skew factor$/;"	m	class:CV::Matrix	access:public
kASkewY	test/include/3rd_party/Matrix.h	/^    static constexpr int kASkewY  = 1; \/\/!< vertical skew factor$/;"	m	class:CV::Matrix	access:public
kATransX	include/3rd_party/Matrix.h	/^    static constexpr int kATransX = 4; \/\/!< horizontal translation$/;"	m	class:CV::Matrix	access:public
kATransX	test/include/3rd_party/Matrix.h	/^    static constexpr int kATransX = 4; \/\/!< horizontal translation$/;"	m	class:CV::Matrix	access:public
kATransY	include/3rd_party/Matrix.h	/^    static constexpr int kATransY = 5; \/\/!< vertical translation$/;"	m	class:CV::Matrix	access:public
kATransY	test/include/3rd_party/Matrix.h	/^    static constexpr int kATransY = 5; \/\/!< vertical translation$/;"	m	class:CV::Matrix	access:public
kAffine_Mask	include/3rd_party/Matrix.h	/^        kAffine_Mask      = 0x04, \/\/!< skew or rotate Matrix$/;"	e	enum:CV::Matrix::TypeMask
kAffine_Mask	test/include/3rd_party/Matrix.h	/^        kAffine_Mask      = 0x04, \/\/!< skew or rotate Matrix$/;"	e	enum:CV::Matrix::TypeMask
kAffine_Shift	test/model/3rd_party/Matrix.cc	/^enum { kTranslate_Shift = 0, kScale_Shift, kAffine_Shift, kPerspective_Shift, kRectStaysRect_Shift };$/;"	e	enum:CV::__anon5	file:
kAllMasks	include/3rd_party/Matrix.h	/^    static constexpr int kAllMasks =$/;"	m	class:CV::Matrix	access:private
kAllMasks	test/include/3rd_party/Matrix.h	/^    static constexpr int kAllMasks =$/;"	m	class:CV::Matrix	access:private
kCenter_ScaleToFit	include/3rd_party/Matrix.h	/^        kCenter_ScaleToFit, \/\/!< scales and aligns to center$/;"	e	enum:CV::Matrix::ScaleToFit
kCenter_ScaleToFit	test/include/3rd_party/Matrix.h	/^        kCenter_ScaleToFit, \/\/!< scales and aligns to center$/;"	e	enum:CV::Matrix::ScaleToFit
kEnd_ScaleToFit	include/3rd_party/Matrix.h	/^        kEnd_ScaleToFit,    \/\/!< scales and aligns to right and bottom$/;"	e	enum:CV::Matrix::ScaleToFit
kEnd_ScaleToFit	test/include/3rd_party/Matrix.h	/^        kEnd_ScaleToFit,    \/\/!< scales and aligns to right and bottom$/;"	e	enum:CV::Matrix::ScaleToFit
kFill_ScaleToFit	include/3rd_party/Matrix.h	/^        kFill_ScaleToFit,   \/\/!< scales in x and y to fill destination Rect$/;"	e	enum:CV::Matrix::ScaleToFit
kFill_ScaleToFit	test/include/3rd_party/Matrix.h	/^        kFill_ScaleToFit,   \/\/!< scales in x and y to fill destination Rect$/;"	e	enum:CV::Matrix::ScaleToFit
kIdentity_Mask	include/3rd_party/Matrix.h	/^        kIdentity_Mask    = 0,    \/\/!< identity Matrix; all bits clear$/;"	e	enum:CV::Matrix::TypeMask
kIdentity_Mask	test/include/3rd_party/Matrix.h	/^        kIdentity_Mask    = 0,    \/\/!< identity Matrix; all bits clear$/;"	e	enum:CV::Matrix::TypeMask
kMPersp0	include/3rd_party/Matrix.h	/^    static constexpr int kMPersp0 = 6; \/\/!< input x perspective factor$/;"	m	class:CV::Matrix	access:public
kMPersp0	test/include/3rd_party/Matrix.h	/^    static constexpr int kMPersp0 = 6; \/\/!< input x perspective factor$/;"	m	class:CV::Matrix	access:public
kMPersp1	include/3rd_party/Matrix.h	/^    static constexpr int kMPersp1 = 7; \/\/!< input y perspective factor$/;"	m	class:CV::Matrix	access:public
kMPersp1	test/include/3rd_party/Matrix.h	/^    static constexpr int kMPersp1 = 7; \/\/!< input y perspective factor$/;"	m	class:CV::Matrix	access:public
kMPersp2	include/3rd_party/Matrix.h	/^    static constexpr int kMPersp2 = 8; \/\/!< perspective bias$/;"	m	class:CV::Matrix	access:public
kMPersp2	test/include/3rd_party/Matrix.h	/^    static constexpr int kMPersp2 = 8; \/\/!< perspective bias$/;"	m	class:CV::Matrix	access:public
kMScaleX	include/3rd_party/Matrix.h	/^    static constexpr int kMScaleX = 0; \/\/!< horizontal scale factor$/;"	m	class:CV::Matrix	access:public
kMScaleX	test/include/3rd_party/Matrix.h	/^    static constexpr int kMScaleX = 0; \/\/!< horizontal scale factor$/;"	m	class:CV::Matrix	access:public
kMScaleY	include/3rd_party/Matrix.h	/^    static constexpr int kMScaleY = 4; \/\/!< vertical scale factor$/;"	m	class:CV::Matrix	access:public
kMScaleY	test/include/3rd_party/Matrix.h	/^    static constexpr int kMScaleY = 4; \/\/!< vertical scale factor$/;"	m	class:CV::Matrix	access:public
kMSkewX	include/3rd_party/Matrix.h	/^    static constexpr int kMSkewX  = 1; \/\/!< horizontal skew factor$/;"	m	class:CV::Matrix	access:public
kMSkewX	test/include/3rd_party/Matrix.h	/^    static constexpr int kMSkewX  = 1; \/\/!< horizontal skew factor$/;"	m	class:CV::Matrix	access:public
kMSkewY	include/3rd_party/Matrix.h	/^    static constexpr int kMSkewY  = 3; \/\/!< vertical skew factor$/;"	m	class:CV::Matrix	access:public
kMSkewY	test/include/3rd_party/Matrix.h	/^    static constexpr int kMSkewY  = 3; \/\/!< vertical skew factor$/;"	m	class:CV::Matrix	access:public
kMTransX	include/3rd_party/Matrix.h	/^    static constexpr int kMTransX = 2; \/\/!< horizontal translation$/;"	m	class:CV::Matrix	access:public
kMTransX	test/include/3rd_party/Matrix.h	/^    static constexpr int kMTransX = 2; \/\/!< horizontal translation$/;"	m	class:CV::Matrix	access:public
kMTransY	include/3rd_party/Matrix.h	/^    static constexpr int kMTransY = 5; \/\/!< vertical translation$/;"	m	class:CV::Matrix	access:public
kMTransY	test/include/3rd_party/Matrix.h	/^    static constexpr int kMTransY = 5; \/\/!< vertical translation$/;"	m	class:CV::Matrix	access:public
kORableMasks	include/3rd_party/Matrix.h	/^    static constexpr int kORableMasks = kTranslate_Mask | kScale_Mask | kAffine_Mask | kPerspective_Mask;$/;"	m	class:CV::Matrix	access:private
kORableMasks	test/include/3rd_party/Matrix.h	/^    static constexpr int kORableMasks = kTranslate_Mask | kScale_Mask | kAffine_Mask | kPerspective_Mask;$/;"	m	class:CV::Matrix	access:private
kOnlyPerspectiveValid_Mask	include/3rd_party/Matrix.h	/^    static constexpr int kOnlyPerspectiveValid_Mask = 0x40;$/;"	m	class:CV::Matrix	access:private
kOnlyPerspectiveValid_Mask	test/include/3rd_party/Matrix.h	/^    static constexpr int kOnlyPerspectiveValid_Mask = 0x40;$/;"	m	class:CV::Matrix	access:private
kPerspective_Mask	include/3rd_party/Matrix.h	/^        kPerspective_Mask = 0x08, \/\/!< perspective Matrix$/;"	e	enum:CV::Matrix::TypeMask
kPerspective_Mask	test/include/3rd_party/Matrix.h	/^        kPerspective_Mask = 0x08, \/\/!< perspective Matrix$/;"	e	enum:CV::Matrix::TypeMask
kPerspective_Shift	test/model/3rd_party/Matrix.cc	/^enum { kTranslate_Shift = 0, kScale_Shift, kAffine_Shift, kPerspective_Shift, kRectStaysRect_Shift };$/;"	e	enum:CV::__anon5	file:
kRectStaysRect_Mask	include/3rd_party/Matrix.h	/^    static constexpr int kRectStaysRect_Mask = 0x10;$/;"	m	class:CV::Matrix	access:private
kRectStaysRect_Mask	test/include/3rd_party/Matrix.h	/^    static constexpr int kRectStaysRect_Mask = 0x10;$/;"	m	class:CV::Matrix	access:private
kRectStaysRect_Shift	test/model/3rd_party/Matrix.cc	/^enum { kTranslate_Shift = 0, kScale_Shift, kAffine_Shift, kPerspective_Shift, kRectStaysRect_Shift };$/;"	e	enum:CV::__anon5	file:
kScalar1Int	test/model/3rd_party/Matrix.cc	/^static const int32_t kScalar1Int = 0x3f800000;$/;"	m	namespace:CV	file:
kScale_Mask	include/3rd_party/Matrix.h	/^        kScale_Mask       = 0x02, \/\/!< scale Matrix$/;"	e	enum:CV::Matrix::TypeMask
kScale_Mask	test/include/3rd_party/Matrix.h	/^        kScale_Mask       = 0x02, \/\/!< scale Matrix$/;"	e	enum:CV::Matrix::TypeMask
kScale_Shift	test/model/3rd_party/Matrix.cc	/^enum { kTranslate_Shift = 0, kScale_Shift, kAffine_Shift, kPerspective_Shift, kRectStaysRect_Shift };$/;"	e	enum:CV::__anon5	file:
kStart_ScaleToFit	include/3rd_party/Matrix.h	/^        kStart_ScaleToFit,  \/\/!< scales and aligns to left and top$/;"	e	enum:CV::Matrix::ScaleToFit
kStart_ScaleToFit	test/include/3rd_party/Matrix.h	/^        kStart_ScaleToFit,  \/\/!< scales and aligns to left and top$/;"	e	enum:CV::Matrix::ScaleToFit
kTranslate_Mask	include/3rd_party/Matrix.h	/^        kTranslate_Mask   = 0x01, \/\/!< translation Matrix$/;"	e	enum:CV::Matrix::TypeMask
kTranslate_Mask	test/include/3rd_party/Matrix.h	/^        kTranslate_Mask   = 0x01, \/\/!< translation Matrix$/;"	e	enum:CV::Matrix::TypeMask
kTranslate_Shift	test/model/3rd_party/Matrix.cc	/^enum { kTranslate_Shift = 0, kScale_Shift, kAffine_Shift, kPerspective_Shift, kRectStaysRect_Shift };$/;"	e	enum:CV::__anon5	file:
kUnknown_Mask	include/3rd_party/Matrix.h	/^    static constexpr int kUnknown_Mask = 0x80;$/;"	m	class:CV::Matrix	access:private
kUnknown_Mask	test/include/3rd_party/Matrix.h	/^    static constexpr int kUnknown_Mask = 0x80;$/;"	m	class:CV::Matrix	access:private
k_stride_x	include/jz_aip/ingenic_aip.h	/^    uint8_t             k_stride_x; \/\/ kernel stride in x$/;"	m	struct:__anon37	access:public
k_stride_y	include/jz_aip/ingenic_aip.h	/^    uint8_t             k_stride_y; \/\/ kernel stride in y$/;"	m	struct:__anon37	access:public
kh	include/jz_aip/ingenic_aip.h	/^    uint8_t             kh; \/\/ kernel size height$/;"	m	struct:__anon37	access:public
kw	include/jz_aip/ingenic_aip.h	/^    uint8_t             kw; \/\/ kernel size width$/;"	m	struct:__anon37	access:public
left	include/3rd_party/Rect.h	/^    float left() const {$/;"	f	struct:CV::Rect	access:public	signature:() const
left	test/include/3rd_party/Rect.h	/^    float left() const {$/;"	f	struct:CV::Rect	access:public	signature:() const
length	include/3rd_party/stb_image.h	/^   stbi__uint32 length;$/;"	m	struct:__anon51	access:public
length	test/include/3rd_party/stb_image.h	/^   stbi__uint32 length;$/;"	m	struct:__anon20	access:public
lflags	include/3rd_party/stb_image.h	/^   int lflags;$/;"	m	struct:__anon57	access:public
lflags	test/include/3rd_party/stb_image.h	/^   int lflags;$/;"	m	struct:__anon26	access:public
line0	include/3rd_party/stb_image.h	/^   stbi_uc *line0,*line1;$/;"	m	struct:__anon48	access:public
line0	test/include/3rd_party/stb_image.h	/^   stbi_uc *line0,*line1;$/;"	m	struct:__anon17	access:public
line1	include/3rd_party/stb_image.h	/^   stbi_uc *line0,*line1;$/;"	m	struct:__anon48	access:public
line1	test/include/3rd_party/stb_image.h	/^   stbi_uc *line0,*line1;$/;"	m	struct:__anon17	access:public
line_size	include/3rd_party/stb_image.h	/^   int line_size;$/;"	m	struct:__anon57	access:public
line_size	test/include/3rd_party/stb_image.h	/^   int line_size;$/;"	m	struct:__anon26	access:public
line_stride	include/jz_aip/ingenic_aip.h	/^    int                 line_stride;$/;"	m	struct:__anon36	access:public
linebuf	include/3rd_party/stb_image.h	/^      stbi_uc *linebuf;$/;"	m	struct:__anon46::__anon47	access:public
linebuf	test/include/3rd_party/stb_image.h	/^      stbi_uc *linebuf;$/;"	m	struct:__anon15::__anon16	access:public
load_jpeg_image	include/3rd_party/stb_image.h	/^static stbi_uc *load_jpeg_image(stbi__jpeg *z, int *out_x, int *out_y, int *comp, int req_comp)$/;"	f	signature:(stbi__jpeg *z, int *out_x, int *out_y, int *comp, int req_comp)
load_jpeg_image	test/include/3rd_party/stb_image.h	/^static stbi_uc *load_jpeg_image(stbi__jpeg *z, int *out_x, int *out_y, int *comp, int req_comp)$/;"	f	signature:(stbi__jpeg *z, int *out_x, int *out_y, int *comp, int req_comp)
locate	include/jz_aip/ingenic_aip.h	/^    bs_data_locate_e    locate;$/;"	m	struct:__anon36	access:public
lpal	include/3rd_party/stb_image.h	/^   stbi_uc lpal[256][4];$/;"	m	struct:__anon57	access:public
lpal	test/include/3rd_party/stb_image.h	/^   stbi_uc lpal[256][4];$/;"	m	struct:__anon26	access:public
ma	include/3rd_party/stb_image.h	/^   unsigned int mr,mg,mb,ma, all_a;$/;"	m	struct:__anon54	access:public
ma	test/include/3rd_party/stb_image.h	/^   unsigned int mr,mg,mb,ma, all_a;$/;"	m	struct:__anon23	access:public
main	test/sample/aip_affine/aip_affine_test.c	/^int main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
main	test/sample/aip_covent/aip_covent_test.c	/^int main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
main	test/sample/aip_perspective/aip_perspective_test.c	/^int main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
main	test/sample/aip_resize/aip_resize_test.c	/^int main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
makeInset	include/3rd_party/Rect.h	/^    Rect makeInset(float dx, float dy) const {$/;"	f	struct:CV::Rect	access:public	signature:(float dx, float dy) const
makeInset	test/include/3rd_party/Rect.h	/^    Rect makeInset(float dx, float dy) const {$/;"	f	struct:CV::Rect	access:public	signature:(float dx, float dy) const
makeOffset	include/3rd_party/Rect.h	/^    Rect makeOffset(float dx, float dy) const {$/;"	f	struct:CV::Rect	access:public	signature:(float dx, float dy) const
makeOffset	test/include/3rd_party/Rect.h	/^    Rect makeOffset(float dx, float dy) const {$/;"	f	struct:CV::Rect	access:public	signature:(float dx, float dy) const
makeOutset	include/3rd_party/Rect.h	/^    Rect makeOutset(float dx, float dy) const {$/;"	f	struct:CV::Rect	access:public	signature:(float dx, float dy) const
makeOutset	test/include/3rd_party/Rect.h	/^    Rect makeOutset(float dx, float dy) const {$/;"	f	struct:CV::Rect	access:public	signature:(float dx, float dy) const
makeSorted	include/3rd_party/Rect.h	/^    Rect makeSorted() const {$/;"	f	struct:CV::Rect	access:public	signature:() const
makeSorted	test/include/3rd_party/Rect.h	/^    Rect makeSorted() const {$/;"	f	struct:CV::Rect	access:public	signature:() const
manage_f	src/jz_aip_hal.c	/^struct aip_manage *manage_f = NULL;$/;"	v	typeref:struct:aip_manage
manage_malloc_count	src/jz_aip_hal.c	/^static int manage_malloc_count = 0;$/;"	v	file:
manage_p	src/jz_aip_hal.c	/^struct aip_manage *manage_p = NULL;$/;"	v	typeref:struct:aip_manage
manage_t	src/jz_aip_hal.c	/^struct aip_manage *manage_t = NULL;$/;"	v	typeref:struct:aip_manage
mapPoints	include/3rd_party/Matrix.h	/^    void mapPoints(Point dst[], const Point src[], int count) const {$/;"	f	class:CV::Matrix	access:public	signature:(Point dst[], const Point src[], int count) const
mapPoints	include/3rd_party/Matrix.h	/^    void mapPoints(Point pts[], int count) const {$/;"	f	class:CV::Matrix	access:public	signature:(Point pts[], int count) const
mapPoints	test/include/3rd_party/Matrix.h	/^    void mapPoints(Point dst[], const Point src[], int count) const {$/;"	f	class:CV::Matrix	access:public	signature:(Point dst[], const Point src[], int count) const
mapPoints	test/include/3rd_party/Matrix.h	/^    void mapPoints(Point pts[], int count) const {$/;"	f	class:CV::Matrix	access:public	signature:(Point pts[], int count) const
mapRect	include/3rd_party/Matrix.h	/^    Rect mapRect(const Rect& src) const {$/;"	f	class:CV::Matrix	access:public	signature:(const Rect& src) const
mapRect	include/3rd_party/Matrix.h	/^    bool mapRect(Rect* rect) const {$/;"	f	class:CV::Matrix	access:public	signature:(Rect* rect) const
mapRect	test/include/3rd_party/Matrix.h	/^    Rect mapRect(const Rect& src) const {$/;"	f	class:CV::Matrix	access:public	signature:(const Rect& src) const
mapRect	test/include/3rd_party/Matrix.h	/^    bool mapRect(Rect* rect) const {$/;"	f	class:CV::Matrix	access:public	signature:(Rect* rect) const
mapXY	include/3rd_party/Matrix.h	/^    Point mapXY(float x, float y) const {$/;"	f	class:CV::Matrix	access:public	signature:(float x, float y) const
mapXY	include/3rd_party/Matrix.h	/^    void mapXY(float x, float y, Point* result) const {$/;"	f	class:CV::Matrix	access:public	signature:(float x, float y, Point* result) const
mapXY	test/include/3rd_party/Matrix.h	/^    Point mapXY(float x, float y) const {$/;"	f	class:CV::Matrix	access:public	signature:(float x, float y) const
mapXY	test/include/3rd_party/Matrix.h	/^    void mapXY(float x, float y, Point* result) const {$/;"	f	class:CV::Matrix	access:public	signature:(float x, float y, Point* result) const
marker	include/3rd_party/stb_image.h	/^   unsigned char  marker;      \/\/ marker seen while filling entropy buffer$/;"	m	struct:__anon46	access:public
marker	test/include/3rd_party/stb_image.h	/^   unsigned char  marker;      \/\/ marker seen while filling entropy buffer$/;"	m	struct:__anon15	access:public
matrix	include/jz_aip/ingenic_aip.h	/^    float               matrix[9];$/;"	m	struct:__anon32	access:public
matrix	include/jz_aip/ingenic_aip.h	/^    float               matrix[9];\/\/fixme$/;"	m	struct:__anon31	access:public
matrix_double_to_s32	test/model/bs_src.cc	/^static inline void matrix_double_to_s32(double *src, int64_t *dst,int num,int shift)$/;"	f	file:	signature:(double *src, int64_t *dst,int num,int shift)
matrix_g	test/sample/aip_affine/aip_affine_test.c	/^float matrix_g[][9] = {$/;"	v
matrix_g	test/sample/aip_covent/aip_covent_test.c	/^float matrix_g[][9] = {$/;"	v
matrix_g	test/sample/aip_perspective/aip_perspective_test.c	/^float matrix_g[][9] = {$/;"	v
matrix_g	test/sample/aip_resize/aip_resize_test.c	/^float matrix_g[][9] = {$/;"	v
max_x	include/3rd_party/stb_image.h	/^   int max_x, max_y;$/;"	m	struct:__anon57	access:public
max_x	test/include/3rd_party/stb_image.h	/^   int max_x, max_y;$/;"	m	struct:__anon26	access:public
max_y	include/3rd_party/stb_image.h	/^   int max_x, max_y;$/;"	m	struct:__anon57	access:public
max_y	test/include/3rd_party/stb_image.h	/^   int max_x, max_y;$/;"	m	struct:__anon26	access:public
maxcode	include/3rd_party/stb_image.h	/^   int maxcode[17];$/;"	m	struct:__anon49	access:public
maxcode	include/3rd_party/stb_image.h	/^   unsigned int maxcode[18];$/;"	m	struct:__anon45	access:public
maxcode	test/include/3rd_party/stb_image.h	/^   int maxcode[17];$/;"	m	struct:__anon18	access:public
maxcode	test/include/3rd_party/stb_image.h	/^   unsigned int maxcode[18];$/;"	m	struct:__anon14	access:public
mb	include/3rd_party/stb_image.h	/^   unsigned int mr,mg,mb,ma, all_a;$/;"	m	struct:__anon54	access:public
mb	test/include/3rd_party/stb_image.h	/^   unsigned int mr,mg,mb,ma, all_a;$/;"	m	struct:__anon23	access:public
mem_fd	src/jz_aip_hal.h	/^	int mem_fd;$/;"	m	struct:aip_manage	access:public
mg	include/3rd_party/stb_image.h	/^   unsigned int mr,mg,mb,ma, all_a;$/;"	m	struct:__anon54	access:public
mg	test/include/3rd_party/stb_image.h	/^   unsigned int mr,mg,mb,ma, all_a;$/;"	m	struct:__anon23	access:public
mode	src/jz_aip_hal.h	/^	uint32_t		mode;$/;"	m	struct:aip_p_chainnode	access:public
mode	src/jz_aip_hal.h	/^	uint32_t	mode[2];$/;"	m	struct:aip_p_chaindesc	access:public
model	test/sample/aip_affine/Makefile	/^model := $(wildcard ..\/..\/model\/*.c)$/;"	m
model	test/sample/aip_perspective/Makefile	/^model := $(wildcard ..\/..\/model\/*.c)$/;"	m
model	test/sample/aip_resize/Makefile	/^model := $(wildcard ..\/..\/model\/*.c)$/;"	m
mr	include/3rd_party/stb_image.h	/^   unsigned int mr,mg,mb,ma, all_a;$/;"	m	struct:__anon54	access:public
mr	test/include/3rd_party/stb_image.h	/^   unsigned int mr,mg,mb,ma, all_a;$/;"	m	struct:__anon23	access:public
muladdmul	test/model/3rd_party/Matrix.cc	/^static inline float muladdmul(float a, float b, float c, float d) {$/;"	f	namespace:CV	signature:(float a, float b, float c, float d)
mutex_f	src/ingenic_aip.c	/^pthread_mutex_t mutex_f = PTHREAD_MUTEX_INITIALIZER;$/;"	v
mutex_init	src/ingenic_aip.c	/^pthread_mutex_t mutex_init = PTHREAD_MUTEX_INITIALIZER;$/;"	v
mutex_p	src/ingenic_aip.c	/^pthread_mutex_t mutex_p = PTHREAD_MUTEX_INITIALIZER;$/;"	v
mutex_t	src/ingenic_aip.c	/^pthread_mutex_t mutex_t = PTHREAD_MUTEX_INITIALIZER;$/;"	v
mxuCeil	include/model/mxu_types_c.h	/^inline  int  mxuCeil( double value )$/;"	f	signature:( double value )
mxuCeil	test/include/model/mxu_types_c.h	/^inline  int  mxuCeil( double value )$/;"	f	signature:( double value )
mxuFloor	include/model/mxu_types_c.h	/^inline  int  mxuFloor( double value )$/;"	f	signature:( double value )
mxuFloor	test/include/model/mxu_types_c.h	/^inline  int  mxuFloor( double value )$/;"	f	signature:( double value )
mxuRound	include/model/mxu_types_c.h	/^inline  int  mxuRound( double value )$/;"	f	signature:( double value )
mxuRound	test/include/model/mxu_types_c.h	/^inline  int  mxuRound( double value )$/;"	f	signature:( double value )
name	src/jz_aip_hal.h	/^	char name[16];$/;"	m	struct:aip_manage	access:public
nna_cache_attr	include/jz_aip/aie_mmap.h	/^typedef enum nna_cache_attr {$/;"	g
nna_cache_attr	test/include/drivers/aie_mmap.h	/^typedef enum nna_cache_attr {$/;"	g
nna_cache_attr_t	include/jz_aip/aie_mmap.h	/^} nna_cache_attr_t;$/;"	t	typeref:enum:nna_cache_attr
nna_cache_attr_t	test/include/drivers/aie_mmap.h	/^} nna_cache_attr_t;$/;"	t	typeref:enum:nna_cache_attr
nna_dma_data_direction	include/jz_aip/aie_mmap.h	/^enum nna_dma_data_direction {$/;"	g
nna_dma_data_direction	test/include/drivers/aie_mmap.h	/^enum nna_dma_data_direction {$/;"	g
nomore	include/3rd_party/stb_image.h	/^   int            nomore;      \/\/ flag if we saw a marker so must stop$/;"	m	struct:__anon46	access:public
nomore	test/include/3rd_party/stb_image.h	/^   int            nomore;      \/\/ flag if we saw a marker so must stop$/;"	m	struct:__anon15	access:public
nullptr	include/3rd_party/Rect.h	/^} nullptr = {};$/;"	v	typeref:class:nullptr_t
nullptr	test/include/3rd_party/Rect.h	/^} nullptr = {};$/;"	v	typeref:class:nullptr_t
nullptr_t	include/3rd_party/Rect.h	/^const class nullptr_t$/;"	c
nullptr_t	test/include/3rd_party/Rect.h	/^const class nullptr_t$/;"	c
nullptr_t::operator T C::*	include/3rd_party/Rect.h	/^    inline operator T C::*() const$/;"	f	class:nullptr_t	access:public	signature:() const
nullptr_t::operator T C::*	test/include/3rd_party/Rect.h	/^    inline operator T C::*() const$/;"	f	class:nullptr_t	access:public	signature:() const
nullptr_t::operator T*	include/3rd_party/Rect.h	/^    inline operator T*() const { return 0; }$/;"	f	class:nullptr_t	access:public	signature:() const
nullptr_t::operator T*	test/include/3rd_party/Rect.h	/^    inline operator T*() const { return 0; }$/;"	f	class:nullptr_t	access:public	signature:() const
num_bits	include/3rd_party/stb_image.h	/^   int num_bits;$/;"	m	struct:__anon50	access:public
num_bits	test/include/3rd_party/stb_image.h	/^   int num_bits;$/;"	m	struct:__anon19	access:public
num_channels	include/3rd_party/stb_image.h	/^   int num_channels;$/;"	m	struct:__anon43	access:public
num_channels	test/include/3rd_party/stb_image.h	/^   int num_channels;$/;"	m	struct:__anon12	access:public
nv12_bgra	test/model/bs_src.cc	/^int nv12_bgra(uint8_t* src_y, uint8_t* src_uv, int in_height, int in_width,$/;"	f	signature:(uint8_t* src_y, uint8_t* src_uv, int in_height, int in_width, int iline_size,uint8_t* dst, int oline_size, bs_data_format_e order)
nv2bgr_coef	test/sample/aip_affine/aip_affine_test.c	/^unsigned int nv2bgr_coef[9] = {$/;"	v
nv2bgr_coef	test/sample/aip_covent/aip_covent_test.c	/^unsigned int nv2bgr_coef[9] = {$/;"	v
nv2bgr_coef	test/sample/aip_perspective/aip_perspective_test.c	/^unsigned int nv2bgr_coef[9] = {$/;"	v
nv2bgr_coef	test/sample/aip_resize/aip_resize_test.c	/^unsigned int nv2bgr_coef[9] = {$/;"	v
nv2bgr_ofst	test/sample/aip_affine/aip_affine_test.c	/^unsigned int nv2bgr_ofst[2] = {16, 128};$/;"	v
nv2bgr_ofst	test/sample/aip_covent/aip_covent_test.c	/^unsigned int nv2bgr_ofst[2] = {16, 128};$/;"	v
nv2bgr_ofst	test/sample/aip_perspective/aip_perspective_test.c	/^unsigned int nv2bgr_ofst[2] = {16, 128};$/;"	v
nv2bgr_ofst	test/sample/aip_resize/aip_resize_test.c	/^unsigned int nv2bgr_ofst[2] = {16, 128};$/;"	v
offset	include/3rd_party/Rect.h	/^    void offset(float dx, float dy) {$/;"	f	struct:CV::Rect	access:public	signature:(float dx, float dy)
offset	include/3rd_party/stb_image.h	/^   int bpp, offset, hsz;$/;"	m	struct:__anon54	access:public
offset	src/jz_aip_hal.h	/^	uint32_t		offset;$/;"	m	struct:aip_p_chainnode	access:public
offset	src/jz_aip_hal.h	/^	uint32_t	offset[2];$/;"	m	struct:aip_p_chaindesc	access:public
offset	test/include/3rd_party/Rect.h	/^    void offset(float dx, float dy) {$/;"	f	struct:CV::Rect	access:public	signature:(float dx, float dy)
offset	test/include/3rd_party/stb_image.h	/^   int bpp, offset, hsz;$/;"	m	struct:__anon23	access:public
offsetTo	include/3rd_party/Rect.h	/^    void offsetTo(float newX, float newY) {$/;"	f	struct:CV::Rect	access:public	signature:(float newX, float newY)
offsetTo	test/include/3rd_party/Rect.h	/^    void offsetTo(float newX, float newY) {$/;"	f	struct:CV::Rect	access:public	signature:(float newX, float newY)
ofst	include/model/aip_p_mdl.h	/^    uint8_t                     ofst[2];$/;"	m	struct:AIP_P_CFG_S	access:public
ofst	test/include/model/aip_p_mdl.h	/^    uint8_t                     ofst[2];$/;"	m	struct:AIP_P_CFG_S	access:public
only_scale_and_translate	test/model/3rd_party/Matrix.cc	/^static bool only_scale_and_translate(unsigned mask) {$/;"	f	namespace:CV	signature:(unsigned mask)
opencv_resize	test/model/bs_src.cc	/^int opencv_resize(uint8_t *src_base,int src_w,int src_h,int src_chn,uint8_t *dst_base,int dst_w,int dst_h,int dst_chn)$/;"	f	signature:(uint8_t *src_base,int src_w,int src_h,int src_chn,uint8_t *dst_base,int dst_w,int dst_h,int dst_chn)
opencv_resize	test/model/bs_src.cc	/^int opencv_resize(uint8_t *src_base,int src_w,int src_h,int src_chn,uint8_t *dst_base,int dst_w,int dst_h,int dst_chn){$/;"	f	signature:(uint8_t *src_base,int src_w,int src_h,int src_chn,uint8_t *dst_base,int dst_w,int dst_h,int dst_chn)
operator !=	include/3rd_party/Matrix.h	/^    friend bool operator!=(const Matrix& a, const Matrix& b) {$/;"	f	class:CV::Matrix	access:friend	signature:(const Matrix& a, const Matrix& b)
operator !=	test/include/3rd_party/Matrix.h	/^    friend bool operator!=(const Matrix& a, const Matrix& b) {$/;"	f	class:CV::Matrix	access:friend	signature:(const Matrix& a, const Matrix& b)
operator ==	test/model/3rd_party/Matrix.cc	/^bool operator==(const Matrix& a, const Matrix& b) {$/;"	f	namespace:CV	signature:(const Matrix& a, const Matrix& b)
operator T C::*	include/3rd_party/Rect.h	/^    inline operator T C::*() const$/;"	f	class:nullptr_t	access:public	signature:() const
operator T C::*	test/include/3rd_party/Rect.h	/^    inline operator T C::*() const$/;"	f	class:nullptr_t	access:public	signature:() const
operator T*	include/3rd_party/Rect.h	/^    inline operator T*() const { return 0; }$/;"	f	class:nullptr_t	access:public	signature:() const
operator T*	test/include/3rd_party/Rect.h	/^    inline operator T*() const { return 0; }$/;"	f	class:nullptr_t	access:public	signature:() const
operator []	include/3rd_party/Matrix.h	/^    float operator[](int index) const {$/;"	f	class:CV::Matrix	access:public	signature:(int index) const
operator []	include/3rd_party/Matrix.h	/^    float& operator[](int index) {$/;"	f	class:CV::Matrix	access:public	signature:(int index)
operator []	test/include/3rd_party/Matrix.h	/^    float operator[](int index) const {$/;"	f	class:CV::Matrix	access:public	signature:(int index) const
operator []	test/include/3rd_party/Matrix.h	/^    float& operator[](int index) {$/;"	f	class:CV::Matrix	access:public	signature:(int index)
orTypeMask	include/3rd_party/Matrix.h	/^    void orTypeMask(int mask) {$/;"	f	class:CV::Matrix	access:private	signature:(int mask)
orTypeMask	test/include/3rd_party/Matrix.h	/^    void orTypeMask(int mask) {$/;"	f	class:CV::Matrix	access:private	signature:(int mask)
order	include/3rd_party/stb_image.h	/^   int scan_n, order[4];$/;"	m	struct:__anon46	access:public
order	include/model/aip_p_mdl.h	/^    uint32_t                    order;$/;"	m	struct:AIP_P_CFG_S	access:public
order	test/include/3rd_party/stb_image.h	/^   int scan_n, order[4];$/;"	m	struct:__anon15	access:public
order	test/include/model/aip_p_mdl.h	/^    uint32_t                    order;$/;"	m	struct:AIP_P_CFG_S	access:public
out	include/3rd_party/stb_image.h	/^   stbi_uc *idata, *expanded, *out;$/;"	m	struct:__anon52	access:public
out	include/3rd_party/stb_image.h	/^   stbi_uc *out;                 \/\/ output buffer (always 4 components)$/;"	m	struct:__anon57	access:public
out	test/include/3rd_party/stb_image.h	/^   stbi_uc *idata, *expanded, *out;$/;"	m	struct:__anon21	access:public
out	test/include/3rd_party/stb_image.h	/^   stbi_uc *out;                 \/\/ output buffer (always 4 components)$/;"	m	struct:__anon26	access:public
outset	include/3rd_party/Rect.h	/^    void outset(float dx, float dy) {$/;"	f	struct:CV::Rect	access:public	signature:(float dx, float dy)
outset	test/include/3rd_party/Rect.h	/^    void outset(float dx, float dy) {$/;"	f	struct:CV::Rect	access:public	signature:(float dx, float dy)
p_ctrl	src/jz_aip_hal.h	/^	uint32_t		p_ctrl;$/;"	m	struct:aip_p_chainnode	access:public
p_ctrl	src/jz_aip_hal.h	/^	uint32_t	p_ctrl[2];$/;"	m	struct:aip_p_chaindesc	access:public
pad_bottom	include/jz_aip/ingenic_aip.h	/^    uint8_t             pad_bottom;$/;"	m	struct:__anon37	access:public
pad_left	include/jz_aip/ingenic_aip.h	/^    uint8_t             pad_left;$/;"	m	struct:__anon37	access:public
pad_right	include/jz_aip/ingenic_aip.h	/^    uint8_t             pad_right;$/;"	m	struct:__anon37	access:public
pad_top	include/jz_aip/ingenic_aip.h	/^    uint8_t             pad_top;$/;"	m	struct:__anon37	access:public
paddr	src/jz_aip_hal.h	/^	uint32_t paddr;$/;"	m	struct:jz_aip_chainbuf	access:public
pal	include/3rd_party/stb_image.h	/^   stbi_uc  pal[256][4];$/;"	m	struct:__anon57	access:public
pal	test/include/3rd_party/stb_image.h	/^   stbi_uc  pal[256][4];$/;"	m	struct:__anon26	access:public
param	include/model/aip_p_mdl.h	/^    int32_t                     param[9];$/;"	m	struct:AIP_P_CFG_S	access:public
param	test/include/model/aip_p_mdl.h	/^    int32_t                     param[9];$/;"	m	struct:AIP_P_CFG_S	access:public
parse	include/3rd_party/stb_image.h	/^   int parse, step;$/;"	m	struct:__anon57	access:public
parse	test/include/3rd_party/stb_image.h	/^   int parse, step;$/;"	m	struct:__anon26	access:public
perspective	test/sample/aip_resize/aip_resize_test.c	/^void * perspective(void *arg)$/;"	f	signature:(void *arg)
plane_stride	include/jz_aip/ingenic_aip.h	/^    uint32_t            plane_stride;$/;"	m	struct:__anon37	access:public
plane_stride	include/jz_aip/ingenic_aip.h	/^    uint32_t            plane_stride;$/;"	m	struct:__anon38	access:public
pnode	src/ingenic_aip.c	/^static struct aip_p_chainnode *pnode = NULL;$/;"	v	typeref:struct:aip_p_chainnode	file:
pnode_size	src/ingenic_aip.c	/^uint32_t pnode_size = 0;$/;"	v
postConcat	test/model/3rd_party/Matrix.cc	/^void Matrix::postConcat(const Matrix& mat) {$/;"	f	class:CV::Matrix	signature:(const Matrix& mat)
postIDiv	test/model/3rd_party/Matrix.cc	/^bool Matrix::postIDiv(int divx, int divy) {$/;"	f	class:CV::Matrix	signature:(int divx, int divy)
postRotate	test/model/3rd_party/Matrix.cc	/^void Matrix::postRotate(float degrees) {$/;"	f	class:CV::Matrix	signature:(float degrees)
postRotate	test/model/3rd_party/Matrix.cc	/^void Matrix::postRotate(float degrees, float px, float py) {$/;"	f	class:CV::Matrix	signature:(float degrees, float px, float py)
postScale	test/model/3rd_party/Matrix.cc	/^void Matrix::postScale(float sx, float sy) {$/;"	f	class:CV::Matrix	signature:(float sx, float sy)
postScale	test/model/3rd_party/Matrix.cc	/^void Matrix::postScale(float sx, float sy, float px, float py) {$/;"	f	class:CV::Matrix	signature:(float sx, float sy, float px, float py)
postSkew	test/model/3rd_party/Matrix.cc	/^void Matrix::postSkew(float sx, float sy) {$/;"	f	class:CV::Matrix	signature:(float sx, float sy)
postSkew	test/model/3rd_party/Matrix.cc	/^void Matrix::postSkew(float sx, float sy, float px, float py) {$/;"	f	class:CV::Matrix	signature:(float sx, float sy, float px, float py)
postTranslate	test/model/3rd_party/Matrix.cc	/^void Matrix::postTranslate(float dx, float dy) {$/;"	f	class:CV::Matrix	signature:(float dx, float dy)
preConcat	test/model/3rd_party/Matrix.cc	/^void Matrix::preConcat(const Matrix& mat) {$/;"	f	class:CV::Matrix	signature:(const Matrix& mat)
preRotate	test/model/3rd_party/Matrix.cc	/^void Matrix::preRotate(float degrees) {$/;"	f	class:CV::Matrix	signature:(float degrees)
preRotate	test/model/3rd_party/Matrix.cc	/^void Matrix::preRotate(float degrees, float px, float py) {$/;"	f	class:CV::Matrix	signature:(float degrees, float px, float py)
preScale	test/model/3rd_party/Matrix.cc	/^void Matrix::preScale(float sx, float sy) {$/;"	f	class:CV::Matrix	signature:(float sx, float sy)
preScale	test/model/3rd_party/Matrix.cc	/^void Matrix::preScale(float sx, float sy, float px, float py) {$/;"	f	class:CV::Matrix	signature:(float sx, float sy, float px, float py)
preSkew	test/model/3rd_party/Matrix.cc	/^void Matrix::preSkew(float sx, float sy) {$/;"	f	class:CV::Matrix	signature:(float sx, float sy)
preSkew	test/model/3rd_party/Matrix.cc	/^void Matrix::preSkew(float sx, float sy, float px, float py) {$/;"	f	class:CV::Matrix	signature:(float sx, float sy, float px, float py)
preTranslate	test/model/3rd_party/Matrix.cc	/^void Matrix::preTranslate(float dx, float dy) {$/;"	f	class:CV::Matrix	signature:(float dx, float dy)
prefix	include/3rd_party/stb_image.h	/^   stbi__int16 prefix;$/;"	m	struct:__anon56	access:public
prefix	test/include/3rd_party/stb_image.h	/^   stbi__int16 prefix;$/;"	m	struct:__anon25	access:public
preservesAxisAlignment	include/3rd_party/Matrix.h	/^    bool preservesAxisAlignment() const {$/;"	f	class:CV::Matrix	access:public	signature:() const
preservesAxisAlignment	test/include/3rd_party/Matrix.h	/^    bool preservesAxisAlignment() const {$/;"	f	class:CV::Matrix	access:public	signature:() const
progressive	include/3rd_party/stb_image.h	/^   int            progressive;$/;"	m	struct:__anon46	access:public
progressive	test/include/3rd_party/stb_image.h	/^   int            progressive;$/;"	m	struct:__anon15	access:public
ratio	include/3rd_party/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags;$/;"	m	struct:__anon57	access:public
ratio	test/include/3rd_party/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags;$/;"	m	struct:__anon26	access:public
raw_coeff	include/3rd_party/stb_image.h	/^      void *raw_data, *raw_coeff;$/;"	m	struct:__anon46::__anon47	access:public
raw_coeff	test/include/3rd_party/stb_image.h	/^      void *raw_data, *raw_coeff;$/;"	m	struct:__anon15::__anon16	access:public
raw_data	include/3rd_party/stb_image.h	/^      void *raw_data, *raw_coeff;$/;"	m	struct:__anon46::__anon47	access:public
raw_data	test/include/3rd_party/stb_image.h	/^      void *raw_data, *raw_coeff;$/;"	m	struct:__anon15::__anon16	access:public
read	include/3rd_party/stb_image.h	/^   int      (*read)  (void *user,char *data,int size);   \/\/ fill 'data' with 'size' bytes.  return number of bytes actually read$/;"	m	struct:__anon40	access:public
read	test/include/3rd_party/stb_image.h	/^   int      (*read)  (void *user,char *data,int size);   \/\/ fill 'data' with 'size' bytes.  return number of bytes actually read$/;"	m	struct:__anon9	access:public
read_from_callbacks	include/3rd_party/stb_image.h	/^   int read_from_callbacks;$/;"	m	struct:__anon41	access:public
read_from_callbacks	test/include/3rd_party/stb_image.h	/^   int read_from_callbacks;$/;"	m	struct:__anon10	access:public
rectStaysRect	include/3rd_party/Matrix.h	/^    bool rectStaysRect() const {$/;"	f	class:CV::Matrix	access:public	signature:() const
rectStaysRect	test/include/3rd_party/Matrix.h	/^    bool rectStaysRect() const {$/;"	f	class:CV::Matrix	access:public	signature:() const
release_aip_ioaddr	src/jz_aip_hal.c	/^int release_aip_ioaddr(struct aip_manage *manage)$/;"	f	signature:(struct aip_manage *manage)
resample	include/3rd_party/stb_image.h	/^   resample_row_func resample;$/;"	m	struct:__anon48	access:public
resample	test/include/3rd_party/stb_image.h	/^   resample_row_func resample;$/;"	m	struct:__anon17	access:public
resample_row_1	include/3rd_party/stb_image.h	/^static stbi_uc *resample_row_1(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)$/;"	f	signature:(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)
resample_row_1	test/include/3rd_party/stb_image.h	/^static stbi_uc *resample_row_1(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)$/;"	f	signature:(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)
resample_row_func	include/3rd_party/stb_image.h	/^typedef stbi_uc *(*resample_row_func)(stbi_uc *out, stbi_uc *in0, stbi_uc *in1,$/;"	t
resample_row_func	test/include/3rd_party/stb_image.h	/^typedef stbi_uc *(*resample_row_func)(stbi_uc *out, stbi_uc *in0, stbi_uc *in1,$/;"	t
resample_row_hv_2_kernel	include/3rd_party/stb_image.h	/^   stbi_uc *(*resample_row_hv_2_kernel)(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs);$/;"	m	struct:__anon46	access:public
resample_row_hv_2_kernel	test/include/3rd_party/stb_image.h	/^   stbi_uc *(*resample_row_hv_2_kernel)(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs);$/;"	m	struct:__anon15	access:public
reset	test/model/3rd_party/Matrix.cc	/^void Matrix::reset() {$/;"	f	class:CV::Matrix	signature:()
resize_1	test/sample/aip_resize/aip_resize_test.c	/^void * resize_1(void *arg)$/;"	f	signature:(void *arg)
resize_2	test/sample/aip_resize/aip_resize_test.c	/^void * resize_2(void *arg)$/;"	f	signature:(void *arg)
resize_nv12_nv12	test/model/bs_src.cc	/^int resize_nv12_nv12(uint8_t *src_ptr,int src_w,int src_h,uint8_t *dst_ptr,int dst_w,int dst_h)$/;"	f	signature:(uint8_t *src_ptr,int src_w,int src_h,uint8_t *dst_ptr,int dst_w,int dst_h)
restart_interval	include/3rd_party/stb_image.h	/^   int restart_interval, todo;$/;"	m	struct:__anon46	access:public
restart_interval	test/include/3rd_party/stb_image.h	/^   int restart_interval, todo;$/;"	m	struct:__anon15	access:public
rgb	include/3rd_party/stb_image.h	/^   int            rgb;$/;"	m	struct:__anon46	access:public
rgb	test/include/3rd_party/stb_image.h	/^   int            rgb;$/;"	m	struct:__anon15	access:public
right	include/3rd_party/Rect.h	/^    float right() const {$/;"	f	struct:CV::Rect	access:public	signature:() const
right	test/include/3rd_party/Rect.h	/^    float right() const {$/;"	f	struct:CV::Rect	access:public	signature:() const
rowcol3	test/model/3rd_party/Matrix.cc	/^static inline float rowcol3(const float row[], const float col[]) {$/;"	f	namespace:CV	signature:(const float row[], const float col[])
rows	include/model/bs_src.h	/^	int rows;$/;"	m	struct:Mat_c	access:public
rows	test/include/model/bs_src.h	/^	int rows;$/;"	m	struct:Mat_c	access:public
s	include/3rd_party/stb_image.h	/^   stbi__context *s;$/;"	m	struct:__anon46	access:public
s	include/3rd_party/stb_image.h	/^   stbi__context *s;$/;"	m	struct:__anon52	access:public
s	test/include/3rd_party/stb_image.h	/^   stbi__context *s;$/;"	m	struct:__anon15	access:public
s	test/include/3rd_party/stb_image.h	/^   stbi__context *s;$/;"	m	struct:__anon21	access:public
saturate_cast	test/model/mxu_common.hpp	/^template<> inline int saturate_cast<int>(double v) { return mxuRound(v); }$/;"	f	signature:(double v)
saturate_cast	test/model/mxu_common.hpp	/^template<> inline int saturate_cast<int>(float v) { return mxuRound(v); }$/;"	f	signature:(float v)
saturate_cast	test/model/mxu_common.hpp	/^template<> inline schar saturate_cast<schar>(double v)$/;"	f	signature:(double v)
saturate_cast	test/model/mxu_common.hpp	/^template<> inline schar saturate_cast<schar>(float v)$/;"	f	signature:(float v)
saturate_cast	test/model/mxu_common.hpp	/^template<> inline schar saturate_cast<schar>(int v)$/;"	f	signature:(int v)
saturate_cast	test/model/mxu_common.hpp	/^template<> inline schar saturate_cast<schar>(short v)$/;"	f	signature:(short v)
saturate_cast	test/model/mxu_common.hpp	/^template<> inline schar saturate_cast<schar>(uchar v)$/;"	f	signature:(uchar v)
saturate_cast	test/model/mxu_common.hpp	/^template<> inline schar saturate_cast<schar>(unsigned v)$/;"	f	signature:(unsigned v)
saturate_cast	test/model/mxu_common.hpp	/^template<> inline schar saturate_cast<schar>(ushort v)$/;"	f	signature:(ushort v)
saturate_cast	test/model/mxu_common.hpp	/^template<> inline short saturate_cast<short>(double v)$/;"	f	signature:(double v)
saturate_cast	test/model/mxu_common.hpp	/^template<> inline short saturate_cast<short>(float v)$/;"	f	signature:(float v)
saturate_cast	test/model/mxu_common.hpp	/^template<> inline short saturate_cast<short>(int v)$/;"	f	signature:(int v)
saturate_cast	test/model/mxu_common.hpp	/^template<> inline short saturate_cast<short>(unsigned v)$/;"	f	signature:(unsigned v)
saturate_cast	test/model/mxu_common.hpp	/^template<> inline short saturate_cast<short>(ushort v)$/;"	f	signature:(ushort v)
saturate_cast	test/model/mxu_common.hpp	/^template<> inline uchar saturate_cast<uchar>(double v)$/;"	f	signature:(double v)
saturate_cast	test/model/mxu_common.hpp	/^template<> inline uchar saturate_cast<uchar>(float v)$/;"	f	signature:(float v)
saturate_cast	test/model/mxu_common.hpp	/^template<> inline uchar saturate_cast<uchar>(int v)$/;"	f	signature:(int v)
saturate_cast	test/model/mxu_common.hpp	/^template<> inline uchar saturate_cast<uchar>(schar v)$/;"	f	signature:(schar v)
saturate_cast	test/model/mxu_common.hpp	/^template<> inline uchar saturate_cast<uchar>(short v)$/;"	f	signature:(short v)
saturate_cast	test/model/mxu_common.hpp	/^template<> inline uchar saturate_cast<uchar>(unsigned v)$/;"	f	signature:(unsigned v)
saturate_cast	test/model/mxu_common.hpp	/^template<> inline uchar saturate_cast<uchar>(ushort v)$/;"	f	signature:(ushort v)
saturate_cast	test/model/mxu_common.hpp	/^template<> inline unsigned saturate_cast<unsigned>(double v) { return mxuRound(v); }$/;"	f	signature:(double v)
saturate_cast	test/model/mxu_common.hpp	/^template<> inline unsigned saturate_cast<unsigned>(float v){ return mxuRound(v); }$/;"	f	signature:(float v)
saturate_cast	test/model/mxu_common.hpp	/^template<> inline ushort saturate_cast<ushort>(double v)$/;"	f	signature:(double v)
saturate_cast	test/model/mxu_common.hpp	/^template<> inline ushort saturate_cast<ushort>(float v)$/;"	f	signature:(float v)
saturate_cast	test/model/mxu_common.hpp	/^template<> inline ushort saturate_cast<ushort>(int v)$/;"	f	signature:(int v)
saturate_cast	test/model/mxu_common.hpp	/^template<> inline ushort saturate_cast<ushort>(schar v)$/;"	f	signature:(schar v)
saturate_cast	test/model/mxu_common.hpp	/^template<> inline ushort saturate_cast<ushort>(short v)$/;"	f	signature:(short v)
saturate_cast	test/model/mxu_common.hpp	/^template<> inline ushort saturate_cast<ushort>(unsigned v)$/;"	f	signature:(unsigned v)
saturate_cast	test/model/mxu_common.hpp	/^template<typename _Tp> static inline _Tp saturate_cast(double v) { return _Tp(v); }$/;"	f	signature:(double v)
saturate_cast	test/model/mxu_common.hpp	/^template<typename _Tp> static inline _Tp saturate_cast(float v) { return _Tp(v); }$/;"	f	signature:(float v)
saturate_cast	test/model/mxu_common.hpp	/^template<typename _Tp> static inline _Tp saturate_cast(int v) { return _Tp(v); }$/;"	f	signature:(int v)
saturate_cast	test/model/mxu_common.hpp	/^template<typename _Tp> static inline _Tp saturate_cast(schar v) { return _Tp(v); }$/;"	f	signature:(schar v)
saturate_cast	test/model/mxu_common.hpp	/^template<typename _Tp> static inline _Tp saturate_cast(short v) { return _Tp(v); }$/;"	f	signature:(short v)
saturate_cast	test/model/mxu_common.hpp	/^template<typename _Tp> static inline _Tp saturate_cast(uchar v) { return _Tp(v); }$/;"	f	signature:(uchar v)
saturate_cast	test/model/mxu_common.hpp	/^template<typename _Tp> static inline _Tp saturate_cast(unsigned v) { return _Tp(v); }$/;"	f	signature:(unsigned v)
saturate_cast	test/model/mxu_common.hpp	/^template<typename _Tp> static inline _Tp saturate_cast(ushort v) { return _Tp(v); }$/;"	f	signature:(ushort v)
scale_x	include/model/aip_f_mdl.h	/^	int32_t                     scale_x;$/;"	m	struct:__anon29	access:public
scale_x	src/jz_aip_hal.h	/^	uint32_t		scale_x;$/;"	m	struct:aip_f_chainnode	access:public
scale_x	src/jz_aip_hal.h	/^	uint32_t		scale_x[2];$/;"	m	struct:aip_f_chaindesc	access:public
scale_x	test/include/model/aip_f_mdl.h	/^	int32_t                     scale_x;$/;"	m	struct:__anon7	access:public
scale_y	include/model/aip_f_mdl.h	/^	int32_t                     scale_y;$/;"	m	struct:__anon29	access:public
scale_y	src/jz_aip_hal.h	/^	uint32_t		scale_y;$/;"	m	struct:aip_f_chainnode	access:public
scale_y	src/jz_aip_hal.h	/^	uint32_t		scale_y[2];$/;"	m	struct:aip_f_chaindesc	access:public
scale_y	test/include/model/aip_f_mdl.h	/^	int32_t                     scale_y;$/;"	m	struct:__anon7	access:public
scan_n	include/3rd_party/stb_image.h	/^   int scan_n, order[4];$/;"	m	struct:__anon46	access:public
scan_n	test/include/3rd_party/stb_image.h	/^   int scan_n, order[4];$/;"	m	struct:__anon15	access:public
schar	include/model/mxu_types_c.h	/^typedef signed char schar;$/;"	t
schar	test/include/model/mxu_types_c.h	/^typedef signed char schar;$/;"	t
scross	test/model/3rd_party/Matrix.cc	/^static inline float scross(float a, float b, float c, float d) {$/;"	f	namespace:CV	signature:(float a, float b, float c, float d)
scross_dscale	test/model/3rd_party/Matrix.cc	/^static inline float scross_dscale(float a, float b, float c, float d, double scale) {$/;"	f	namespace:CV	signature:(float a, float b, float c, float d, double scale)
sdot	test/model/3rd_party/Matrix.cc	/^static inline float sdot(float a, float b, float c, float d) {$/;"	f	namespace:CV	signature:(float a, float b, float c, float d)
set	include/3rd_party/Matrix.h	/^    void set(int index, float value) {$/;"	f	class:CV::Matrix	access:public	signature:(int index, float value)
set	include/3rd_party/Rect.h	/^    void set(float left, float top, float right, float bottom) {$/;"	f	struct:CV::Rect	access:public	signature:(float left, float top, float right, float bottom)
set	include/3rd_party/Rect.h	/^    void set(float x, float y) {$/;"	f	struct:CV::Point	access:public	signature:(float x, float y)
set	test/include/3rd_party/Matrix.h	/^    void set(int index, float value) {$/;"	f	class:CV::Matrix	access:public	signature:(int index, float value)
set	test/include/3rd_party/Rect.h	/^    void set(float left, float top, float right, float bottom) {$/;"	f	struct:CV::Rect	access:public	signature:(float left, float top, float right, float bottom)
set	test/include/3rd_party/Rect.h	/^    void set(float x, float y) {$/;"	f	struct:CV::Point	access:public	signature:(float x, float y)
set9	test/model/3rd_party/Matrix.cc	/^void Matrix::set9(const float buffer[]) {$/;"	f	class:CV::Matrix	signature:(const float buffer[])
setAffine	test/model/3rd_party/Matrix.cc	/^void Matrix::setAffine(const float buffer[]) {$/;"	f	class:CV::Matrix	signature:(const float buffer[])
setAll	include/3rd_party/Matrix.h	/^    void setAll(float scaleX, float skewX, float transX, float skewY, float scaleY, float transY, float persp0,$/;"	f	class:CV::Matrix	access:public	signature:(float scaleX, float skewX, float transX, float skewY, float scaleY, float transY, float persp0, float persp1, float persp2)
setAll	test/include/3rd_party/Matrix.h	/^    void setAll(float scaleX, float skewX, float transX, float skewY, float scaleY, float transY, float persp0,$/;"	f	class:CV::Matrix	access:public	signature:(float scaleX, float skewX, float transX, float skewY, float scaleY, float transY, float persp0, float persp1, float persp2)
setConcat	test/model/3rd_party/Matrix.cc	/^void Matrix::setConcat(const Matrix& a, const Matrix& b) {$/;"	f	class:CV::Matrix	signature:(const Matrix& a, const Matrix& b)
setEmpty	include/3rd_party/Rect.h	/^    void setEmpty() {$/;"	f	struct:CV::Rect	access:public	signature:()
setEmpty	test/include/3rd_party/Rect.h	/^    void setEmpty() {$/;"	f	struct:CV::Rect	access:public	signature:()
setIdentity	include/3rd_party/Matrix.h	/^    void setIdentity() {$/;"	f	class:CV::Matrix	access:public	signature:()
setIdentity	test/include/3rd_party/Matrix.h	/^    void setIdentity() {$/;"	f	class:CV::Matrix	access:public	signature:()
setLTRB	include/3rd_party/Rect.h	/^    void setLTRB(float left, float top, float right, float bottom) {$/;"	f	struct:CV::Rect	access:public	signature:(float left, float top, float right, float bottom)
setLTRB	test/include/3rd_party/Rect.h	/^    void setLTRB(float left, float top, float right, float bottom) {$/;"	f	struct:CV::Rect	access:public	signature:(float left, float top, float right, float bottom)
setPerspX	include/3rd_party/Matrix.h	/^    void setPerspX(float v) {$/;"	f	class:CV::Matrix	access:public	signature:(float v)
setPerspX	test/include/3rd_party/Matrix.h	/^    void setPerspX(float v) {$/;"	f	class:CV::Matrix	access:public	signature:(float v)
setPerspY	include/3rd_party/Matrix.h	/^    void setPerspY(float v) {$/;"	f	class:CV::Matrix	access:public	signature:(float v)
setPerspY	test/include/3rd_party/Matrix.h	/^    void setPerspY(float v) {$/;"	f	class:CV::Matrix	access:public	signature:(float v)
setPolyToPoly	test/model/3rd_party/Matrix.cc	/^bool Matrix::setPolyToPoly(const Point src[], const Point dst[], int count) {$/;"	f	class:CV::Matrix	signature:(const Point src[], const Point dst[], int count)
setRectToRect	test/model/3rd_party/Matrix.cc	/^bool Matrix::setRectToRect(const Rect& src, const Rect& dst, ScaleToFit align) {$/;"	f	class:CV::Matrix	signature:(const Rect& src, const Rect& dst, ScaleToFit align)
setRotate	test/model/3rd_party/Matrix.cc	/^void Matrix::setRotate(float degrees) {$/;"	f	class:CV::Matrix	signature:(float degrees)
setRotate	test/model/3rd_party/Matrix.cc	/^void Matrix::setRotate(float degrees, float px, float py) {$/;"	f	class:CV::Matrix	signature:(float degrees, float px, float py)
setScale	test/model/3rd_party/Matrix.cc	/^void Matrix::setScale(float sx, float sy) {$/;"	f	class:CV::Matrix	signature:(float sx, float sy)
setScale	test/model/3rd_party/Matrix.cc	/^void Matrix::setScale(float sx, float sy, float px, float py) {$/;"	f	class:CV::Matrix	signature:(float sx, float sy, float px, float py)
setScaleTranslate	include/3rd_party/Matrix.h	/^    void setScaleTranslate(float sx, float sy, float tx, float ty) {$/;"	f	class:CV::Matrix	access:public	signature:(float sx, float sy, float tx, float ty)
setScaleTranslate	test/include/3rd_party/Matrix.h	/^    void setScaleTranslate(float sx, float sy, float tx, float ty) {$/;"	f	class:CV::Matrix	access:public	signature:(float sx, float sy, float tx, float ty)
setScaleX	include/3rd_party/Matrix.h	/^    void setScaleX(float v) {$/;"	f	class:CV::Matrix	access:public	signature:(float v)
setScaleX	test/include/3rd_party/Matrix.h	/^    void setScaleX(float v) {$/;"	f	class:CV::Matrix	access:public	signature:(float v)
setScaleY	include/3rd_party/Matrix.h	/^    void setScaleY(float v) {$/;"	f	class:CV::Matrix	access:public	signature:(float v)
setScaleY	test/include/3rd_party/Matrix.h	/^    void setScaleY(float v) {$/;"	f	class:CV::Matrix	access:public	signature:(float v)
setSinCos	test/model/3rd_party/Matrix.cc	/^void Matrix::setSinCos(float sinV, float cosV) {$/;"	f	class:CV::Matrix	signature:(float sinV, float cosV)
setSinCos	test/model/3rd_party/Matrix.cc	/^void Matrix::setSinCos(float sinV, float cosV, float px, float py) {$/;"	f	class:CV::Matrix	signature:(float sinV, float cosV, float px, float py)
setSkew	test/model/3rd_party/Matrix.cc	/^void Matrix::setSkew(float sx, float sy) {$/;"	f	class:CV::Matrix	signature:(float sx, float sy)
setSkew	test/model/3rd_party/Matrix.cc	/^void Matrix::setSkew(float sx, float sy, float px, float py) {$/;"	f	class:CV::Matrix	signature:(float sx, float sy, float px, float py)
setSkewX	include/3rd_party/Matrix.h	/^    void setSkewX(float v) {$/;"	f	class:CV::Matrix	access:public	signature:(float v)
setSkewX	test/include/3rd_party/Matrix.h	/^    void setSkewX(float v) {$/;"	f	class:CV::Matrix	access:public	signature:(float v)
setSkewY	include/3rd_party/Matrix.h	/^    void setSkewY(float v) {$/;"	f	class:CV::Matrix	access:public	signature:(float v)
setSkewY	test/include/3rd_party/Matrix.h	/^    void setSkewY(float v) {$/;"	f	class:CV::Matrix	access:public	signature:(float v)
setTranslate	test/model/3rd_party/Matrix.cc	/^void Matrix::setTranslate(float dx, float dy) {$/;"	f	class:CV::Matrix	signature:(float dx, float dy)
setTranslateX	include/3rd_party/Matrix.h	/^    void setTranslateX(float v) {$/;"	f	class:CV::Matrix	access:public	signature:(float v)
setTranslateX	test/include/3rd_party/Matrix.h	/^    void setTranslateX(float v) {$/;"	f	class:CV::Matrix	access:public	signature:(float v)
setTranslateY	include/3rd_party/Matrix.h	/^    void setTranslateY(float v) {$/;"	f	class:CV::Matrix	access:public	signature:(float v)
setTranslateY	test/include/3rd_party/Matrix.h	/^    void setTranslateY(float v) {$/;"	f	class:CV::Matrix	access:public	signature:(float v)
setTypeMask	include/3rd_party/Matrix.h	/^    void setTypeMask(int mask) {$/;"	f	class:CV::Matrix	access:private	signature:(int mask)
setTypeMask	test/include/3rd_party/Matrix.h	/^    void setTypeMask(int mask) {$/;"	f	class:CV::Matrix	access:private	signature:(int mask)
setWH	include/3rd_party/Rect.h	/^    void setWH(float width, float height) {$/;"	f	struct:CV::Rect	access:public	signature:(float width, float height)
setWH	test/include/3rd_party/Rect.h	/^    void setWH(float width, float height) {$/;"	f	struct:CV::Rect	access:public	signature:(float width, float height)
setXYWH	include/3rd_party/Rect.h	/^    void setXYWH(float x, float y, float width, float height) {$/;"	f	struct:CV::Rect	access:public	signature:(float x, float y, float width, float height)
setXYWH	test/include/3rd_party/Rect.h	/^    void setXYWH(float x, float y, float width, float height) {$/;"	f	struct:CV::Rect	access:public	signature:(float x, float y, float width, float height)
sh	include/model/aip_p_mdl.h	/^    uint32_t                    sh; \/\/src height$/;"	m	struct:AIP_P_CFG_S	access:public
sh	test/include/model/aip_p_mdl.h	/^    uint32_t                    sh; \/\/src height$/;"	m	struct:AIP_P_CFG_S	access:public
size	include/3rd_party/stb_image.h	/^   stbi_uc  size[257];$/;"	m	struct:__anon45	access:public
size	include/3rd_party/stb_image.h	/^   stbi_uc  size[288];$/;"	m	struct:__anon49	access:public
size	include/3rd_party/stb_image.h	/^   stbi_uc size,type,channel;$/;"	m	struct:__anon55	access:public
size	src/jz_aip_hal.h	/^	uint32_t size;$/;"	m	struct:jz_aip_chainbuf	access:public
size	test/include/3rd_party/stb_image.h	/^   stbi_uc  size[257];$/;"	m	struct:__anon14	access:public
size	test/include/3rd_party/stb_image.h	/^   stbi_uc  size[288];$/;"	m	struct:__anon18	access:public
size	test/include/3rd_party/stb_image.h	/^   stbi_uc size,type,channel;$/;"	m	struct:__anon24	access:public
sk_ieee_float_divide	test/model/3rd_party/Matrix.cc	/^static inline float sk_ieee_float_divide(float x, float y) {$/;"	f	namespace:CV	signature:(float x, float y)
sk_inv_determinant	test/model/3rd_party/Matrix.cc	/^static double sk_inv_determinant(const float mat[9], int isPerspective) {$/;"	f	namespace:CV	signature:(const float mat[9], int isPerspective)
skip	include/3rd_party/stb_image.h	/^   void     (*skip)  (void *user,int n);                 \/\/ skip the next 'n' bytes, or 'unget' the last -n bytes if negative$/;"	m	struct:__anon40	access:public
skip	test/include/3rd_party/stb_image.h	/^   void     (*skip)  (void *user,int n);                 \/\/ skip the next 'n' bytes, or 'unget' the last -n bytes if negative$/;"	m	struct:__anon9	access:public
sort	include/3rd_party/Rect.h	/^    void sort() {$/;"	f	struct:CV::Rect	access:public	signature:()
sort	test/include/3rd_party/Rect.h	/^    void sort() {$/;"	f	struct:CV::Rect	access:public	signature:()
spec_end	include/3rd_party/stb_image.h	/^   int            spec_end;$/;"	m	struct:__anon46	access:public
spec_end	test/include/3rd_party/stb_image.h	/^   int            spec_end;$/;"	m	struct:__anon15	access:public
spec_start	include/3rd_party/stb_image.h	/^   int            spec_start;$/;"	m	struct:__anon46	access:public
spec_start	test/include/3rd_party/stb_image.h	/^   int            spec_start;$/;"	m	struct:__anon15	access:public
src_base	include/model/aip_f_mdl.h	/^	uint8_t                     *src_base;$/;"	m	struct:__anon29	access:public
src_base	test/include/model/aip_f_mdl.h	/^	uint8_t                     *src_base;$/;"	m	struct:__anon7	access:public
src_base_uv	src/jz_aip_hal.h	/^	uint32_t		src_base_uv;$/;"	m	struct:aip_f_chainnode	access:public
src_base_uv	src/jz_aip_hal.h	/^	uint32_t		src_base_uv;$/;"	m	struct:aip_p_chainnode	access:public
src_base_uv	src/jz_aip_hal.h	/^	uint32_t		src_base_uv;$/;"	m	struct:aip_t_chainnode	access:public
src_base_uv	src/jz_aip_hal.h	/^	uint32_t		src_base_uv[2];$/;"	m	struct:aip_f_chaindesc	access:public
src_base_uv	src/jz_aip_hal.h	/^	uint32_t		src_base_uv[2];$/;"	m	struct:aip_t_chaindesc	access:public
src_base_uv	src/jz_aip_hal.h	/^	uint32_t	src_base_uv[2];$/;"	m	struct:aip_p_chaindesc	access:public
src_base_y	src/jz_aip_hal.h	/^	uint32_t		src_base_y;$/;"	m	struct:aip_f_chainnode	access:public
src_base_y	src/jz_aip_hal.h	/^	uint32_t		src_base_y;$/;"	m	struct:aip_p_chainnode	access:public
src_base_y	src/jz_aip_hal.h	/^	uint32_t		src_base_y;$/;"	m	struct:aip_t_chainnode	access:public
src_base_y	src/jz_aip_hal.h	/^	uint32_t		src_base_y[2];$/;"	m	struct:aip_f_chaindesc	access:public
src_base_y	src/jz_aip_hal.h	/^	uint32_t		src_base_y[2];$/;"	m	struct:aip_t_chaindesc	access:public
src_base_y	src/jz_aip_hal.h	/^	uint32_t	src_base_y[2];$/;"	m	struct:aip_p_chaindesc	access:public
src_cbase	include/model/aip_f_mdl.h	/^	uint8_t                     *src_cbase;$/;"	m	struct:__anon29	access:public
src_cbase	include/model/aip_p_mdl.h	/^    uint8_t                     *src_cbase;$/;"	m	struct:AIP_P_CFG_S	access:public
src_cbase	test/include/model/aip_f_mdl.h	/^	uint8_t                     *src_cbase;$/;"	m	struct:__anon7	access:public
src_cbase	test/include/model/aip_p_mdl.h	/^    uint8_t                     *src_cbase;$/;"	m	struct:AIP_P_CFG_S	access:public
src_h	include/model/aip_f_mdl.h	/^	int16_t                     src_h;$/;"	m	struct:__anon29	access:public
src_h	test/include/model/aip_f_mdl.h	/^	int16_t                     src_h;$/;"	m	struct:__anon7	access:public
src_height	src/jz_aip_hal.h	/^	uint16_t		src_height;$/;"	m	struct:aip_f_chainnode	access:public
src_height	src/jz_aip_hal.h	/^	uint16_t		src_height;$/;"	m	struct:aip_p_chainnode	access:public
src_height	src/jz_aip_hal.h	/^	uint16_t		src_height;$/;"	m	struct:aip_t_chainnode	access:public
src_size	src/jz_aip_hal.h	/^	uint32_t		src_size[2];$/;"	m	struct:aip_f_chaindesc	access:public
src_size	src/jz_aip_hal.h	/^	uint32_t		src_size[2];$/;"	m	struct:aip_t_chaindesc	access:public
src_size	src/jz_aip_hal.h	/^	uint32_t	src_size[2];$/;"	m	struct:aip_p_chaindesc	access:public
src_stride	include/model/aip_f_mdl.h	/^	int16_t                     src_stride;$/;"	m	struct:__anon29	access:public
src_stride	include/model/aip_p_mdl.h	/^    uint32_t                    src_stride;$/;"	m	struct:AIP_P_CFG_S	access:public
src_stride	src/jz_aip_hal.h	/^	uint16_t		src_stride;$/;"	m	struct:aip_f_chainnode	access:public
src_stride	src/jz_aip_hal.h	/^	uint16_t		src_stride;$/;"	m	struct:aip_t_chainnode	access:public
src_stride	src/jz_aip_hal.h	/^	uint32_t		src_stride;$/;"	m	struct:aip_p_chainnode	access:public
src_stride	src/jz_aip_hal.h	/^	uint32_t	src_stride[2];$/;"	m	struct:aip_p_chaindesc	access:public
src_stride	test/include/model/aip_f_mdl.h	/^	int16_t                     src_stride;$/;"	m	struct:__anon7	access:public
src_stride	test/include/model/aip_p_mdl.h	/^    uint32_t                    src_stride;$/;"	m	struct:AIP_P_CFG_S	access:public
src_w	include/model/aip_f_mdl.h	/^	int16_t                     src_w;$/;"	m	struct:__anon29	access:public
src_w	test/include/model/aip_f_mdl.h	/^	int16_t                     src_w;$/;"	m	struct:__anon7	access:public
src_width	src/jz_aip_hal.h	/^	uint16_t		src_width;$/;"	m	struct:aip_f_chainnode	access:public
src_width	src/jz_aip_hal.h	/^	uint16_t		src_width;$/;"	m	struct:aip_p_chainnode	access:public
src_width	src/jz_aip_hal.h	/^	uint16_t		src_width;$/;"	m	struct:aip_t_chainnode	access:public
src_ybase	include/model/aip_p_mdl.h	/^    uint8_t                     *src_ybase;$/;"	m	struct:AIP_P_CFG_S	access:public
src_ybase	test/include/model/aip_p_mdl.h	/^    uint8_t                     *src_ybase;$/;"	m	struct:AIP_P_CFG_S	access:public
start_x	include/3rd_party/stb_image.h	/^   int start_x, start_y;$/;"	m	struct:__anon57	access:public
start_x	test/include/3rd_party/stb_image.h	/^   int start_x, start_y;$/;"	m	struct:__anon26	access:public
start_y	include/3rd_party/stb_image.h	/^   int start_x, start_y;$/;"	m	struct:__anon57	access:public
start_y	test/include/3rd_party/stb_image.h	/^   int start_x, start_y;$/;"	m	struct:__anon26	access:public
stb_image_write_test	include/3rd_party/stb_image_write.h	/^typedef int stb_image_write_test[sizeof(stbiw_uint32)==4 ? 1 : -1];$/;"	t
stb_image_write_test	test/include/3rd_party/stb_image_write.h	/^typedef int stb_image_write_test[sizeof(stbiw_uint32)==4 ? 1 : -1];$/;"	t
stbi__DNL	include/3rd_party/stb_image.h	3134;"	d
stbi__DNL	test/include/3rd_party/stb_image.h	3134;"	d
stbi__EOI	include/3rd_party/stb_image.h	3136;"	d
stbi__EOI	test/include/3rd_party/stb_image.h	3136;"	d
stbi__SOF	include/3rd_party/stb_image.h	3137;"	d
stbi__SOF	test/include/3rd_party/stb_image.h	3137;"	d
stbi__SOF_progressive	include/3rd_party/stb_image.h	3140;"	d
stbi__SOF_progressive	test/include/3rd_party/stb_image.h	3140;"	d
stbi__SOI	include/3rd_party/stb_image.h	3135;"	d
stbi__SOI	test/include/3rd_party/stb_image.h	3135;"	d
stbi__SOS	include/3rd_party/stb_image.h	3138;"	d
stbi__SOS	test/include/3rd_party/stb_image.h	3138;"	d
stbi__YCbCr_to_RGB_row	include/3rd_party/stb_image.h	/^static void stbi__YCbCr_to_RGB_row(stbi_uc *out, const stbi_uc *y, const stbi_uc *pcb, const stbi_uc *pcr, int count, int step)$/;"	f	signature:(stbi_uc *out, const stbi_uc *y, const stbi_uc *pcb, const stbi_uc *pcr, int count, int step)
stbi__YCbCr_to_RGB_row	test/include/3rd_party/stb_image.h	/^static void stbi__YCbCr_to_RGB_row(stbi_uc *out, const stbi_uc *y, const stbi_uc *pcb, const stbi_uc *pcr, int count, int step)$/;"	f	signature:(stbi_uc *out, const stbi_uc *y, const stbi_uc *pcb, const stbi_uc *pcr, int count, int step)
stbi__YCbCr_to_RGB_simd	include/3rd_party/stb_image.h	/^static void stbi__YCbCr_to_RGB_simd(stbi_uc *out, stbi_uc const *y, stbi_uc const *pcb, stbi_uc const *pcr, int count, int step)$/;"	f	signature:(stbi_uc *out, stbi_uc const *y, stbi_uc const *pcb, stbi_uc const *pcr, int count, int step)
stbi__YCbCr_to_RGB_simd	test/include/3rd_party/stb_image.h	/^static void stbi__YCbCr_to_RGB_simd(stbi_uc *out, stbi_uc const *y, stbi_uc const *pcb, stbi_uc const *pcr, int count, int step)$/;"	f	signature:(stbi_uc *out, stbi_uc const *y, stbi_uc const *pcb, stbi_uc const *pcr, int count, int step)
stbi__addsizes_valid	include/3rd_party/stb_image.h	/^static int stbi__addsizes_valid(int a, int b)$/;"	f	signature:(int a, int b)
stbi__addsizes_valid	test/include/3rd_party/stb_image.h	/^static int stbi__addsizes_valid(int a, int b)$/;"	f	signature:(int a, int b)
stbi__at_eof	include/3rd_party/stb_image.h	/^stbi_inline static int stbi__at_eof(stbi__context *s)$/;"	f	signature:(stbi__context *s)
stbi__at_eof	test/include/3rd_party/stb_image.h	/^stbi_inline static int stbi__at_eof(stbi__context *s)$/;"	f	signature:(stbi__context *s)
stbi__bit_reverse	include/3rd_party/stb_image.h	/^stbi_inline static int stbi__bit_reverse(int v, int bits)$/;"	f	signature:(int v, int bits)
stbi__bit_reverse	test/include/3rd_party/stb_image.h	/^stbi_inline static int stbi__bit_reverse(int v, int bits)$/;"	f	signature:(int v, int bits)
stbi__bitcount	include/3rd_party/stb_image.h	/^static int stbi__bitcount(unsigned int a)$/;"	f	signature:(unsigned int a)
stbi__bitcount	test/include/3rd_party/stb_image.h	/^static int stbi__bitcount(unsigned int a)$/;"	f	signature:(unsigned int a)
stbi__bitreverse16	include/3rd_party/stb_image.h	/^stbi_inline static int stbi__bitreverse16(int n)$/;"	f	signature:(int n)
stbi__bitreverse16	test/include/3rd_party/stb_image.h	/^stbi_inline static int stbi__bitreverse16(int n)$/;"	f	signature:(int n)
stbi__blinn_8x8	include/3rd_party/stb_image.h	/^static stbi_uc stbi__blinn_8x8(stbi_uc x, stbi_uc y)$/;"	f	signature:(stbi_uc x, stbi_uc y)
stbi__blinn_8x8	test/include/3rd_party/stb_image.h	/^static stbi_uc stbi__blinn_8x8(stbi_uc x, stbi_uc y)$/;"	f	signature:(stbi_uc x, stbi_uc y)
stbi__bmask	include/3rd_party/stb_image.h	/^static const stbi__uint32 stbi__bmask[17]={0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535};$/;"	v
stbi__bmask	test/include/3rd_party/stb_image.h	/^static const stbi__uint32 stbi__bmask[17]={0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535};$/;"	v
stbi__bmp_data	include/3rd_party/stb_image.h	/^} stbi__bmp_data;$/;"	t	typeref:struct:__anon54
stbi__bmp_data	test/include/3rd_party/stb_image.h	/^} stbi__bmp_data;$/;"	t	typeref:struct:__anon23
stbi__bmp_info	include/3rd_party/stb_image.h	/^static int stbi__bmp_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	signature:(stbi__context *s, int *x, int *y, int *comp)
stbi__bmp_info	test/include/3rd_party/stb_image.h	/^static int stbi__bmp_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	signature:(stbi__context *s, int *x, int *y, int *comp)
stbi__bmp_load	include/3rd_party/stb_image.h	/^static void *stbi__bmp_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__result_info *ri)$/;"	f	signature:(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__result_info *ri)
stbi__bmp_load	test/include/3rd_party/stb_image.h	/^static void *stbi__bmp_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__result_info *ri)$/;"	f	signature:(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__result_info *ri)
stbi__bmp_parse_header	include/3rd_party/stb_image.h	/^static void *stbi__bmp_parse_header(stbi__context *s, stbi__bmp_data *info)$/;"	f	signature:(stbi__context *s, stbi__bmp_data *info)
stbi__bmp_parse_header	test/include/3rd_party/stb_image.h	/^static void *stbi__bmp_parse_header(stbi__context *s, stbi__bmp_data *info)$/;"	f	signature:(stbi__context *s, stbi__bmp_data *info)
stbi__bmp_test	include/3rd_party/stb_image.h	/^static int stbi__bmp_test(stbi__context *s)$/;"	f	signature:(stbi__context *s)
stbi__bmp_test	test/include/3rd_party/stb_image.h	/^static int stbi__bmp_test(stbi__context *s)$/;"	f	signature:(stbi__context *s)
stbi__bmp_test_raw	include/3rd_party/stb_image.h	/^static int stbi__bmp_test_raw(stbi__context *s)$/;"	f	signature:(stbi__context *s)
stbi__bmp_test_raw	test/include/3rd_party/stb_image.h	/^static int stbi__bmp_test_raw(stbi__context *s)$/;"	f	signature:(stbi__context *s)
stbi__build_fast_ac	include/3rd_party/stb_image.h	/^static void stbi__build_fast_ac(stbi__int16 *fast_ac, stbi__huffman *h)$/;"	f	signature:(stbi__int16 *fast_ac, stbi__huffman *h)
stbi__build_fast_ac	test/include/3rd_party/stb_image.h	/^static void stbi__build_fast_ac(stbi__int16 *fast_ac, stbi__huffman *h)$/;"	f	signature:(stbi__int16 *fast_ac, stbi__huffman *h)
stbi__build_huffman	include/3rd_party/stb_image.h	/^static int stbi__build_huffman(stbi__huffman *h, int *count)$/;"	f	signature:(stbi__huffman *h, int *count)
stbi__build_huffman	test/include/3rd_party/stb_image.h	/^static int stbi__build_huffman(stbi__huffman *h, int *count)$/;"	f	signature:(stbi__huffman *h, int *count)
stbi__check_png_header	include/3rd_party/stb_image.h	/^static int stbi__check_png_header(stbi__context *s)$/;"	f	signature:(stbi__context *s)
stbi__check_png_header	test/include/3rd_party/stb_image.h	/^static int stbi__check_png_header(stbi__context *s)$/;"	f	signature:(stbi__context *s)
stbi__clamp	include/3rd_party/stb_image.h	/^stbi_inline static stbi_uc stbi__clamp(int x)$/;"	f	signature:(int x)
stbi__clamp	test/include/3rd_party/stb_image.h	/^stbi_inline static stbi_uc stbi__clamp(int x)$/;"	f	signature:(int x)
stbi__cleanup_jpeg	include/3rd_party/stb_image.h	/^static void stbi__cleanup_jpeg(stbi__jpeg *j)$/;"	f	signature:(stbi__jpeg *j)
stbi__cleanup_jpeg	test/include/3rd_party/stb_image.h	/^static void stbi__cleanup_jpeg(stbi__jpeg *j)$/;"	f	signature:(stbi__jpeg *j)
stbi__compute_huffman_codes	include/3rd_party/stb_image.h	/^static int stbi__compute_huffman_codes(stbi__zbuf *a)$/;"	f	signature:(stbi__zbuf *a)
stbi__compute_huffman_codes	test/include/3rd_party/stb_image.h	/^static int stbi__compute_huffman_codes(stbi__zbuf *a)$/;"	f	signature:(stbi__zbuf *a)
stbi__compute_transparency	include/3rd_party/stb_image.h	/^static int stbi__compute_transparency(stbi__png *z, stbi_uc tc[3], int out_n)$/;"	f	signature:(stbi__png *z, stbi_uc tc[3], int out_n)
stbi__compute_transparency	test/include/3rd_party/stb_image.h	/^static int stbi__compute_transparency(stbi__png *z, stbi_uc tc[3], int out_n)$/;"	f	signature:(stbi__png *z, stbi_uc tc[3], int out_n)
stbi__compute_transparency16	include/3rd_party/stb_image.h	/^static int stbi__compute_transparency16(stbi__png *z, stbi__uint16 tc[3], int out_n)$/;"	f	signature:(stbi__png *z, stbi__uint16 tc[3], int out_n)
stbi__compute_transparency16	test/include/3rd_party/stb_image.h	/^static int stbi__compute_transparency16(stbi__png *z, stbi__uint16 tc[3], int out_n)$/;"	f	signature:(stbi__png *z, stbi__uint16 tc[3], int out_n)
stbi__compute_y	include/3rd_party/stb_image.h	/^static stbi_uc stbi__compute_y(int r, int g, int b)$/;"	f	signature:(int r, int g, int b)
stbi__compute_y	test/include/3rd_party/stb_image.h	/^static stbi_uc stbi__compute_y(int r, int g, int b)$/;"	f	signature:(int r, int g, int b)
stbi__compute_y_16	include/3rd_party/stb_image.h	/^static stbi__uint16 stbi__compute_y_16(int r, int g, int b)$/;"	f	signature:(int r, int g, int b)
stbi__compute_y_16	test/include/3rd_party/stb_image.h	/^static stbi__uint16 stbi__compute_y_16(int r, int g, int b)$/;"	f	signature:(int r, int g, int b)
stbi__context	include/3rd_party/stb_image.h	/^} stbi__context;$/;"	t	typeref:struct:__anon41
stbi__context	test/include/3rd_party/stb_image.h	/^} stbi__context;$/;"	t	typeref:struct:__anon10
stbi__convert_16_to_8	include/3rd_party/stb_image.h	/^static stbi_uc *stbi__convert_16_to_8(stbi__uint16 *orig, int w, int h, int channels)$/;"	f	signature:(stbi__uint16 *orig, int w, int h, int channels)
stbi__convert_16_to_8	test/include/3rd_party/stb_image.h	/^static stbi_uc *stbi__convert_16_to_8(stbi__uint16 *orig, int w, int h, int channels)$/;"	f	signature:(stbi__uint16 *orig, int w, int h, int channels)
stbi__convert_8_to_16	include/3rd_party/stb_image.h	/^static stbi__uint16 *stbi__convert_8_to_16(stbi_uc *orig, int w, int h, int channels)$/;"	f	signature:(stbi_uc *orig, int w, int h, int channels)
stbi__convert_8_to_16	test/include/3rd_party/stb_image.h	/^static stbi__uint16 *stbi__convert_8_to_16(stbi_uc *orig, int w, int h, int channels)$/;"	f	signature:(stbi_uc *orig, int w, int h, int channels)
stbi__convert_format	include/3rd_party/stb_image.h	/^static unsigned char *stbi__convert_format(unsigned char *data, int img_n, int req_comp, unsigned int x, unsigned int y)$/;"	f	signature:(unsigned char *data, int img_n, int req_comp, unsigned int x, unsigned int y)
stbi__convert_format	test/include/3rd_party/stb_image.h	/^static unsigned char *stbi__convert_format(unsigned char *data, int img_n, int req_comp, unsigned int x, unsigned int y)$/;"	f	signature:(unsigned char *data, int img_n, int req_comp, unsigned int x, unsigned int y)
stbi__convert_format16	include/3rd_party/stb_image.h	/^static stbi__uint16 *stbi__convert_format16(stbi__uint16 *data, int img_n, int req_comp, unsigned int x, unsigned int y)$/;"	f	signature:(stbi__uint16 *data, int img_n, int req_comp, unsigned int x, unsigned int y)
stbi__convert_format16	test/include/3rd_party/stb_image.h	/^static stbi__uint16 *stbi__convert_format16(stbi__uint16 *data, int img_n, int req_comp, unsigned int x, unsigned int y)$/;"	f	signature:(stbi__uint16 *data, int img_n, int req_comp, unsigned int x, unsigned int y)
stbi__copyval	include/3rd_party/stb_image.h	/^static void stbi__copyval(int channel,stbi_uc *dest,const stbi_uc *src)$/;"	f	signature:(int channel,stbi_uc *dest,const stbi_uc *src)
stbi__copyval	test/include/3rd_party/stb_image.h	/^static void stbi__copyval(int channel,stbi_uc *dest,const stbi_uc *src)$/;"	f	signature:(int channel,stbi_uc *dest,const stbi_uc *src)
stbi__cpuid3	include/3rd_party/stb_image.h	/^static int stbi__cpuid3(void)$/;"	f	signature:(void)
stbi__cpuid3	test/include/3rd_party/stb_image.h	/^static int stbi__cpuid3(void)$/;"	f	signature:(void)
stbi__create_png_image	include/3rd_party/stb_image.h	/^static int stbi__create_png_image(stbi__png *a, stbi_uc *image_data, stbi__uint32 image_data_len, int out_n, int depth, int color, int interlaced)$/;"	f	signature:(stbi__png *a, stbi_uc *image_data, stbi__uint32 image_data_len, int out_n, int depth, int color, int interlaced)
stbi__create_png_image	test/include/3rd_party/stb_image.h	/^static int stbi__create_png_image(stbi__png *a, stbi_uc *image_data, stbi__uint32 image_data_len, int out_n, int depth, int color, int interlaced)$/;"	f	signature:(stbi__png *a, stbi_uc *image_data, stbi__uint32 image_data_len, int out_n, int depth, int color, int interlaced)
stbi__create_png_image_raw	include/3rd_party/stb_image.h	/^static int stbi__create_png_image_raw(stbi__png *a, stbi_uc *raw, stbi__uint32 raw_len, int out_n, stbi__uint32 x, stbi__uint32 y, int depth, int color)$/;"	f	signature:(stbi__png *a, stbi_uc *raw, stbi__uint32 raw_len, int out_n, stbi__uint32 x, stbi__uint32 y, int depth, int color)
stbi__create_png_image_raw	test/include/3rd_party/stb_image.h	/^static int stbi__create_png_image_raw(stbi__png *a, stbi_uc *raw, stbi__uint32 raw_len, int out_n, stbi__uint32 x, stbi__uint32 y, int depth, int color)$/;"	f	signature:(stbi__png *a, stbi_uc *raw, stbi__uint32 raw_len, int out_n, stbi__uint32 x, stbi__uint32 y, int depth, int color)
stbi__de_iphone	include/3rd_party/stb_image.h	/^static void stbi__de_iphone(stbi__png *z)$/;"	f	signature:(stbi__png *z)
stbi__de_iphone	test/include/3rd_party/stb_image.h	/^static void stbi__de_iphone(stbi__png *z)$/;"	f	signature:(stbi__png *z)
stbi__de_iphone_flag	include/3rd_party/stb_image.h	/^static int stbi__de_iphone_flag = 0;$/;"	v
stbi__de_iphone_flag	test/include/3rd_party/stb_image.h	/^static int stbi__de_iphone_flag = 0;$/;"	v
stbi__decode_jpeg_header	include/3rd_party/stb_image.h	/^static int stbi__decode_jpeg_header(stbi__jpeg *z, int scan)$/;"	f	signature:(stbi__jpeg *z, int scan)
stbi__decode_jpeg_header	test/include/3rd_party/stb_image.h	/^static int stbi__decode_jpeg_header(stbi__jpeg *z, int scan)$/;"	f	signature:(stbi__jpeg *z, int scan)
stbi__decode_jpeg_image	include/3rd_party/stb_image.h	/^static int stbi__decode_jpeg_image(stbi__jpeg *j)$/;"	f	signature:(stbi__jpeg *j)
stbi__decode_jpeg_image	test/include/3rd_party/stb_image.h	/^static int stbi__decode_jpeg_image(stbi__jpeg *j)$/;"	f	signature:(stbi__jpeg *j)
stbi__depth_scale_table	include/3rd_party/stb_image.h	/^static const stbi_uc stbi__depth_scale_table[9] = { 0, 0xff, 0x55, 0, 0x11, 0,0,0, 0x01 };$/;"	v
stbi__depth_scale_table	test/include/3rd_party/stb_image.h	/^static const stbi_uc stbi__depth_scale_table[9] = { 0, 0xff, 0x55, 0, 0x11, 0,0,0, 0x01 };$/;"	v
stbi__div16	include/3rd_party/stb_image.h	3261;"	d
stbi__div16	test/include/3rd_party/stb_image.h	3261;"	d
stbi__div4	include/3rd_party/stb_image.h	3212;"	d
stbi__div4	test/include/3rd_party/stb_image.h	3212;"	d
stbi__do_png	include/3rd_party/stb_image.h	/^static void *stbi__do_png(stbi__png *p, int *x, int *y, int *n, int req_comp, stbi__result_info *ri)$/;"	f	signature:(stbi__png *p, int *x, int *y, int *n, int req_comp, stbi__result_info *ri)
stbi__do_png	test/include/3rd_party/stb_image.h	/^static void *stbi__do_png(stbi__png *p, int *x, int *y, int *n, int req_comp, stbi__result_info *ri)$/;"	f	signature:(stbi__png *p, int *x, int *y, int *n, int req_comp, stbi__result_info *ri)
stbi__do_zlib	include/3rd_party/stb_image.h	/^static int stbi__do_zlib(stbi__zbuf *a, char *obuf, int olen, int exp, int parse_header)$/;"	f	signature:(stbi__zbuf *a, char *obuf, int olen, int exp, int parse_header)
stbi__do_zlib	test/include/3rd_party/stb_image.h	/^static int stbi__do_zlib(stbi__zbuf *a, char *obuf, int olen, int exp, int parse_header)$/;"	f	signature:(stbi__zbuf *a, char *obuf, int olen, int exp, int parse_header)
stbi__end_write_file	include/3rd_party/stb_image_write.h	/^static void stbi__end_write_file(stbi__write_context *s)$/;"	f	signature:(stbi__write_context *s)
stbi__end_write_file	test/include/3rd_party/stb_image_write.h	/^static void stbi__end_write_file(stbi__write_context *s)$/;"	f	signature:(stbi__write_context *s)
stbi__err	include/3rd_party/stb_image.h	/^static int stbi__err(const char *str)$/;"	f	signature:(const char *str)
stbi__err	include/3rd_party/stb_image.h	962;"	d
stbi__err	include/3rd_party/stb_image.h	964;"	d
stbi__err	include/3rd_party/stb_image.h	966;"	d
stbi__err	test/include/3rd_party/stb_image.h	/^static int stbi__err(const char *str)$/;"	f	signature:(const char *str)
stbi__err	test/include/3rd_party/stb_image.h	962;"	d
stbi__err	test/include/3rd_party/stb_image.h	964;"	d
stbi__err	test/include/3rd_party/stb_image.h	966;"	d
stbi__errpf	include/3rd_party/stb_image.h	969;"	d
stbi__errpf	test/include/3rd_party/stb_image.h	969;"	d
stbi__errpuc	include/3rd_party/stb_image.h	970;"	d
stbi__errpuc	test/include/3rd_party/stb_image.h	970;"	d
stbi__expand_png_palette	include/3rd_party/stb_image.h	/^static int stbi__expand_png_palette(stbi__png *a, stbi_uc *palette, int len, int pal_img_n)$/;"	f	signature:(stbi__png *a, stbi_uc *palette, int len, int pal_img_n)
stbi__expand_png_palette	test/include/3rd_party/stb_image.h	/^static int stbi__expand_png_palette(stbi__png *a, stbi_uc *palette, int len, int pal_img_n)$/;"	f	signature:(stbi__png *a, stbi_uc *palette, int len, int pal_img_n)
stbi__extend_receive	include/3rd_party/stb_image.h	/^stbi_inline static int stbi__extend_receive(stbi__jpeg *j, int n)$/;"	f	signature:(stbi__jpeg *j, int n)
stbi__extend_receive	test/include/3rd_party/stb_image.h	/^stbi_inline static int stbi__extend_receive(stbi__jpeg *j, int n)$/;"	f	signature:(stbi__jpeg *j, int n)
stbi__f2f	include/3rd_party/stb_image.h	2213;"	d
stbi__f2f	test/include/3rd_party/stb_image.h	2213;"	d
stbi__fill_bits	include/3rd_party/stb_image.h	/^static void stbi__fill_bits(stbi__zbuf *z)$/;"	f	signature:(stbi__zbuf *z)
stbi__fill_bits	test/include/3rd_party/stb_image.h	/^static void stbi__fill_bits(stbi__zbuf *z)$/;"	f	signature:(stbi__zbuf *z)
stbi__flip_vertically_on_write	include/3rd_party/stb_image_write.h	/^int stbi__flip_vertically_on_write=0;$/;"	v
stbi__flip_vertically_on_write	include/3rd_party/stb_image_write.h	/^static int stbi__flip_vertically_on_write=0;$/;"	v
stbi__flip_vertically_on_write	test/include/3rd_party/stb_image_write.h	/^int stbi__flip_vertically_on_write=0;$/;"	v
stbi__flip_vertically_on_write	test/include/3rd_party/stb_image_write.h	/^static int stbi__flip_vertically_on_write=0;$/;"	v
stbi__float2fixed	include/3rd_party/stb_image.h	3417;"	d
stbi__float2fixed	test/include/3rd_party/stb_image.h	3417;"	d
stbi__float2int	include/3rd_party/stb_image.h	1684;"	d
stbi__float2int	test/include/3rd_party/stb_image.h	1684;"	d
stbi__float_postprocess	include/3rd_party/stb_image.h	/^static void stbi__float_postprocess(float *result, int *x, int *y, int *comp, int req_comp)$/;"	f	signature:(float *result, int *x, int *y, int *comp, int req_comp)
stbi__float_postprocess	test/include/3rd_party/stb_image.h	/^static void stbi__float_postprocess(float *result, int *x, int *y, int *comp, int req_comp)$/;"	f	signature:(float *result, int *x, int *y, int *comp, int req_comp)
stbi__fopen	include/3rd_party/stb_image.h	/^static FILE *stbi__fopen(char const *filename, char const *mode)$/;"	f	signature:(char const *filename, char const *mode)
stbi__fopen	test/include/3rd_party/stb_image.h	/^static FILE *stbi__fopen(char const *filename, char const *mode)$/;"	f	signature:(char const *filename, char const *mode)
stbi__free_jpeg_components	include/3rd_party/stb_image.h	/^static int stbi__free_jpeg_components(stbi__jpeg *z, int ncomp, int why)$/;"	f	signature:(stbi__jpeg *z, int ncomp, int why)
stbi__free_jpeg_components	test/include/3rd_party/stb_image.h	/^static int stbi__free_jpeg_components(stbi__jpeg *z, int ncomp, int why)$/;"	f	signature:(stbi__jpeg *z, int ncomp, int why)
stbi__fsh	include/3rd_party/stb_image.h	2214;"	d
stbi__fsh	test/include/3rd_party/stb_image.h	2214;"	d
stbi__g_failure_reason	include/3rd_party/stb_image.h	/^static const char *stbi__g_failure_reason;$/;"	v
stbi__g_failure_reason	test/include/3rd_party/stb_image.h	/^static const char *stbi__g_failure_reason;$/;"	v
stbi__get16be	include/3rd_party/stb_image.h	/^static int stbi__get16be(stbi__context *s)$/;"	f	signature:(stbi__context *s)
stbi__get16be	test/include/3rd_party/stb_image.h	/^static int stbi__get16be(stbi__context *s)$/;"	f	signature:(stbi__context *s)
stbi__get16le	include/3rd_party/stb_image.h	/^static int stbi__get16le(stbi__context *s)$/;"	f	signature:(stbi__context *s)
stbi__get16le	test/include/3rd_party/stb_image.h	/^static int stbi__get16le(stbi__context *s)$/;"	f	signature:(stbi__context *s)
stbi__get32be	include/3rd_party/stb_image.h	/^static stbi__uint32 stbi__get32be(stbi__context *s)$/;"	f	signature:(stbi__context *s)
stbi__get32be	test/include/3rd_party/stb_image.h	/^static stbi__uint32 stbi__get32be(stbi__context *s)$/;"	f	signature:(stbi__context *s)
stbi__get32le	include/3rd_party/stb_image.h	/^static stbi__uint32 stbi__get32le(stbi__context *s)$/;"	f	signature:(stbi__context *s)
stbi__get32le	test/include/3rd_party/stb_image.h	/^static stbi__uint32 stbi__get32le(stbi__context *s)$/;"	f	signature:(stbi__context *s)
stbi__get8	include/3rd_party/stb_image.h	/^stbi_inline static stbi_uc stbi__get8(stbi__context *s)$/;"	f	signature:(stbi__context *s)
stbi__get8	test/include/3rd_party/stb_image.h	/^stbi_inline static stbi_uc stbi__get8(stbi__context *s)$/;"	f	signature:(stbi__context *s)
stbi__get_chunk_header	include/3rd_party/stb_image.h	/^static stbi__pngchunk stbi__get_chunk_header(stbi__context *s)$/;"	f	signature:(stbi__context *s)
stbi__get_chunk_header	test/include/3rd_party/stb_image.h	/^static stbi__pngchunk stbi__get_chunk_header(stbi__context *s)$/;"	f	signature:(stbi__context *s)
stbi__get_marker	include/3rd_party/stb_image.h	/^static stbi_uc stbi__get_marker(stbi__jpeg *j)$/;"	f	signature:(stbi__jpeg *j)
stbi__get_marker	test/include/3rd_party/stb_image.h	/^static stbi_uc stbi__get_marker(stbi__jpeg *j)$/;"	f	signature:(stbi__jpeg *j)
stbi__getn	include/3rd_party/stb_image.h	/^static int stbi__getn(stbi__context *s, stbi_uc *buffer, int n)$/;"	f	signature:(stbi__context *s, stbi_uc *buffer, int n)
stbi__getn	test/include/3rd_party/stb_image.h	/^static int stbi__getn(stbi__context *s, stbi_uc *buffer, int n)$/;"	f	signature:(stbi__context *s, stbi_uc *buffer, int n)
stbi__gif	include/3rd_party/stb_image.h	/^} stbi__gif;$/;"	t	typeref:struct:__anon57
stbi__gif	test/include/3rd_party/stb_image.h	/^} stbi__gif;$/;"	t	typeref:struct:__anon26
stbi__gif_header	include/3rd_party/stb_image.h	/^static int stbi__gif_header(stbi__context *s, stbi__gif *g, int *comp, int is_info)$/;"	f	signature:(stbi__context *s, stbi__gif *g, int *comp, int is_info)
stbi__gif_header	test/include/3rd_party/stb_image.h	/^static int stbi__gif_header(stbi__context *s, stbi__gif *g, int *comp, int is_info)$/;"	f	signature:(stbi__context *s, stbi__gif *g, int *comp, int is_info)
stbi__gif_info	include/3rd_party/stb_image.h	/^static int stbi__gif_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	signature:(stbi__context *s, int *x, int *y, int *comp)
stbi__gif_info	test/include/3rd_party/stb_image.h	/^static int stbi__gif_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	signature:(stbi__context *s, int *x, int *y, int *comp)
stbi__gif_info_raw	include/3rd_party/stb_image.h	/^static int stbi__gif_info_raw(stbi__context *s, int *x, int *y, int *comp)$/;"	f	signature:(stbi__context *s, int *x, int *y, int *comp)
stbi__gif_info_raw	test/include/3rd_party/stb_image.h	/^static int stbi__gif_info_raw(stbi__context *s, int *x, int *y, int *comp)$/;"	f	signature:(stbi__context *s, int *x, int *y, int *comp)
stbi__gif_load	include/3rd_party/stb_image.h	/^static void *stbi__gif_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__result_info *ri)$/;"	f	signature:(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__result_info *ri)
stbi__gif_load	test/include/3rd_party/stb_image.h	/^static void *stbi__gif_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__result_info *ri)$/;"	f	signature:(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__result_info *ri)
stbi__gif_load_next	include/3rd_party/stb_image.h	/^static stbi_uc *stbi__gif_load_next(stbi__context *s, stbi__gif *g, int *comp, int req_comp, stbi_uc *two_back)$/;"	f	signature:(stbi__context *s, stbi__gif *g, int *comp, int req_comp, stbi_uc *two_back)
stbi__gif_load_next	test/include/3rd_party/stb_image.h	/^static stbi_uc *stbi__gif_load_next(stbi__context *s, stbi__gif *g, int *comp, int req_comp, stbi_uc *two_back)$/;"	f	signature:(stbi__context *s, stbi__gif *g, int *comp, int req_comp, stbi_uc *two_back)
stbi__gif_lzw	include/3rd_party/stb_image.h	/^} stbi__gif_lzw;$/;"	t	typeref:struct:__anon56
stbi__gif_lzw	test/include/3rd_party/stb_image.h	/^} stbi__gif_lzw;$/;"	t	typeref:struct:__anon25
stbi__gif_parse_colortable	include/3rd_party/stb_image.h	/^static void stbi__gif_parse_colortable(stbi__context *s, stbi_uc pal[256][4], int num_entries, int transp)$/;"	f	signature:(stbi__context *s, stbi_uc pal[256][4], int num_entries, int transp)
stbi__gif_parse_colortable	test/include/3rd_party/stb_image.h	/^static void stbi__gif_parse_colortable(stbi__context *s, stbi_uc pal[256][4], int num_entries, int transp)$/;"	f	signature:(stbi__context *s, stbi_uc pal[256][4], int num_entries, int transp)
stbi__gif_test	include/3rd_party/stb_image.h	/^static int stbi__gif_test(stbi__context *s)$/;"	f	signature:(stbi__context *s)
stbi__gif_test	test/include/3rd_party/stb_image.h	/^static int stbi__gif_test(stbi__context *s)$/;"	f	signature:(stbi__context *s)
stbi__gif_test_raw	include/3rd_party/stb_image.h	/^static int stbi__gif_test_raw(stbi__context *s)$/;"	f	signature:(stbi__context *s)
stbi__gif_test_raw	test/include/3rd_party/stb_image.h	/^static int stbi__gif_test_raw(stbi__context *s)$/;"	f	signature:(stbi__context *s)
stbi__grow_buffer_unsafe	include/3rd_party/stb_image.h	/^static void stbi__grow_buffer_unsafe(stbi__jpeg *j)$/;"	f	signature:(stbi__jpeg *j)
stbi__grow_buffer_unsafe	test/include/3rd_party/stb_image.h	/^static void stbi__grow_buffer_unsafe(stbi__jpeg *j)$/;"	f	signature:(stbi__jpeg *j)
stbi__h2l_gamma_i	include/3rd_party/stb_image.h	/^static float stbi__h2l_gamma_i=1.0f\/2.2f, stbi__h2l_scale_i=1.0f;$/;"	v
stbi__h2l_gamma_i	test/include/3rd_party/stb_image.h	/^static float stbi__h2l_gamma_i=1.0f\/2.2f, stbi__h2l_scale_i=1.0f;$/;"	v
stbi__h2l_scale_i	include/3rd_party/stb_image.h	/^static float stbi__h2l_gamma_i=1.0f\/2.2f, stbi__h2l_scale_i=1.0f;$/;"	v
stbi__h2l_scale_i	test/include/3rd_party/stb_image.h	/^static float stbi__h2l_gamma_i=1.0f\/2.2f, stbi__h2l_scale_i=1.0f;$/;"	v
stbi__hdr_convert	include/3rd_party/stb_image.h	/^static void stbi__hdr_convert(float *output, stbi_uc *input, int req_comp)$/;"	f	signature:(float *output, stbi_uc *input, int req_comp)
stbi__hdr_convert	test/include/3rd_party/stb_image.h	/^static void stbi__hdr_convert(float *output, stbi_uc *input, int req_comp)$/;"	f	signature:(float *output, stbi_uc *input, int req_comp)
stbi__hdr_gettoken	include/3rd_party/stb_image.h	/^static char *stbi__hdr_gettoken(stbi__context *z, char *buffer)$/;"	f	signature:(stbi__context *z, char *buffer)
stbi__hdr_gettoken	test/include/3rd_party/stb_image.h	/^static char *stbi__hdr_gettoken(stbi__context *z, char *buffer)$/;"	f	signature:(stbi__context *z, char *buffer)
stbi__hdr_info	include/3rd_party/stb_image.h	/^static int stbi__hdr_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	signature:(stbi__context *s, int *x, int *y, int *comp)
stbi__hdr_info	test/include/3rd_party/stb_image.h	/^static int stbi__hdr_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	signature:(stbi__context *s, int *x, int *y, int *comp)
stbi__hdr_load	include/3rd_party/stb_image.h	/^static float *stbi__hdr_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__result_info *ri)$/;"	f	signature:(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__result_info *ri)
stbi__hdr_load	test/include/3rd_party/stb_image.h	/^static float *stbi__hdr_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__result_info *ri)$/;"	f	signature:(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__result_info *ri)
stbi__hdr_test	include/3rd_party/stb_image.h	/^static int stbi__hdr_test(stbi__context* s)$/;"	f	signature:(stbi__context* s)
stbi__hdr_test	test/include/3rd_party/stb_image.h	/^static int stbi__hdr_test(stbi__context* s)$/;"	f	signature:(stbi__context* s)
stbi__hdr_test_core	include/3rd_party/stb_image.h	/^static int stbi__hdr_test_core(stbi__context *s, const char *signature)$/;"	f	signature:(stbi__context *s, const char *signature)
stbi__hdr_test_core	test/include/3rd_party/stb_image.h	/^static int stbi__hdr_test_core(stbi__context *s, const char *signature)$/;"	f	signature:(stbi__context *s, const char *signature)
stbi__hdr_to_ldr	include/3rd_party/stb_image.h	/^static stbi_uc *stbi__hdr_to_ldr(float   *data, int x, int y, int comp)$/;"	f	signature:(float *data, int x, int y, int comp)
stbi__hdr_to_ldr	test/include/3rd_party/stb_image.h	/^static stbi_uc *stbi__hdr_to_ldr(float   *data, int x, int y, int comp)$/;"	f	signature:(float *data, int x, int y, int comp)
stbi__high_bit	include/3rd_party/stb_image.h	/^static int stbi__high_bit(unsigned int z)$/;"	f	signature:(unsigned int z)
stbi__high_bit	test/include/3rd_party/stb_image.h	/^static int stbi__high_bit(unsigned int z)$/;"	f	signature:(unsigned int z)
stbi__huffman	include/3rd_party/stb_image.h	/^} stbi__huffman;$/;"	t	typeref:struct:__anon45
stbi__huffman	test/include/3rd_party/stb_image.h	/^} stbi__huffman;$/;"	t	typeref:struct:__anon14
stbi__idct_block	include/3rd_party/stb_image.h	/^static void stbi__idct_block(stbi_uc *out, int out_stride, short data[64])$/;"	f	signature:(stbi_uc *out, int out_stride, short data[64])
stbi__idct_block	test/include/3rd_party/stb_image.h	/^static void stbi__idct_block(stbi_uc *out, int out_stride, short data[64])$/;"	f	signature:(stbi_uc *out, int out_stride, short data[64])
stbi__idct_simd	include/3rd_party/stb_image.h	/^static void stbi__idct_simd(stbi_uc *out, int out_stride, short data[64])$/;"	f	signature:(stbi_uc *out, int out_stride, short data[64])
stbi__idct_simd	test/include/3rd_party/stb_image.h	/^static void stbi__idct_simd(stbi_uc *out, int out_stride, short data[64])$/;"	f	signature:(stbi_uc *out, int out_stride, short data[64])
stbi__info_main	include/3rd_party/stb_image.h	/^static int stbi__info_main(stbi__context *s, int *x, int *y, int *comp)$/;"	f	signature:(stbi__context *s, int *x, int *y, int *comp)
stbi__info_main	test/include/3rd_party/stb_image.h	/^static int stbi__info_main(stbi__context *s, int *x, int *y, int *comp)$/;"	f	signature:(stbi__context *s, int *x, int *y, int *comp)
stbi__int16	include/3rd_party/stb_image.h	/^typedef   signed short stbi__int16;$/;"	t
stbi__int16	include/3rd_party/stb_image.h	/^typedef int16_t  stbi__int16;$/;"	t
stbi__int16	test/include/3rd_party/stb_image.h	/^typedef   signed short stbi__int16;$/;"	t
stbi__int16	test/include/3rd_party/stb_image.h	/^typedef int16_t  stbi__int16;$/;"	t
stbi__int32	include/3rd_party/stb_image.h	/^typedef   signed int   stbi__int32;$/;"	t
stbi__int32	include/3rd_party/stb_image.h	/^typedef int32_t  stbi__int32;$/;"	t
stbi__int32	test/include/3rd_party/stb_image.h	/^typedef   signed int   stbi__int32;$/;"	t
stbi__int32	test/include/3rd_party/stb_image.h	/^typedef int32_t  stbi__int32;$/;"	t
stbi__is_16_main	include/3rd_party/stb_image.h	/^static int stbi__is_16_main(stbi__context *s)$/;"	f	signature:(stbi__context *s)
stbi__is_16_main	test/include/3rd_party/stb_image.h	/^static int stbi__is_16_main(stbi__context *s)$/;"	f	signature:(stbi__context *s)
stbi__jbias	include/3rd_party/stb_image.h	/^static const int stbi__jbias[16] = {0,-1,-3,-7,-15,-31,-63,-127,-255,-511,-1023,-2047,-4095,-8191,-16383,-32767};$/;"	v
stbi__jbias	test/include/3rd_party/stb_image.h	/^static const int stbi__jbias[16] = {0,-1,-3,-7,-15,-31,-63,-127,-255,-511,-1023,-2047,-4095,-8191,-16383,-32767};$/;"	v
stbi__jpeg	include/3rd_party/stb_image.h	/^} stbi__jpeg;$/;"	t	typeref:struct:__anon46
stbi__jpeg	test/include/3rd_party/stb_image.h	/^} stbi__jpeg;$/;"	t	typeref:struct:__anon15
stbi__jpeg_decode_block	include/3rd_party/stb_image.h	/^static int stbi__jpeg_decode_block(stbi__jpeg *j, short data[64], stbi__huffman *hdc, stbi__huffman *hac, stbi__int16 *fac, int b, stbi__uint16 *dequant)$/;"	f	signature:(stbi__jpeg *j, short data[64], stbi__huffman *hdc, stbi__huffman *hac, stbi__int16 *fac, int b, stbi__uint16 *dequant)
stbi__jpeg_decode_block	test/include/3rd_party/stb_image.h	/^static int stbi__jpeg_decode_block(stbi__jpeg *j, short data[64], stbi__huffman *hdc, stbi__huffman *hac, stbi__int16 *fac, int b, stbi__uint16 *dequant)$/;"	f	signature:(stbi__jpeg *j, short data[64], stbi__huffman *hdc, stbi__huffman *hac, stbi__int16 *fac, int b, stbi__uint16 *dequant)
stbi__jpeg_decode_block_prog_ac	include/3rd_party/stb_image.h	/^static int stbi__jpeg_decode_block_prog_ac(stbi__jpeg *j, short data[64], stbi__huffman *hac, stbi__int16 *fac)$/;"	f	signature:(stbi__jpeg *j, short data[64], stbi__huffman *hac, stbi__int16 *fac)
stbi__jpeg_decode_block_prog_ac	test/include/3rd_party/stb_image.h	/^static int stbi__jpeg_decode_block_prog_ac(stbi__jpeg *j, short data[64], stbi__huffman *hac, stbi__int16 *fac)$/;"	f	signature:(stbi__jpeg *j, short data[64], stbi__huffman *hac, stbi__int16 *fac)
stbi__jpeg_decode_block_prog_dc	include/3rd_party/stb_image.h	/^static int stbi__jpeg_decode_block_prog_dc(stbi__jpeg *j, short data[64], stbi__huffman *hdc, int b)$/;"	f	signature:(stbi__jpeg *j, short data[64], stbi__huffman *hdc, int b)
stbi__jpeg_decode_block_prog_dc	test/include/3rd_party/stb_image.h	/^static int stbi__jpeg_decode_block_prog_dc(stbi__jpeg *j, short data[64], stbi__huffman *hdc, int b)$/;"	f	signature:(stbi__jpeg *j, short data[64], stbi__huffman *hdc, int b)
stbi__jpeg_dequantize	include/3rd_party/stb_image.h	/^static void stbi__jpeg_dequantize(short *data, stbi__uint16 *dequant)$/;"	f	signature:(short *data, stbi__uint16 *dequant)
stbi__jpeg_dequantize	test/include/3rd_party/stb_image.h	/^static void stbi__jpeg_dequantize(short *data, stbi__uint16 *dequant)$/;"	f	signature:(short *data, stbi__uint16 *dequant)
stbi__jpeg_dezigzag	include/3rd_party/stb_image.h	/^static const stbi_uc stbi__jpeg_dezigzag[64+15] =$/;"	v
stbi__jpeg_dezigzag	test/include/3rd_party/stb_image.h	/^static const stbi_uc stbi__jpeg_dezigzag[64+15] =$/;"	v
stbi__jpeg_finish	include/3rd_party/stb_image.h	/^static void stbi__jpeg_finish(stbi__jpeg *z)$/;"	f	signature:(stbi__jpeg *z)
stbi__jpeg_finish	test/include/3rd_party/stb_image.h	/^static void stbi__jpeg_finish(stbi__jpeg *z)$/;"	f	signature:(stbi__jpeg *z)
stbi__jpeg_get_bit	include/3rd_party/stb_image.h	/^stbi_inline static int stbi__jpeg_get_bit(stbi__jpeg *j)$/;"	f	signature:(stbi__jpeg *j)
stbi__jpeg_get_bit	test/include/3rd_party/stb_image.h	/^stbi_inline static int stbi__jpeg_get_bit(stbi__jpeg *j)$/;"	f	signature:(stbi__jpeg *j)
stbi__jpeg_get_bits	include/3rd_party/stb_image.h	/^stbi_inline static int stbi__jpeg_get_bits(stbi__jpeg *j, int n)$/;"	f	signature:(stbi__jpeg *j, int n)
stbi__jpeg_get_bits	test/include/3rd_party/stb_image.h	/^stbi_inline static int stbi__jpeg_get_bits(stbi__jpeg *j, int n)$/;"	f	signature:(stbi__jpeg *j, int n)
stbi__jpeg_huff_decode	include/3rd_party/stb_image.h	/^stbi_inline static int stbi__jpeg_huff_decode(stbi__jpeg *j, stbi__huffman *h)$/;"	f	signature:(stbi__jpeg *j, stbi__huffman *h)
stbi__jpeg_huff_decode	test/include/3rd_party/stb_image.h	/^stbi_inline static int stbi__jpeg_huff_decode(stbi__jpeg *j, stbi__huffman *h)$/;"	f	signature:(stbi__jpeg *j, stbi__huffman *h)
stbi__jpeg_info	include/3rd_party/stb_image.h	/^static int stbi__jpeg_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	signature:(stbi__context *s, int *x, int *y, int *comp)
stbi__jpeg_info	test/include/3rd_party/stb_image.h	/^static int stbi__jpeg_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	signature:(stbi__context *s, int *x, int *y, int *comp)
stbi__jpeg_info_raw	include/3rd_party/stb_image.h	/^static int stbi__jpeg_info_raw(stbi__jpeg *j, int *x, int *y, int *comp)$/;"	f	signature:(stbi__jpeg *j, int *x, int *y, int *comp)
stbi__jpeg_info_raw	test/include/3rd_party/stb_image.h	/^static int stbi__jpeg_info_raw(stbi__jpeg *j, int *x, int *y, int *comp)$/;"	f	signature:(stbi__jpeg *j, int *x, int *y, int *comp)
stbi__jpeg_load	include/3rd_party/stb_image.h	/^static void *stbi__jpeg_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__result_info *ri)$/;"	f	signature:(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__result_info *ri)
stbi__jpeg_load	test/include/3rd_party/stb_image.h	/^static void *stbi__jpeg_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__result_info *ri)$/;"	f	signature:(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__result_info *ri)
stbi__jpeg_reset	include/3rd_party/stb_image.h	/^static void stbi__jpeg_reset(stbi__jpeg *j)$/;"	f	signature:(stbi__jpeg *j)
stbi__jpeg_reset	test/include/3rd_party/stb_image.h	/^static void stbi__jpeg_reset(stbi__jpeg *j)$/;"	f	signature:(stbi__jpeg *j)
stbi__jpeg_test	include/3rd_party/stb_image.h	/^static int stbi__jpeg_test(stbi__context *s)$/;"	f	signature:(stbi__context *s)
stbi__jpeg_test	test/include/3rd_party/stb_image.h	/^static int stbi__jpeg_test(stbi__context *s)$/;"	f	signature:(stbi__context *s)
stbi__l2h_gamma	include/3rd_party/stb_image.h	/^static float stbi__l2h_gamma=2.2f, stbi__l2h_scale=1.0f;$/;"	v
stbi__l2h_gamma	test/include/3rd_party/stb_image.h	/^static float stbi__l2h_gamma=2.2f, stbi__l2h_scale=1.0f;$/;"	v
stbi__l2h_scale	include/3rd_party/stb_image.h	/^static float stbi__l2h_gamma=2.2f, stbi__l2h_scale=1.0f;$/;"	v
stbi__l2h_scale	test/include/3rd_party/stb_image.h	/^static float stbi__l2h_gamma=2.2f, stbi__l2h_scale=1.0f;$/;"	v
stbi__ldr_to_hdr	include/3rd_party/stb_image.h	/^static float   *stbi__ldr_to_hdr(stbi_uc *data, int x, int y, int comp)$/;"	f	signature:(stbi_uc *data, int x, int y, int comp)
stbi__ldr_to_hdr	test/include/3rd_party/stb_image.h	/^static float   *stbi__ldr_to_hdr(stbi_uc *data, int x, int y, int comp)$/;"	f	signature:(stbi_uc *data, int x, int y, int comp)
stbi__load_and_postprocess_16bit	include/3rd_party/stb_image.h	/^static stbi__uint16 *stbi__load_and_postprocess_16bit(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f	signature:(stbi__context *s, int *x, int *y, int *comp, int req_comp)
stbi__load_and_postprocess_16bit	test/include/3rd_party/stb_image.h	/^static stbi__uint16 *stbi__load_and_postprocess_16bit(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f	signature:(stbi__context *s, int *x, int *y, int *comp, int req_comp)
stbi__load_and_postprocess_8bit	include/3rd_party/stb_image.h	/^static unsigned char *stbi__load_and_postprocess_8bit(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f	signature:(stbi__context *s, int *x, int *y, int *comp, int req_comp)
stbi__load_and_postprocess_8bit	test/include/3rd_party/stb_image.h	/^static unsigned char *stbi__load_and_postprocess_8bit(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f	signature:(stbi__context *s, int *x, int *y, int *comp, int req_comp)
stbi__load_gif_main	include/3rd_party/stb_image.h	/^static void *stbi__load_gif_main(stbi__context *s, int **delays, int *x, int *y, int *z, int *comp, int req_comp)$/;"	f	signature:(stbi__context *s, int **delays, int *x, int *y, int *z, int *comp, int req_comp)
stbi__load_gif_main	test/include/3rd_party/stb_image.h	/^static void *stbi__load_gif_main(stbi__context *s, int **delays, int *x, int *y, int *z, int *comp, int req_comp)$/;"	f	signature:(stbi__context *s, int **delays, int *x, int *y, int *z, int *comp, int req_comp)
stbi__load_main	include/3rd_party/stb_image.h	/^static void *stbi__load_main(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__result_info *ri, int bpc)$/;"	f	signature:(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__result_info *ri, int bpc)
stbi__load_main	test/include/3rd_party/stb_image.h	/^static void *stbi__load_main(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__result_info *ri, int bpc)$/;"	f	signature:(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__result_info *ri, int bpc)
stbi__loadf_main	include/3rd_party/stb_image.h	/^static float *stbi__loadf_main(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f	signature:(stbi__context *s, int *x, int *y, int *comp, int req_comp)
stbi__loadf_main	test/include/3rd_party/stb_image.h	/^static float *stbi__loadf_main(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f	signature:(stbi__context *s, int *x, int *y, int *comp, int req_comp)
stbi__mad2sizes_valid	include/3rd_party/stb_image.h	/^static int stbi__mad2sizes_valid(int a, int b, int add)$/;"	f	signature:(int a, int b, int add)
stbi__mad2sizes_valid	test/include/3rd_party/stb_image.h	/^static int stbi__mad2sizes_valid(int a, int b, int add)$/;"	f	signature:(int a, int b, int add)
stbi__mad3sizes_valid	include/3rd_party/stb_image.h	/^static int stbi__mad3sizes_valid(int a, int b, int c, int add)$/;"	f	signature:(int a, int b, int c, int add)
stbi__mad3sizes_valid	test/include/3rd_party/stb_image.h	/^static int stbi__mad3sizes_valid(int a, int b, int c, int add)$/;"	f	signature:(int a, int b, int c, int add)
stbi__mad4sizes_valid	include/3rd_party/stb_image.h	/^static int stbi__mad4sizes_valid(int a, int b, int c, int d, int add)$/;"	f	signature:(int a, int b, int c, int d, int add)
stbi__mad4sizes_valid	test/include/3rd_party/stb_image.h	/^static int stbi__mad4sizes_valid(int a, int b, int c, int d, int add)$/;"	f	signature:(int a, int b, int c, int d, int add)
stbi__malloc	include/3rd_party/stb_image.h	/^static void *stbi__malloc(size_t size)$/;"	f	signature:(size_t size)
stbi__malloc	test/include/3rd_party/stb_image.h	/^static void *stbi__malloc(size_t size)$/;"	f	signature:(size_t size)
stbi__malloc_mad2	include/3rd_party/stb_image.h	/^static void *stbi__malloc_mad2(int a, int b, int add)$/;"	f	signature:(int a, int b, int add)
stbi__malloc_mad2	test/include/3rd_party/stb_image.h	/^static void *stbi__malloc_mad2(int a, int b, int add)$/;"	f	signature:(int a, int b, int add)
stbi__malloc_mad3	include/3rd_party/stb_image.h	/^static void *stbi__malloc_mad3(int a, int b, int c, int add)$/;"	f	signature:(int a, int b, int c, int add)
stbi__malloc_mad3	test/include/3rd_party/stb_image.h	/^static void *stbi__malloc_mad3(int a, int b, int c, int add)$/;"	f	signature:(int a, int b, int c, int add)
stbi__malloc_mad4	include/3rd_party/stb_image.h	/^static void *stbi__malloc_mad4(int a, int b, int c, int d, int add)$/;"	f	signature:(int a, int b, int c, int d, int add)
stbi__malloc_mad4	test/include/3rd_party/stb_image.h	/^static void *stbi__malloc_mad4(int a, int b, int c, int d, int add)$/;"	f	signature:(int a, int b, int c, int d, int add)
stbi__mul2sizes_valid	include/3rd_party/stb_image.h	/^static int stbi__mul2sizes_valid(int a, int b)$/;"	f	signature:(int a, int b)
stbi__mul2sizes_valid	test/include/3rd_party/stb_image.h	/^static int stbi__mul2sizes_valid(int a, int b)$/;"	f	signature:(int a, int b)
stbi__out_gif_code	include/3rd_party/stb_image.h	/^static void stbi__out_gif_code(stbi__gif *g, stbi__uint16 code)$/;"	f	signature:(stbi__gif *g, stbi__uint16 code)
stbi__out_gif_code	test/include/3rd_party/stb_image.h	/^static void stbi__out_gif_code(stbi__gif *g, stbi__uint16 code)$/;"	f	signature:(stbi__gif *g, stbi__uint16 code)
stbi__paeth	include/3rd_party/stb_image.h	/^static int stbi__paeth(int a, int b, int c)$/;"	f	signature:(int a, int b, int c)
stbi__paeth	test/include/3rd_party/stb_image.h	/^static int stbi__paeth(int a, int b, int c)$/;"	f	signature:(int a, int b, int c)
stbi__parse_entropy_coded_data	include/3rd_party/stb_image.h	/^static int stbi__parse_entropy_coded_data(stbi__jpeg *z)$/;"	f	signature:(stbi__jpeg *z)
stbi__parse_entropy_coded_data	test/include/3rd_party/stb_image.h	/^static int stbi__parse_entropy_coded_data(stbi__jpeg *z)$/;"	f	signature:(stbi__jpeg *z)
stbi__parse_huffman_block	include/3rd_party/stb_image.h	/^static int stbi__parse_huffman_block(stbi__zbuf *a)$/;"	f	signature:(stbi__zbuf *a)
stbi__parse_huffman_block	test/include/3rd_party/stb_image.h	/^static int stbi__parse_huffman_block(stbi__zbuf *a)$/;"	f	signature:(stbi__zbuf *a)
stbi__parse_png_file	include/3rd_party/stb_image.h	/^static int stbi__parse_png_file(stbi__png *z, int scan, int req_comp)$/;"	f	signature:(stbi__png *z, int scan, int req_comp)
stbi__parse_png_file	test/include/3rd_party/stb_image.h	/^static int stbi__parse_png_file(stbi__png *z, int scan, int req_comp)$/;"	f	signature:(stbi__png *z, int scan, int req_comp)
stbi__parse_uncompressed_block	include/3rd_party/stb_image.h	/^static int stbi__parse_uncompressed_block(stbi__zbuf *a)$/;"	f	signature:(stbi__zbuf *a)
stbi__parse_uncompressed_block	test/include/3rd_party/stb_image.h	/^static int stbi__parse_uncompressed_block(stbi__zbuf *a)$/;"	f	signature:(stbi__zbuf *a)
stbi__parse_zlib	include/3rd_party/stb_image.h	/^static int stbi__parse_zlib(stbi__zbuf *a, int parse_header)$/;"	f	signature:(stbi__zbuf *a, int parse_header)
stbi__parse_zlib	test/include/3rd_party/stb_image.h	/^static int stbi__parse_zlib(stbi__zbuf *a, int parse_header)$/;"	f	signature:(stbi__zbuf *a, int parse_header)
stbi__parse_zlib_header	include/3rd_party/stb_image.h	/^static int stbi__parse_zlib_header(stbi__zbuf *a)$/;"	f	signature:(stbi__zbuf *a)
stbi__parse_zlib_header	test/include/3rd_party/stb_image.h	/^static int stbi__parse_zlib_header(stbi__zbuf *a)$/;"	f	signature:(stbi__zbuf *a)
stbi__pic_info	include/3rd_party/stb_image.h	/^static int stbi__pic_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	signature:(stbi__context *s, int *x, int *y, int *comp)
stbi__pic_info	test/include/3rd_party/stb_image.h	/^static int stbi__pic_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	signature:(stbi__context *s, int *x, int *y, int *comp)
stbi__pic_is4	include/3rd_party/stb_image.h	/^static int stbi__pic_is4(stbi__context *s,const char *str)$/;"	f	signature:(stbi__context *s,const char *str)
stbi__pic_is4	test/include/3rd_party/stb_image.h	/^static int stbi__pic_is4(stbi__context *s,const char *str)$/;"	f	signature:(stbi__context *s,const char *str)
stbi__pic_load	include/3rd_party/stb_image.h	/^static void *stbi__pic_load(stbi__context *s,int *px,int *py,int *comp,int req_comp, stbi__result_info *ri)$/;"	f	signature:(stbi__context *s,int *px,int *py,int *comp,int req_comp, stbi__result_info *ri)
stbi__pic_load	test/include/3rd_party/stb_image.h	/^static void *stbi__pic_load(stbi__context *s,int *px,int *py,int *comp,int req_comp, stbi__result_info *ri)$/;"	f	signature:(stbi__context *s,int *px,int *py,int *comp,int req_comp, stbi__result_info *ri)
stbi__pic_load_core	include/3rd_party/stb_image.h	/^static stbi_uc *stbi__pic_load_core(stbi__context *s,int width,int height,int *comp, stbi_uc *result)$/;"	f	signature:(stbi__context *s,int width,int height,int *comp, stbi_uc *result)
stbi__pic_load_core	test/include/3rd_party/stb_image.h	/^static stbi_uc *stbi__pic_load_core(stbi__context *s,int width,int height,int *comp, stbi_uc *result)$/;"	f	signature:(stbi__context *s,int width,int height,int *comp, stbi_uc *result)
stbi__pic_packet	include/3rd_party/stb_image.h	/^} stbi__pic_packet;$/;"	t	typeref:struct:__anon55
stbi__pic_packet	test/include/3rd_party/stb_image.h	/^} stbi__pic_packet;$/;"	t	typeref:struct:__anon24
stbi__pic_test	include/3rd_party/stb_image.h	/^static int stbi__pic_test(stbi__context *s)$/;"	f	signature:(stbi__context *s)
stbi__pic_test	test/include/3rd_party/stb_image.h	/^static int stbi__pic_test(stbi__context *s)$/;"	f	signature:(stbi__context *s)
stbi__pic_test_core	include/3rd_party/stb_image.h	/^static int stbi__pic_test_core(stbi__context *s)$/;"	f	signature:(stbi__context *s)
stbi__pic_test_core	test/include/3rd_party/stb_image.h	/^static int stbi__pic_test_core(stbi__context *s)$/;"	f	signature:(stbi__context *s)
stbi__png	include/3rd_party/stb_image.h	/^} stbi__png;$/;"	t	typeref:struct:__anon52
stbi__png	test/include/3rd_party/stb_image.h	/^} stbi__png;$/;"	t	typeref:struct:__anon21
stbi__png_info	include/3rd_party/stb_image.h	/^static int stbi__png_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	signature:(stbi__context *s, int *x, int *y, int *comp)
stbi__png_info	test/include/3rd_party/stb_image.h	/^static int stbi__png_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	signature:(stbi__context *s, int *x, int *y, int *comp)
stbi__png_info_raw	include/3rd_party/stb_image.h	/^static int stbi__png_info_raw(stbi__png *p, int *x, int *y, int *comp)$/;"	f	signature:(stbi__png *p, int *x, int *y, int *comp)
stbi__png_info_raw	test/include/3rd_party/stb_image.h	/^static int stbi__png_info_raw(stbi__png *p, int *x, int *y, int *comp)$/;"	f	signature:(stbi__png *p, int *x, int *y, int *comp)
stbi__png_is16	include/3rd_party/stb_image.h	/^static int stbi__png_is16(stbi__context *s)$/;"	f	signature:(stbi__context *s)
stbi__png_is16	test/include/3rd_party/stb_image.h	/^static int stbi__png_is16(stbi__context *s)$/;"	f	signature:(stbi__context *s)
stbi__png_load	include/3rd_party/stb_image.h	/^static void *stbi__png_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__result_info *ri)$/;"	f	signature:(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__result_info *ri)
stbi__png_load	test/include/3rd_party/stb_image.h	/^static void *stbi__png_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__result_info *ri)$/;"	f	signature:(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__result_info *ri)
stbi__png_test	include/3rd_party/stb_image.h	/^static int stbi__png_test(stbi__context *s)$/;"	f	signature:(stbi__context *s)
stbi__png_test	test/include/3rd_party/stb_image.h	/^static int stbi__png_test(stbi__context *s)$/;"	f	signature:(stbi__context *s)
stbi__pngchunk	include/3rd_party/stb_image.h	/^} stbi__pngchunk;$/;"	t	typeref:struct:__anon51
stbi__pngchunk	test/include/3rd_party/stb_image.h	/^} stbi__pngchunk;$/;"	t	typeref:struct:__anon20
stbi__pnm_getinteger	include/3rd_party/stb_image.h	/^static int      stbi__pnm_getinteger(stbi__context *s, char *c)$/;"	f	signature:(stbi__context *s, char *c)
stbi__pnm_getinteger	test/include/3rd_party/stb_image.h	/^static int      stbi__pnm_getinteger(stbi__context *s, char *c)$/;"	f	signature:(stbi__context *s, char *c)
stbi__pnm_info	include/3rd_party/stb_image.h	/^static int      stbi__pnm_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	signature:(stbi__context *s, int *x, int *y, int *comp)
stbi__pnm_info	test/include/3rd_party/stb_image.h	/^static int      stbi__pnm_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	signature:(stbi__context *s, int *x, int *y, int *comp)
stbi__pnm_isdigit	include/3rd_party/stb_image.h	/^static int      stbi__pnm_isdigit(char c)$/;"	f	signature:(char c)
stbi__pnm_isdigit	test/include/3rd_party/stb_image.h	/^static int      stbi__pnm_isdigit(char c)$/;"	f	signature:(char c)
stbi__pnm_isspace	include/3rd_party/stb_image.h	/^static int      stbi__pnm_isspace(char c)$/;"	f	signature:(char c)
stbi__pnm_isspace	test/include/3rd_party/stb_image.h	/^static int      stbi__pnm_isspace(char c)$/;"	f	signature:(char c)
stbi__pnm_load	include/3rd_party/stb_image.h	/^static void *stbi__pnm_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__result_info *ri)$/;"	f	signature:(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__result_info *ri)
stbi__pnm_load	test/include/3rd_party/stb_image.h	/^static void *stbi__pnm_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__result_info *ri)$/;"	f	signature:(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__result_info *ri)
stbi__pnm_skip_whitespace	include/3rd_party/stb_image.h	/^static void     stbi__pnm_skip_whitespace(stbi__context *s, char *c)$/;"	f	signature:(stbi__context *s, char *c)
stbi__pnm_skip_whitespace	test/include/3rd_party/stb_image.h	/^static void     stbi__pnm_skip_whitespace(stbi__context *s, char *c)$/;"	f	signature:(stbi__context *s, char *c)
stbi__pnm_test	include/3rd_party/stb_image.h	/^static int      stbi__pnm_test(stbi__context *s)$/;"	f	signature:(stbi__context *s)
stbi__pnm_test	test/include/3rd_party/stb_image.h	/^static int      stbi__pnm_test(stbi__context *s)$/;"	f	signature:(stbi__context *s)
stbi__process_frame_header	include/3rd_party/stb_image.h	/^static int stbi__process_frame_header(stbi__jpeg *z, int scan)$/;"	f	signature:(stbi__jpeg *z, int scan)
stbi__process_frame_header	test/include/3rd_party/stb_image.h	/^static int stbi__process_frame_header(stbi__jpeg *z, int scan)$/;"	f	signature:(stbi__jpeg *z, int scan)
stbi__process_gif_raster	include/3rd_party/stb_image.h	/^static stbi_uc *stbi__process_gif_raster(stbi__context *s, stbi__gif *g)$/;"	f	signature:(stbi__context *s, stbi__gif *g)
stbi__process_gif_raster	test/include/3rd_party/stb_image.h	/^static stbi_uc *stbi__process_gif_raster(stbi__context *s, stbi__gif *g)$/;"	f	signature:(stbi__context *s, stbi__gif *g)
stbi__process_marker	include/3rd_party/stb_image.h	/^static int stbi__process_marker(stbi__jpeg *z, int m)$/;"	f	signature:(stbi__jpeg *z, int m)
stbi__process_marker	test/include/3rd_party/stb_image.h	/^static int stbi__process_marker(stbi__jpeg *z, int m)$/;"	f	signature:(stbi__jpeg *z, int m)
stbi__process_scan_header	include/3rd_party/stb_image.h	/^static int stbi__process_scan_header(stbi__jpeg *z)$/;"	f	signature:(stbi__jpeg *z)
stbi__process_scan_header	test/include/3rd_party/stb_image.h	/^static int stbi__process_scan_header(stbi__jpeg *z)$/;"	f	signature:(stbi__jpeg *z)
stbi__psd_decode_rle	include/3rd_party/stb_image.h	/^static int stbi__psd_decode_rle(stbi__context *s, stbi_uc *p, int pixelCount)$/;"	f	signature:(stbi__context *s, stbi_uc *p, int pixelCount)
stbi__psd_decode_rle	test/include/3rd_party/stb_image.h	/^static int stbi__psd_decode_rle(stbi__context *s, stbi_uc *p, int pixelCount)$/;"	f	signature:(stbi__context *s, stbi_uc *p, int pixelCount)
stbi__psd_info	include/3rd_party/stb_image.h	/^static int stbi__psd_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	signature:(stbi__context *s, int *x, int *y, int *comp)
stbi__psd_info	test/include/3rd_party/stb_image.h	/^static int stbi__psd_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	signature:(stbi__context *s, int *x, int *y, int *comp)
stbi__psd_is16	include/3rd_party/stb_image.h	/^static int stbi__psd_is16(stbi__context *s)$/;"	f	signature:(stbi__context *s)
stbi__psd_is16	test/include/3rd_party/stb_image.h	/^static int stbi__psd_is16(stbi__context *s)$/;"	f	signature:(stbi__context *s)
stbi__psd_load	include/3rd_party/stb_image.h	/^static void *stbi__psd_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__result_info *ri, int bpc)$/;"	f	signature:(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__result_info *ri, int bpc)
stbi__psd_load	test/include/3rd_party/stb_image.h	/^static void *stbi__psd_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__result_info *ri, int bpc)$/;"	f	signature:(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__result_info *ri, int bpc)
stbi__psd_test	include/3rd_party/stb_image.h	/^static int stbi__psd_test(stbi__context *s)$/;"	f	signature:(stbi__context *s)
stbi__psd_test	test/include/3rd_party/stb_image.h	/^static int stbi__psd_test(stbi__context *s)$/;"	f	signature:(stbi__context *s)
stbi__readval	include/3rd_party/stb_image.h	/^static stbi_uc *stbi__readval(stbi__context *s, int channel, stbi_uc *dest)$/;"	f	signature:(stbi__context *s, int channel, stbi_uc *dest)
stbi__readval	test/include/3rd_party/stb_image.h	/^static stbi_uc *stbi__readval(stbi__context *s, int channel, stbi_uc *dest)$/;"	f	signature:(stbi__context *s, int channel, stbi_uc *dest)
stbi__refill_buffer	include/3rd_party/stb_image.h	/^static void stbi__refill_buffer(stbi__context *s)$/;"	f	signature:(stbi__context *s)
stbi__refill_buffer	test/include/3rd_party/stb_image.h	/^static void stbi__refill_buffer(stbi__context *s)$/;"	f	signature:(stbi__context *s)
stbi__resample	include/3rd_party/stb_image.h	/^} stbi__resample;$/;"	t	typeref:struct:__anon48
stbi__resample	test/include/3rd_party/stb_image.h	/^} stbi__resample;$/;"	t	typeref:struct:__anon17
stbi__resample_row_generic	include/3rd_party/stb_image.h	/^static stbi_uc *stbi__resample_row_generic(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)$/;"	f	signature:(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)
stbi__resample_row_generic	test/include/3rd_party/stb_image.h	/^static stbi_uc *stbi__resample_row_generic(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)$/;"	f	signature:(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)
stbi__resample_row_h_2	include/3rd_party/stb_image.h	/^static stbi_uc*  stbi__resample_row_h_2(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)$/;"	f	signature:(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)
stbi__resample_row_h_2	test/include/3rd_party/stb_image.h	/^static stbi_uc*  stbi__resample_row_h_2(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)$/;"	f	signature:(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)
stbi__resample_row_hv_2	include/3rd_party/stb_image.h	/^static stbi_uc *stbi__resample_row_hv_2(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)$/;"	f	signature:(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)
stbi__resample_row_hv_2	test/include/3rd_party/stb_image.h	/^static stbi_uc *stbi__resample_row_hv_2(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)$/;"	f	signature:(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)
stbi__resample_row_hv_2_simd	include/3rd_party/stb_image.h	/^static stbi_uc *stbi__resample_row_hv_2_simd(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)$/;"	f	signature:(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)
stbi__resample_row_hv_2_simd	test/include/3rd_party/stb_image.h	/^static stbi_uc *stbi__resample_row_hv_2_simd(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)$/;"	f	signature:(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)
stbi__resample_row_v_2	include/3rd_party/stb_image.h	/^static stbi_uc* stbi__resample_row_v_2(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)$/;"	f	signature:(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)
stbi__resample_row_v_2	test/include/3rd_party/stb_image.h	/^static stbi_uc* stbi__resample_row_v_2(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)$/;"	f	signature:(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)
stbi__result_info	include/3rd_party/stb_image.h	/^} stbi__result_info;$/;"	t	typeref:struct:__anon43
stbi__result_info	test/include/3rd_party/stb_image.h	/^} stbi__result_info;$/;"	t	typeref:struct:__anon12
stbi__rewind	include/3rd_party/stb_image.h	/^static void stbi__rewind(stbi__context *s)$/;"	f	signature:(stbi__context *s)
stbi__rewind	test/include/3rd_party/stb_image.h	/^static void stbi__rewind(stbi__context *s)$/;"	f	signature:(stbi__context *s)
stbi__setup_jpeg	include/3rd_party/stb_image.h	/^static void stbi__setup_jpeg(stbi__jpeg *j)$/;"	f	signature:(stbi__jpeg *j)
stbi__setup_jpeg	test/include/3rd_party/stb_image.h	/^static void stbi__setup_jpeg(stbi__jpeg *j)$/;"	f	signature:(stbi__jpeg *j)
stbi__shiftsigned	include/3rd_party/stb_image.h	/^static int stbi__shiftsigned(unsigned int v, int shift, int bits)$/;"	f	signature:(unsigned int v, int shift, int bits)
stbi__shiftsigned	test/include/3rd_party/stb_image.h	/^static int stbi__shiftsigned(unsigned int v, int shift, int bits)$/;"	f	signature:(unsigned int v, int shift, int bits)
stbi__skip	include/3rd_party/stb_image.h	/^static void stbi__skip(stbi__context *s, int n)$/;"	f	signature:(stbi__context *s, int n)
stbi__skip	test/include/3rd_party/stb_image.h	/^static void stbi__skip(stbi__context *s, int n)$/;"	f	signature:(stbi__context *s, int n)
stbi__sse2_available	include/3rd_party/stb_image.h	/^static int stbi__sse2_available(void)$/;"	f	signature:(void)
stbi__sse2_available	test/include/3rd_party/stb_image.h	/^static int stbi__sse2_available(void)$/;"	f	signature:(void)
stbi__start_callbacks	include/3rd_party/stb_image.h	/^static void stbi__start_callbacks(stbi__context *s, stbi_io_callbacks *c, void *user)$/;"	f	signature:(stbi__context *s, stbi_io_callbacks *c, void *user)
stbi__start_callbacks	test/include/3rd_party/stb_image.h	/^static void stbi__start_callbacks(stbi__context *s, stbi_io_callbacks *c, void *user)$/;"	f	signature:(stbi__context *s, stbi_io_callbacks *c, void *user)
stbi__start_file	include/3rd_party/stb_image.h	/^static void stbi__start_file(stbi__context *s, FILE *f)$/;"	f	signature:(stbi__context *s, FILE *f)
stbi__start_file	test/include/3rd_party/stb_image.h	/^static void stbi__start_file(stbi__context *s, FILE *f)$/;"	f	signature:(stbi__context *s, FILE *f)
stbi__start_mem	include/3rd_party/stb_image.h	/^static void stbi__start_mem(stbi__context *s, stbi_uc const *buffer, int len)$/;"	f	signature:(stbi__context *s, stbi_uc const *buffer, int len)
stbi__start_mem	test/include/3rd_party/stb_image.h	/^static void stbi__start_mem(stbi__context *s, stbi_uc const *buffer, int len)$/;"	f	signature:(stbi__context *s, stbi_uc const *buffer, int len)
stbi__start_write_callbacks	include/3rd_party/stb_image_write.h	/^static void stbi__start_write_callbacks(stbi__write_context *s, stbi_write_func *c, void *context)$/;"	f	signature:(stbi__write_context *s, stbi_write_func *c, void *context)
stbi__start_write_callbacks	test/include/3rd_party/stb_image_write.h	/^static void stbi__start_write_callbacks(stbi__write_context *s, stbi_write_func *c, void *context)$/;"	f	signature:(stbi__write_context *s, stbi_write_func *c, void *context)
stbi__start_write_file	include/3rd_party/stb_image_write.h	/^static int stbi__start_write_file(stbi__write_context *s, const char *filename)$/;"	f	signature:(stbi__write_context *s, const char *filename)
stbi__start_write_file	test/include/3rd_party/stb_image_write.h	/^static int stbi__start_write_file(stbi__write_context *s, const char *filename)$/;"	f	signature:(stbi__write_context *s, const char *filename)
stbi__stdio_callbacks	include/3rd_party/stb_image.h	/^static stbi_io_callbacks stbi__stdio_callbacks =$/;"	v
stbi__stdio_callbacks	test/include/3rd_party/stb_image.h	/^static stbi_io_callbacks stbi__stdio_callbacks =$/;"	v
stbi__stdio_eof	include/3rd_party/stb_image.h	/^static int stbi__stdio_eof(void *user)$/;"	f	signature:(void *user)
stbi__stdio_eof	test/include/3rd_party/stb_image.h	/^static int stbi__stdio_eof(void *user)$/;"	f	signature:(void *user)
stbi__stdio_read	include/3rd_party/stb_image.h	/^static int stbi__stdio_read(void *user, char *data, int size)$/;"	f	signature:(void *user, char *data, int size)
stbi__stdio_read	test/include/3rd_party/stb_image.h	/^static int stbi__stdio_read(void *user, char *data, int size)$/;"	f	signature:(void *user, char *data, int size)
stbi__stdio_skip	include/3rd_party/stb_image.h	/^static void stbi__stdio_skip(void *user, int n)$/;"	f	signature:(void *user, int n)
stbi__stdio_skip	test/include/3rd_party/stb_image.h	/^static void stbi__stdio_skip(void *user, int n)$/;"	f	signature:(void *user, int n)
stbi__stdio_write	include/3rd_party/stb_image_write.h	/^static void stbi__stdio_write(void *context, void *data, int size)$/;"	f	signature:(void *context, void *data, int size)
stbi__stdio_write	test/include/3rd_party/stb_image_write.h	/^static void stbi__stdio_write(void *context, void *data, int size)$/;"	f	signature:(void *context, void *data, int size)
stbi__tga_get_comp	include/3rd_party/stb_image.h	/^static int stbi__tga_get_comp(int bits_per_pixel, int is_grey, int* is_rgb16)$/;"	f	signature:(int bits_per_pixel, int is_grey, int* is_rgb16)
stbi__tga_get_comp	test/include/3rd_party/stb_image.h	/^static int stbi__tga_get_comp(int bits_per_pixel, int is_grey, int* is_rgb16)$/;"	f	signature:(int bits_per_pixel, int is_grey, int* is_rgb16)
stbi__tga_info	include/3rd_party/stb_image.h	/^static int stbi__tga_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	signature:(stbi__context *s, int *x, int *y, int *comp)
stbi__tga_info	test/include/3rd_party/stb_image.h	/^static int stbi__tga_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	signature:(stbi__context *s, int *x, int *y, int *comp)
stbi__tga_load	include/3rd_party/stb_image.h	/^static void *stbi__tga_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__result_info *ri)$/;"	f	signature:(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__result_info *ri)
stbi__tga_load	test/include/3rd_party/stb_image.h	/^static void *stbi__tga_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__result_info *ri)$/;"	f	signature:(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__result_info *ri)
stbi__tga_read_rgb16	include/3rd_party/stb_image.h	/^static void stbi__tga_read_rgb16(stbi__context *s, stbi_uc* out)$/;"	f	signature:(stbi__context *s, stbi_uc* out)
stbi__tga_read_rgb16	test/include/3rd_party/stb_image.h	/^static void stbi__tga_read_rgb16(stbi__context *s, stbi_uc* out)$/;"	f	signature:(stbi__context *s, stbi_uc* out)
stbi__tga_test	include/3rd_party/stb_image.h	/^static int stbi__tga_test(stbi__context *s)$/;"	f	signature:(stbi__context *s)
stbi__tga_test	test/include/3rd_party/stb_image.h	/^static int stbi__tga_test(stbi__context *s)$/;"	f	signature:(stbi__context *s)
stbi__uint16	include/3rd_party/stb_image.h	/^typedef uint16_t stbi__uint16;$/;"	t
stbi__uint16	include/3rd_party/stb_image.h	/^typedef unsigned short stbi__uint16;$/;"	t
stbi__uint16	test/include/3rd_party/stb_image.h	/^typedef uint16_t stbi__uint16;$/;"	t
stbi__uint16	test/include/3rd_party/stb_image.h	/^typedef unsigned short stbi__uint16;$/;"	t
stbi__uint32	include/3rd_party/stb_image.h	/^typedef uint32_t stbi__uint32;$/;"	t
stbi__uint32	include/3rd_party/stb_image.h	/^typedef unsigned int   stbi__uint32;$/;"	t
stbi__uint32	test/include/3rd_party/stb_image.h	/^typedef uint32_t stbi__uint32;$/;"	t
stbi__uint32	test/include/3rd_party/stb_image.h	/^typedef unsigned int   stbi__uint32;$/;"	t
stbi__unpremultiply_on_load	include/3rd_party/stb_image.h	/^static int stbi__unpremultiply_on_load = 0;$/;"	v
stbi__unpremultiply_on_load	test/include/3rd_party/stb_image.h	/^static int stbi__unpremultiply_on_load = 0;$/;"	v
stbi__vertical_flip	include/3rd_party/stb_image.h	/^static void stbi__vertical_flip(void *image, int w, int h, int bytes_per_pixel)$/;"	f	signature:(void *image, int w, int h, int bytes_per_pixel)
stbi__vertical_flip	test/include/3rd_party/stb_image.h	/^static void stbi__vertical_flip(void *image, int w, int h, int bytes_per_pixel)$/;"	f	signature:(void *image, int w, int h, int bytes_per_pixel)
stbi__vertical_flip_slices	include/3rd_party/stb_image.h	/^static void stbi__vertical_flip_slices(void *image, int w, int h, int z, int bytes_per_pixel)$/;"	f	signature:(void *image, int w, int h, int z, int bytes_per_pixel)
stbi__vertical_flip_slices	test/include/3rd_party/stb_image.h	/^static void stbi__vertical_flip_slices(void *image, int w, int h, int z, int bytes_per_pixel)$/;"	f	signature:(void *image, int w, int h, int z, int bytes_per_pixel)
stbi__vertically_flip_on_load	include/3rd_party/stb_image.h	/^static int stbi__vertically_flip_on_load = 0;$/;"	v
stbi__vertically_flip_on_load	test/include/3rd_party/stb_image.h	/^static int stbi__vertically_flip_on_load = 0;$/;"	v
stbi__write_context	include/3rd_party/stb_image_write.h	/^} stbi__write_context;$/;"	t	typeref:struct:__anon58
stbi__write_context	test/include/3rd_party/stb_image_write.h	/^} stbi__write_context;$/;"	t	typeref:struct:__anon27
stbi__zbuf	include/3rd_party/stb_image.h	/^} stbi__zbuf;$/;"	t	typeref:struct:__anon50
stbi__zbuf	test/include/3rd_party/stb_image.h	/^} stbi__zbuf;$/;"	t	typeref:struct:__anon19
stbi__zbuild_huffman	include/3rd_party/stb_image.h	/^static int stbi__zbuild_huffman(stbi__zhuffman *z, const stbi_uc *sizelist, int num)$/;"	f	signature:(stbi__zhuffman *z, const stbi_uc *sizelist, int num)
stbi__zbuild_huffman	test/include/3rd_party/stb_image.h	/^static int stbi__zbuild_huffman(stbi__zhuffman *z, const stbi_uc *sizelist, int num)$/;"	f	signature:(stbi__zhuffman *z, const stbi_uc *sizelist, int num)
stbi__zdefault_distance	include/3rd_party/stb_image.h	/^static const stbi_uc stbi__zdefault_distance[32] =$/;"	v
stbi__zdefault_distance	test/include/3rd_party/stb_image.h	/^static const stbi_uc stbi__zdefault_distance[32] =$/;"	v
stbi__zdefault_length	include/3rd_party/stb_image.h	/^static const stbi_uc stbi__zdefault_length[288] =$/;"	v
stbi__zdefault_length	test/include/3rd_party/stb_image.h	/^static const stbi_uc stbi__zdefault_length[288] =$/;"	v
stbi__zdist_base	include/3rd_party/stb_image.h	/^static const int stbi__zdist_base[32] = { 1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,$/;"	v
stbi__zdist_base	test/include/3rd_party/stb_image.h	/^static const int stbi__zdist_base[32] = { 1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,$/;"	v
stbi__zdist_extra	include/3rd_party/stb_image.h	/^static const int stbi__zdist_extra[32] =$/;"	v
stbi__zdist_extra	test/include/3rd_party/stb_image.h	/^static const int stbi__zdist_extra[32] =$/;"	v
stbi__zexpand	include/3rd_party/stb_image.h	/^static int stbi__zexpand(stbi__zbuf *z, char *zout, int n)  \/\/ need to make room for n bytes$/;"	f	signature:(stbi__zbuf *z, char *zout, int n)
stbi__zexpand	test/include/3rd_party/stb_image.h	/^static int stbi__zexpand(stbi__zbuf *z, char *zout, int n)  \/\/ need to make room for n bytes$/;"	f	signature:(stbi__zbuf *z, char *zout, int n)
stbi__zget8	include/3rd_party/stb_image.h	/^stbi_inline static stbi_uc stbi__zget8(stbi__zbuf *z)$/;"	f	signature:(stbi__zbuf *z)
stbi__zget8	test/include/3rd_party/stb_image.h	/^stbi_inline static stbi_uc stbi__zget8(stbi__zbuf *z)$/;"	f	signature:(stbi__zbuf *z)
stbi__zhuffman	include/3rd_party/stb_image.h	/^} stbi__zhuffman;$/;"	t	typeref:struct:__anon49
stbi__zhuffman	test/include/3rd_party/stb_image.h	/^} stbi__zhuffman;$/;"	t	typeref:struct:__anon18
stbi__zhuffman_decode	include/3rd_party/stb_image.h	/^stbi_inline static int stbi__zhuffman_decode(stbi__zbuf *a, stbi__zhuffman *z)$/;"	f	signature:(stbi__zbuf *a, stbi__zhuffman *z)
stbi__zhuffman_decode	test/include/3rd_party/stb_image.h	/^stbi_inline static int stbi__zhuffman_decode(stbi__zbuf *a, stbi__zhuffman *z)$/;"	f	signature:(stbi__zbuf *a, stbi__zhuffman *z)
stbi__zhuffman_decode_slowpath	include/3rd_party/stb_image.h	/^static int stbi__zhuffman_decode_slowpath(stbi__zbuf *a, stbi__zhuffman *z)$/;"	f	signature:(stbi__zbuf *a, stbi__zhuffman *z)
stbi__zhuffman_decode_slowpath	test/include/3rd_party/stb_image.h	/^static int stbi__zhuffman_decode_slowpath(stbi__zbuf *a, stbi__zhuffman *z)$/;"	f	signature:(stbi__zbuf *a, stbi__zhuffman *z)
stbi__zlength_base	include/3rd_party/stb_image.h	/^static const int stbi__zlength_base[31] = {$/;"	v
stbi__zlength_base	test/include/3rd_party/stb_image.h	/^static const int stbi__zlength_base[31] = {$/;"	v
stbi__zlength_extra	include/3rd_party/stb_image.h	/^static const int stbi__zlength_extra[31]=$/;"	v
stbi__zlength_extra	test/include/3rd_party/stb_image.h	/^static const int stbi__zlength_extra[31]=$/;"	v
stbi__zreceive	include/3rd_party/stb_image.h	/^stbi_inline static unsigned int stbi__zreceive(stbi__zbuf *z, int n)$/;"	f	signature:(stbi__zbuf *z, int n)
stbi__zreceive	test/include/3rd_party/stb_image.h	/^stbi_inline static unsigned int stbi__zreceive(stbi__zbuf *z, int n)$/;"	f	signature:(stbi__zbuf *z, int n)
stbi_convert_iphone_png_to_rgb	include/3rd_party/stb_image.h	/^STBIDEF void stbi_convert_iphone_png_to_rgb(int flag_true_if_should_convert)$/;"	f	signature:(int flag_true_if_should_convert)
stbi_convert_iphone_png_to_rgb	test/include/3rd_party/stb_image.h	/^STBIDEF void stbi_convert_iphone_png_to_rgb(int flag_true_if_should_convert)$/;"	f	signature:(int flag_true_if_should_convert)
stbi_convert_wchar_to_utf8	include/3rd_party/stb_image.h	/^STBIDEF int stbi_convert_wchar_to_utf8(char *buffer, size_t bufferlen, const wchar_t* input)$/;"	f	signature:(char *buffer, size_t bufferlen, const wchar_t* input)
stbi_convert_wchar_to_utf8	test/include/3rd_party/stb_image.h	/^STBIDEF int stbi_convert_wchar_to_utf8(char *buffer, size_t bufferlen, const wchar_t* input)$/;"	f	signature:(char *buffer, size_t bufferlen, const wchar_t* input)
stbi_failure_reason	include/3rd_party/stb_image.h	/^STBIDEF const char *stbi_failure_reason(void)$/;"	f	signature:(void)
stbi_failure_reason	test/include/3rd_party/stb_image.h	/^STBIDEF const char *stbi_failure_reason(void)$/;"	f	signature:(void)
stbi_flip_vertically_on_write	include/3rd_party/stb_image_write.h	/^STBIWDEF void stbi_flip_vertically_on_write(int flag)$/;"	f	signature:(int flag)
stbi_flip_vertically_on_write	test/include/3rd_party/stb_image_write.h	/^STBIWDEF void stbi_flip_vertically_on_write(int flag)$/;"	f	signature:(int flag)
stbi_hdr_to_ldr_gamma	include/3rd_party/stb_image.h	/^STBIDEF void   stbi_hdr_to_ldr_gamma(float gamma) { stbi__h2l_gamma_i = 1\/gamma; }$/;"	f	signature:(float gamma)
stbi_hdr_to_ldr_gamma	test/include/3rd_party/stb_image.h	/^STBIDEF void   stbi_hdr_to_ldr_gamma(float gamma) { stbi__h2l_gamma_i = 1\/gamma; }$/;"	f	signature:(float gamma)
stbi_hdr_to_ldr_scale	include/3rd_party/stb_image.h	/^STBIDEF void   stbi_hdr_to_ldr_scale(float scale) { stbi__h2l_scale_i = 1\/scale; }$/;"	f	signature:(float scale)
stbi_hdr_to_ldr_scale	test/include/3rd_party/stb_image.h	/^STBIDEF void   stbi_hdr_to_ldr_scale(float scale) { stbi__h2l_scale_i = 1\/scale; }$/;"	f	signature:(float scale)
stbi_image_free	include/3rd_party/stb_image.h	/^STBIDEF void stbi_image_free(void *retval_from_stbi_load)$/;"	f	signature:(void *retval_from_stbi_load)
stbi_image_free	test/include/3rd_party/stb_image.h	/^STBIDEF void stbi_image_free(void *retval_from_stbi_load)$/;"	f	signature:(void *retval_from_stbi_load)
stbi_info	include/3rd_party/stb_image.h	/^STBIDEF int stbi_info(char const *filename, int *x, int *y, int *comp)$/;"	f	signature:(char const *filename, int *x, int *y, int *comp)
stbi_info	test/include/3rd_party/stb_image.h	/^STBIDEF int stbi_info(char const *filename, int *x, int *y, int *comp)$/;"	f	signature:(char const *filename, int *x, int *y, int *comp)
stbi_info_from_callbacks	include/3rd_party/stb_image.h	/^STBIDEF int stbi_info_from_callbacks(stbi_io_callbacks const *c, void *user, int *x, int *y, int *comp)$/;"	f	signature:(stbi_io_callbacks const *c, void *user, int *x, int *y, int *comp)
stbi_info_from_callbacks	test/include/3rd_party/stb_image.h	/^STBIDEF int stbi_info_from_callbacks(stbi_io_callbacks const *c, void *user, int *x, int *y, int *comp)$/;"	f	signature:(stbi_io_callbacks const *c, void *user, int *x, int *y, int *comp)
stbi_info_from_file	include/3rd_party/stb_image.h	/^STBIDEF int stbi_info_from_file(FILE *f, int *x, int *y, int *comp)$/;"	f	signature:(FILE *f, int *x, int *y, int *comp)
stbi_info_from_file	test/include/3rd_party/stb_image.h	/^STBIDEF int stbi_info_from_file(FILE *f, int *x, int *y, int *comp)$/;"	f	signature:(FILE *f, int *x, int *y, int *comp)
stbi_info_from_memory	include/3rd_party/stb_image.h	/^STBIDEF int stbi_info_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp)$/;"	f	signature:(stbi_uc const *buffer, int len, int *x, int *y, int *comp)
stbi_info_from_memory	test/include/3rd_party/stb_image.h	/^STBIDEF int stbi_info_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp)$/;"	f	signature:(stbi_uc const *buffer, int len, int *x, int *y, int *comp)
stbi_inline	include/3rd_party/stb_image.h	547;"	d
stbi_inline	include/3rd_party/stb_image.h	549;"	d
stbi_inline	include/3rd_party/stb_image.h	552;"	d
stbi_inline	test/include/3rd_party/stb_image.h	547;"	d
stbi_inline	test/include/3rd_party/stb_image.h	549;"	d
stbi_inline	test/include/3rd_party/stb_image.h	552;"	d
stbi_io_callbacks	include/3rd_party/stb_image.h	/^} stbi_io_callbacks;$/;"	t	typeref:struct:__anon40
stbi_io_callbacks	test/include/3rd_party/stb_image.h	/^} stbi_io_callbacks;$/;"	t	typeref:struct:__anon9
stbi_is_16_bit	include/3rd_party/stb_image.h	/^STBIDEF int stbi_is_16_bit(char const *filename)$/;"	f	signature:(char const *filename)
stbi_is_16_bit	test/include/3rd_party/stb_image.h	/^STBIDEF int stbi_is_16_bit(char const *filename)$/;"	f	signature:(char const *filename)
stbi_is_16_bit_from_callbacks	include/3rd_party/stb_image.h	/^STBIDEF int stbi_is_16_bit_from_callbacks(stbi_io_callbacks const *c, void *user)$/;"	f	signature:(stbi_io_callbacks const *c, void *user)
stbi_is_16_bit_from_callbacks	test/include/3rd_party/stb_image.h	/^STBIDEF int stbi_is_16_bit_from_callbacks(stbi_io_callbacks const *c, void *user)$/;"	f	signature:(stbi_io_callbacks const *c, void *user)
stbi_is_16_bit_from_file	include/3rd_party/stb_image.h	/^STBIDEF int stbi_is_16_bit_from_file(FILE *f)$/;"	f	signature:(FILE *f)
stbi_is_16_bit_from_file	test/include/3rd_party/stb_image.h	/^STBIDEF int stbi_is_16_bit_from_file(FILE *f)$/;"	f	signature:(FILE *f)
stbi_is_16_bit_from_memory	include/3rd_party/stb_image.h	/^STBIDEF int stbi_is_16_bit_from_memory(stbi_uc const *buffer, int len)$/;"	f	signature:(stbi_uc const *buffer, int len)
stbi_is_16_bit_from_memory	test/include/3rd_party/stb_image.h	/^STBIDEF int stbi_is_16_bit_from_memory(stbi_uc const *buffer, int len)$/;"	f	signature:(stbi_uc const *buffer, int len)
stbi_is_hdr	include/3rd_party/stb_image.h	/^STBIDEF int      stbi_is_hdr          (char const *filename)$/;"	f	signature:(char const *filename)
stbi_is_hdr	test/include/3rd_party/stb_image.h	/^STBIDEF int      stbi_is_hdr          (char const *filename)$/;"	f	signature:(char const *filename)
stbi_is_hdr_from_callbacks	include/3rd_party/stb_image.h	/^STBIDEF int      stbi_is_hdr_from_callbacks(stbi_io_callbacks const *clbk, void *user)$/;"	f	signature:(stbi_io_callbacks const *clbk, void *user)
stbi_is_hdr_from_callbacks	test/include/3rd_party/stb_image.h	/^STBIDEF int      stbi_is_hdr_from_callbacks(stbi_io_callbacks const *clbk, void *user)$/;"	f	signature:(stbi_io_callbacks const *clbk, void *user)
stbi_is_hdr_from_file	include/3rd_party/stb_image.h	/^STBIDEF int stbi_is_hdr_from_file(FILE *f)$/;"	f	signature:(FILE *f)
stbi_is_hdr_from_file	test/include/3rd_party/stb_image.h	/^STBIDEF int stbi_is_hdr_from_file(FILE *f)$/;"	f	signature:(FILE *f)
stbi_is_hdr_from_memory	include/3rd_party/stb_image.h	/^STBIDEF int stbi_is_hdr_from_memory(stbi_uc const *buffer, int len)$/;"	f	signature:(stbi_uc const *buffer, int len)
stbi_is_hdr_from_memory	test/include/3rd_party/stb_image.h	/^STBIDEF int stbi_is_hdr_from_memory(stbi_uc const *buffer, int len)$/;"	f	signature:(stbi_uc const *buffer, int len)
stbi_ldr_to_hdr_gamma	include/3rd_party/stb_image.h	/^STBIDEF void   stbi_ldr_to_hdr_gamma(float gamma) { stbi__l2h_gamma = gamma; }$/;"	f	signature:(float gamma)
stbi_ldr_to_hdr_gamma	test/include/3rd_party/stb_image.h	/^STBIDEF void   stbi_ldr_to_hdr_gamma(float gamma) { stbi__l2h_gamma = gamma; }$/;"	f	signature:(float gamma)
stbi_ldr_to_hdr_scale	include/3rd_party/stb_image.h	/^STBIDEF void   stbi_ldr_to_hdr_scale(float scale) { stbi__l2h_scale = scale; }$/;"	f	signature:(float scale)
stbi_ldr_to_hdr_scale	test/include/3rd_party/stb_image.h	/^STBIDEF void   stbi_ldr_to_hdr_scale(float scale) { stbi__l2h_scale = scale; }$/;"	f	signature:(float scale)
stbi_load	include/3rd_party/stb_image.h	/^STBIDEF stbi_uc *stbi_load(char const *filename, int *x, int *y, int *comp, int req_comp)$/;"	f	signature:(char const *filename, int *x, int *y, int *comp, int req_comp)
stbi_load	test/include/3rd_party/stb_image.h	/^STBIDEF stbi_uc *stbi_load(char const *filename, int *x, int *y, int *comp, int req_comp)$/;"	f	signature:(char const *filename, int *x, int *y, int *comp, int req_comp)
stbi_load_16	include/3rd_party/stb_image.h	/^STBIDEF stbi_us *stbi_load_16(char const *filename, int *x, int *y, int *comp, int req_comp)$/;"	f	signature:(char const *filename, int *x, int *y, int *comp, int req_comp)
stbi_load_16	test/include/3rd_party/stb_image.h	/^STBIDEF stbi_us *stbi_load_16(char const *filename, int *x, int *y, int *comp, int req_comp)$/;"	f	signature:(char const *filename, int *x, int *y, int *comp, int req_comp)
stbi_load_16_from_callbacks	include/3rd_party/stb_image.h	/^STBIDEF stbi_us *stbi_load_16_from_callbacks(stbi_io_callbacks const *clbk, void *user, int *x, int *y, int *channels_in_file, int desired_channels)$/;"	f	signature:(stbi_io_callbacks const *clbk, void *user, int *x, int *y, int *channels_in_file, int desired_channels)
stbi_load_16_from_callbacks	test/include/3rd_party/stb_image.h	/^STBIDEF stbi_us *stbi_load_16_from_callbacks(stbi_io_callbacks const *clbk, void *user, int *x, int *y, int *channels_in_file, int desired_channels)$/;"	f	signature:(stbi_io_callbacks const *clbk, void *user, int *x, int *y, int *channels_in_file, int desired_channels)
stbi_load_16_from_memory	include/3rd_party/stb_image.h	/^STBIDEF stbi_us *stbi_load_16_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *channels_in_file, int desired_channels)$/;"	f	signature:(stbi_uc const *buffer, int len, int *x, int *y, int *channels_in_file, int desired_channels)
stbi_load_16_from_memory	test/include/3rd_party/stb_image.h	/^STBIDEF stbi_us *stbi_load_16_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *channels_in_file, int desired_channels)$/;"	f	signature:(stbi_uc const *buffer, int len, int *x, int *y, int *channels_in_file, int desired_channels)
stbi_load_from_callbacks	include/3rd_party/stb_image.h	/^STBIDEF stbi_uc *stbi_load_from_callbacks(stbi_io_callbacks const *clbk, void *user, int *x, int *y, int *comp, int req_comp)$/;"	f	signature:(stbi_io_callbacks const *clbk, void *user, int *x, int *y, int *comp, int req_comp)
stbi_load_from_callbacks	test/include/3rd_party/stb_image.h	/^STBIDEF stbi_uc *stbi_load_from_callbacks(stbi_io_callbacks const *clbk, void *user, int *x, int *y, int *comp, int req_comp)$/;"	f	signature:(stbi_io_callbacks const *clbk, void *user, int *x, int *y, int *comp, int req_comp)
stbi_load_from_file	include/3rd_party/stb_image.h	/^STBIDEF stbi_uc *stbi_load_from_file(FILE *f, int *x, int *y, int *comp, int req_comp)$/;"	f	signature:(FILE *f, int *x, int *y, int *comp, int req_comp)
stbi_load_from_file	test/include/3rd_party/stb_image.h	/^STBIDEF stbi_uc *stbi_load_from_file(FILE *f, int *x, int *y, int *comp, int req_comp)$/;"	f	signature:(FILE *f, int *x, int *y, int *comp, int req_comp)
stbi_load_from_file_16	include/3rd_party/stb_image.h	/^STBIDEF stbi__uint16 *stbi_load_from_file_16(FILE *f, int *x, int *y, int *comp, int req_comp)$/;"	f	signature:(FILE *f, int *x, int *y, int *comp, int req_comp)
stbi_load_from_file_16	test/include/3rd_party/stb_image.h	/^STBIDEF stbi__uint16 *stbi_load_from_file_16(FILE *f, int *x, int *y, int *comp, int req_comp)$/;"	f	signature:(FILE *f, int *x, int *y, int *comp, int req_comp)
stbi_load_from_memory	include/3rd_party/stb_image.h	/^STBIDEF stbi_uc *stbi_load_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp, int req_comp)$/;"	f	signature:(stbi_uc const *buffer, int len, int *x, int *y, int *comp, int req_comp)
stbi_load_from_memory	test/include/3rd_party/stb_image.h	/^STBIDEF stbi_uc *stbi_load_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp, int req_comp)$/;"	f	signature:(stbi_uc const *buffer, int len, int *x, int *y, int *comp, int req_comp)
stbi_load_gif_from_memory	include/3rd_party/stb_image.h	/^STBIDEF stbi_uc *stbi_load_gif_from_memory(stbi_uc const *buffer, int len, int **delays, int *x, int *y, int *z, int *comp, int req_comp)$/;"	f	signature:(stbi_uc const *buffer, int len, int **delays, int *x, int *y, int *z, int *comp, int req_comp)
stbi_load_gif_from_memory	test/include/3rd_party/stb_image.h	/^STBIDEF stbi_uc *stbi_load_gif_from_memory(stbi_uc const *buffer, int len, int **delays, int *x, int *y, int *z, int *comp, int req_comp)$/;"	f	signature:(stbi_uc const *buffer, int len, int **delays, int *x, int *y, int *z, int *comp, int req_comp)
stbi_loadf	include/3rd_party/stb_image.h	/^STBIDEF float *stbi_loadf(char const *filename, int *x, int *y, int *comp, int req_comp)$/;"	f	signature:(char const *filename, int *x, int *y, int *comp, int req_comp)
stbi_loadf	test/include/3rd_party/stb_image.h	/^STBIDEF float *stbi_loadf(char const *filename, int *x, int *y, int *comp, int req_comp)$/;"	f	signature:(char const *filename, int *x, int *y, int *comp, int req_comp)
stbi_loadf_from_callbacks	include/3rd_party/stb_image.h	/^STBIDEF float *stbi_loadf_from_callbacks(stbi_io_callbacks const *clbk, void *user, int *x, int *y, int *comp, int req_comp)$/;"	f	signature:(stbi_io_callbacks const *clbk, void *user, int *x, int *y, int *comp, int req_comp)
stbi_loadf_from_callbacks	test/include/3rd_party/stb_image.h	/^STBIDEF float *stbi_loadf_from_callbacks(stbi_io_callbacks const *clbk, void *user, int *x, int *y, int *comp, int req_comp)$/;"	f	signature:(stbi_io_callbacks const *clbk, void *user, int *x, int *y, int *comp, int req_comp)
stbi_loadf_from_file	include/3rd_party/stb_image.h	/^STBIDEF float *stbi_loadf_from_file(FILE *f, int *x, int *y, int *comp, int req_comp)$/;"	f	signature:(FILE *f, int *x, int *y, int *comp, int req_comp)
stbi_loadf_from_file	test/include/3rd_party/stb_image.h	/^STBIDEF float *stbi_loadf_from_file(FILE *f, int *x, int *y, int *comp, int req_comp)$/;"	f	signature:(FILE *f, int *x, int *y, int *comp, int req_comp)
stbi_loadf_from_memory	include/3rd_party/stb_image.h	/^STBIDEF float *stbi_loadf_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp, int req_comp)$/;"	f	signature:(stbi_uc const *buffer, int len, int *x, int *y, int *comp, int req_comp)
stbi_loadf_from_memory	test/include/3rd_party/stb_image.h	/^STBIDEF float *stbi_loadf_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp, int req_comp)$/;"	f	signature:(stbi_uc const *buffer, int len, int *x, int *y, int *comp, int req_comp)
stbi_lrot	include/3rd_party/stb_image.h	582;"	d
stbi_lrot	include/3rd_party/stb_image.h	584;"	d
stbi_lrot	test/include/3rd_party/stb_image.h	582;"	d
stbi_lrot	test/include/3rd_party/stb_image.h	584;"	d
stbi_set_flip_vertically_on_load	include/3rd_party/stb_image.h	/^STBIDEF void stbi_set_flip_vertically_on_load(int flag_true_if_should_flip)$/;"	f	signature:(int flag_true_if_should_flip)
stbi_set_flip_vertically_on_load	test/include/3rd_party/stb_image.h	/^STBIDEF void stbi_set_flip_vertically_on_load(int flag_true_if_should_flip)$/;"	f	signature:(int flag_true_if_should_flip)
stbi_set_unpremultiply_on_load	include/3rd_party/stb_image.h	/^STBIDEF void stbi_set_unpremultiply_on_load(int flag_true_if_should_unpremultiply)$/;"	f	signature:(int flag_true_if_should_unpremultiply)
stbi_set_unpremultiply_on_load	test/include/3rd_party/stb_image.h	/^STBIDEF void stbi_set_unpremultiply_on_load(int flag_true_if_should_unpremultiply)$/;"	f	signature:(int flag_true_if_should_unpremultiply)
stbi_uc	include/3rd_party/stb_image.h	/^typedef unsigned char stbi_uc;$/;"	t
stbi_uc	test/include/3rd_party/stb_image.h	/^typedef unsigned char stbi_uc;$/;"	t
stbi_us	include/3rd_party/stb_image.h	/^typedef unsigned short stbi_us;$/;"	t
stbi_us	test/include/3rd_party/stb_image.h	/^typedef unsigned short stbi_us;$/;"	t
stbi_write_bmp	include/3rd_party/stb_image_write.h	/^STBIWDEF int stbi_write_bmp(char const *filename, int x, int y, int comp, const void *data)$/;"	f	signature:(char const *filename, int x, int y, int comp, const void *data)
stbi_write_bmp	test/include/3rd_party/stb_image_write.h	/^STBIWDEF int stbi_write_bmp(char const *filename, int x, int y, int comp, const void *data)$/;"	f	signature:(char const *filename, int x, int y, int comp, const void *data)
stbi_write_bmp_core	include/3rd_party/stb_image_write.h	/^static int stbi_write_bmp_core(stbi__write_context *s, int x, int y, int comp, const void *data)$/;"	f	signature:(stbi__write_context *s, int x, int y, int comp, const void *data)
stbi_write_bmp_core	test/include/3rd_party/stb_image_write.h	/^static int stbi_write_bmp_core(stbi__write_context *s, int x, int y, int comp, const void *data)$/;"	f	signature:(stbi__write_context *s, int x, int y, int comp, const void *data)
stbi_write_bmp_to_func	include/3rd_party/stb_image_write.h	/^STBIWDEF int stbi_write_bmp_to_func(stbi_write_func *func, void *context, int x, int y, int comp, const void *data)$/;"	f	signature:(stbi_write_func *func, void *context, int x, int y, int comp, const void *data)
stbi_write_bmp_to_func	test/include/3rd_party/stb_image_write.h	/^STBIWDEF int stbi_write_bmp_to_func(stbi_write_func *func, void *context, int x, int y, int comp, const void *data)$/;"	f	signature:(stbi_write_func *func, void *context, int x, int y, int comp, const void *data)
stbi_write_force_png_filter	include/3rd_party/stb_image_write.h	/^int stbi_write_force_png_filter = -1;$/;"	v
stbi_write_force_png_filter	include/3rd_party/stb_image_write.h	/^static int stbi_write_force_png_filter = -1;$/;"	v
stbi_write_force_png_filter	test/include/3rd_party/stb_image_write.h	/^int stbi_write_force_png_filter = -1;$/;"	v
stbi_write_force_png_filter	test/include/3rd_party/stb_image_write.h	/^static int stbi_write_force_png_filter = -1;$/;"	v
stbi_write_func	include/3rd_party/stb_image_write.h	/^typedef void stbi_write_func(void *context, void *data, int size);$/;"	t
stbi_write_func	test/include/3rd_party/stb_image_write.h	/^typedef void stbi_write_func(void *context, void *data, int size);$/;"	t
stbi_write_hdr	include/3rd_party/stb_image_write.h	/^STBIWDEF int stbi_write_hdr(char const *filename, int x, int y, int comp, const float *data)$/;"	f	signature:(char const *filename, int x, int y, int comp, const float *data)
stbi_write_hdr	test/include/3rd_party/stb_image_write.h	/^STBIWDEF int stbi_write_hdr(char const *filename, int x, int y, int comp, const float *data)$/;"	f	signature:(char const *filename, int x, int y, int comp, const float *data)
stbi_write_hdr_core	include/3rd_party/stb_image_write.h	/^static int stbi_write_hdr_core(stbi__write_context *s, int x, int y, int comp, float *data)$/;"	f	signature:(stbi__write_context *s, int x, int y, int comp, float *data)
stbi_write_hdr_core	test/include/3rd_party/stb_image_write.h	/^static int stbi_write_hdr_core(stbi__write_context *s, int x, int y, int comp, float *data)$/;"	f	signature:(stbi__write_context *s, int x, int y, int comp, float *data)
stbi_write_hdr_to_func	include/3rd_party/stb_image_write.h	/^STBIWDEF int stbi_write_hdr_to_func(stbi_write_func *func, void *context, int x, int y, int comp, const float *data)$/;"	f	signature:(stbi_write_func *func, void *context, int x, int y, int comp, const float *data)
stbi_write_hdr_to_func	test/include/3rd_party/stb_image_write.h	/^STBIWDEF int stbi_write_hdr_to_func(stbi_write_func *func, void *context, int x, int y, int comp, const float *data)$/;"	f	signature:(stbi_write_func *func, void *context, int x, int y, int comp, const float *data)
stbi_write_jpg	include/3rd_party/stb_image_write.h	/^STBIWDEF int stbi_write_jpg(char const *filename, int x, int y, int comp, const void *data, int quality)$/;"	f	signature:(char const *filename, int x, int y, int comp, const void *data, int quality)
stbi_write_jpg	test/include/3rd_party/stb_image_write.h	/^STBIWDEF int stbi_write_jpg(char const *filename, int x, int y, int comp, const void *data, int quality)$/;"	f	signature:(char const *filename, int x, int y, int comp, const void *data, int quality)
stbi_write_jpg_core	include/3rd_party/stb_image_write.h	/^static int stbi_write_jpg_core(stbi__write_context *s, int width, int height, int comp, const void* data, int quality) {$/;"	f	signature:(stbi__write_context *s, int width, int height, int comp, const void* data, int quality)
stbi_write_jpg_core	test/include/3rd_party/stb_image_write.h	/^static int stbi_write_jpg_core(stbi__write_context *s, int width, int height, int comp, const void* data, int quality) {$/;"	f	signature:(stbi__write_context *s, int width, int height, int comp, const void* data, int quality)
stbi_write_jpg_to_func	include/3rd_party/stb_image_write.h	/^STBIWDEF int stbi_write_jpg_to_func(stbi_write_func *func, void *context, int x, int y, int comp, const void *data, int quality)$/;"	f	signature:(stbi_write_func *func, void *context, int x, int y, int comp, const void *data, int quality)
stbi_write_jpg_to_func	test/include/3rd_party/stb_image_write.h	/^STBIWDEF int stbi_write_jpg_to_func(stbi_write_func *func, void *context, int x, int y, int comp, const void *data, int quality)$/;"	f	signature:(stbi_write_func *func, void *context, int x, int y, int comp, const void *data, int quality)
stbi_write_png	include/3rd_party/stb_image_write.h	/^STBIWDEF int stbi_write_png(char const *filename, int x, int y, int comp, const void *data, int stride_bytes)$/;"	f	signature:(char const *filename, int x, int y, int comp, const void *data, int stride_bytes)
stbi_write_png	test/include/3rd_party/stb_image_write.h	/^STBIWDEF int stbi_write_png(char const *filename, int x, int y, int comp, const void *data, int stride_bytes)$/;"	f	signature:(char const *filename, int x, int y, int comp, const void *data, int stride_bytes)
stbi_write_png_compression_level	include/3rd_party/stb_image_write.h	/^int stbi_write_png_compression_level = 8;$/;"	v
stbi_write_png_compression_level	include/3rd_party/stb_image_write.h	/^static int stbi_write_png_compression_level = 8;$/;"	v
stbi_write_png_compression_level	test/include/3rd_party/stb_image_write.h	/^int stbi_write_png_compression_level = 8;$/;"	v
stbi_write_png_compression_level	test/include/3rd_party/stb_image_write.h	/^static int stbi_write_png_compression_level = 8;$/;"	v
stbi_write_png_to_func	include/3rd_party/stb_image_write.h	/^STBIWDEF int stbi_write_png_to_func(stbi_write_func *func, void *context, int x, int y, int comp, const void *data, int stride_bytes)$/;"	f	signature:(stbi_write_func *func, void *context, int x, int y, int comp, const void *data, int stride_bytes)
stbi_write_png_to_func	test/include/3rd_party/stb_image_write.h	/^STBIWDEF int stbi_write_png_to_func(stbi_write_func *func, void *context, int x, int y, int comp, const void *data, int stride_bytes)$/;"	f	signature:(stbi_write_func *func, void *context, int x, int y, int comp, const void *data, int stride_bytes)
stbi_write_png_to_mem	include/3rd_party/stb_image_write.h	/^STBIWDEF unsigned char *stbi_write_png_to_mem(const unsigned char *pixels, int stride_bytes, int x, int y, int n, int *out_len)$/;"	f	signature:(const unsigned char *pixels, int stride_bytes, int x, int y, int n, int *out_len)
stbi_write_png_to_mem	test/include/3rd_party/stb_image_write.h	/^STBIWDEF unsigned char *stbi_write_png_to_mem(const unsigned char *pixels, int stride_bytes, int x, int y, int n, int *out_len)$/;"	f	signature:(const unsigned char *pixels, int stride_bytes, int x, int y, int n, int *out_len)
stbi_write_tga	include/3rd_party/stb_image_write.h	/^STBIWDEF int stbi_write_tga(char const *filename, int x, int y, int comp, const void *data)$/;"	f	signature:(char const *filename, int x, int y, int comp, const void *data)
stbi_write_tga	test/include/3rd_party/stb_image_write.h	/^STBIWDEF int stbi_write_tga(char const *filename, int x, int y, int comp, const void *data)$/;"	f	signature:(char const *filename, int x, int y, int comp, const void *data)
stbi_write_tga_core	include/3rd_party/stb_image_write.h	/^static int stbi_write_tga_core(stbi__write_context *s, int x, int y, int comp, void *data)$/;"	f	signature:(stbi__write_context *s, int x, int y, int comp, void *data)
stbi_write_tga_core	test/include/3rd_party/stb_image_write.h	/^static int stbi_write_tga_core(stbi__write_context *s, int x, int y, int comp, void *data)$/;"	f	signature:(stbi__write_context *s, int x, int y, int comp, void *data)
stbi_write_tga_to_func	include/3rd_party/stb_image_write.h	/^STBIWDEF int stbi_write_tga_to_func(stbi_write_func *func, void *context, int x, int y, int comp, const void *data)$/;"	f	signature:(stbi_write_func *func, void *context, int x, int y, int comp, const void *data)
stbi_write_tga_to_func	test/include/3rd_party/stb_image_write.h	/^STBIWDEF int stbi_write_tga_to_func(stbi_write_func *func, void *context, int x, int y, int comp, const void *data)$/;"	f	signature:(stbi_write_func *func, void *context, int x, int y, int comp, const void *data)
stbi_write_tga_with_rle	include/3rd_party/stb_image_write.h	/^int stbi_write_tga_with_rle = 1;$/;"	v
stbi_write_tga_with_rle	include/3rd_party/stb_image_write.h	/^static int stbi_write_tga_with_rle = 1;$/;"	v
stbi_write_tga_with_rle	test/include/3rd_party/stb_image_write.h	/^int stbi_write_tga_with_rle = 1;$/;"	v
stbi_write_tga_with_rle	test/include/3rd_party/stb_image_write.h	/^static int stbi_write_tga_with_rle = 1;$/;"	v
stbi_zlib_compress	include/3rd_party/stb_image_write.h	/^STBIWDEF unsigned char * stbi_zlib_compress(unsigned char *data, int data_len, int *out_len, int quality)$/;"	f	signature:(unsigned char *data, int data_len, int *out_len, int quality)
stbi_zlib_compress	test/include/3rd_party/stb_image_write.h	/^STBIWDEF unsigned char * stbi_zlib_compress(unsigned char *data, int data_len, int *out_len, int quality)$/;"	f	signature:(unsigned char *data, int data_len, int *out_len, int quality)
stbi_zlib_decode_buffer	include/3rd_party/stb_image.h	/^STBIDEF int stbi_zlib_decode_buffer(char *obuffer, int olen, char const *ibuffer, int ilen)$/;"	f	signature:(char *obuffer, int olen, char const *ibuffer, int ilen)
stbi_zlib_decode_buffer	test/include/3rd_party/stb_image.h	/^STBIDEF int stbi_zlib_decode_buffer(char *obuffer, int olen, char const *ibuffer, int ilen)$/;"	f	signature:(char *obuffer, int olen, char const *ibuffer, int ilen)
stbi_zlib_decode_malloc	include/3rd_party/stb_image.h	/^STBIDEF char *stbi_zlib_decode_malloc(char const *buffer, int len, int *outlen)$/;"	f	signature:(char const *buffer, int len, int *outlen)
stbi_zlib_decode_malloc	test/include/3rd_party/stb_image.h	/^STBIDEF char *stbi_zlib_decode_malloc(char const *buffer, int len, int *outlen)$/;"	f	signature:(char const *buffer, int len, int *outlen)
stbi_zlib_decode_malloc_guesssize	include/3rd_party/stb_image.h	/^STBIDEF char *stbi_zlib_decode_malloc_guesssize(const char *buffer, int len, int initial_size, int *outlen)$/;"	f	signature:(const char *buffer, int len, int initial_size, int *outlen)
stbi_zlib_decode_malloc_guesssize	test/include/3rd_party/stb_image.h	/^STBIDEF char *stbi_zlib_decode_malloc_guesssize(const char *buffer, int len, int initial_size, int *outlen)$/;"	f	signature:(const char *buffer, int len, int initial_size, int *outlen)
stbi_zlib_decode_malloc_guesssize_headerflag	include/3rd_party/stb_image.h	/^STBIDEF char *stbi_zlib_decode_malloc_guesssize_headerflag(const char *buffer, int len, int initial_size, int *outlen, int parse_header)$/;"	f	signature:(const char *buffer, int len, int initial_size, int *outlen, int parse_header)
stbi_zlib_decode_malloc_guesssize_headerflag	test/include/3rd_party/stb_image.h	/^STBIDEF char *stbi_zlib_decode_malloc_guesssize_headerflag(const char *buffer, int len, int initial_size, int *outlen, int parse_header)$/;"	f	signature:(const char *buffer, int len, int initial_size, int *outlen, int parse_header)
stbi_zlib_decode_noheader_buffer	include/3rd_party/stb_image.h	/^STBIDEF int stbi_zlib_decode_noheader_buffer(char *obuffer, int olen, const char *ibuffer, int ilen)$/;"	f	signature:(char *obuffer, int olen, const char *ibuffer, int ilen)
stbi_zlib_decode_noheader_buffer	test/include/3rd_party/stb_image.h	/^STBIDEF int stbi_zlib_decode_noheader_buffer(char *obuffer, int olen, const char *ibuffer, int ilen)$/;"	f	signature:(char *obuffer, int olen, const char *ibuffer, int ilen)
stbi_zlib_decode_noheader_malloc	include/3rd_party/stb_image.h	/^STBIDEF char *stbi_zlib_decode_noheader_malloc(char const *buffer, int len, int *outlen)$/;"	f	signature:(char const *buffer, int len, int *outlen)
stbi_zlib_decode_noheader_malloc	test/include/3rd_party/stb_image.h	/^STBIDEF char *stbi_zlib_decode_noheader_malloc(char const *buffer, int len, int *outlen)$/;"	f	signature:(char const *buffer, int len, int *outlen)
stbiw__ZHASH	include/3rd_party/stb_image_write.h	854;"	d
stbiw__ZHASH	test/include/3rd_party/stb_image_write.h	854;"	d
stbiw__crc32	include/3rd_party/stb_image_write.h	/^static unsigned int stbiw__crc32(unsigned char *buffer, int len)$/;"	f	signature:(unsigned char *buffer, int len)
stbiw__crc32	test/include/3rd_party/stb_image_write.h	/^static unsigned int stbiw__crc32(unsigned char *buffer, int len)$/;"	f	signature:(unsigned char *buffer, int len)
stbiw__encode_png_line	include/3rd_party/stb_image_write.h	/^static void stbiw__encode_png_line(unsigned char *pixels, int stride_bytes, int width, int height, int y, int n, int filter_type, signed char *line_buffer)$/;"	f	signature:(unsigned char *pixels, int stride_bytes, int width, int height, int y, int n, int filter_type, signed char *line_buffer)
stbiw__encode_png_line	test/include/3rd_party/stb_image_write.h	/^static void stbiw__encode_png_line(unsigned char *pixels, int stride_bytes, int width, int height, int y, int n, int filter_type, signed char *line_buffer)$/;"	f	signature:(unsigned char *pixels, int stride_bytes, int width, int height, int y, int n, int filter_type, signed char *line_buffer)
stbiw__fopen	include/3rd_party/stb_image_write.h	/^static FILE *stbiw__fopen(char const *filename, char const *mode)$/;"	f	signature:(char const *filename, char const *mode)
stbiw__fopen	test/include/3rd_party/stb_image_write.h	/^static FILE *stbiw__fopen(char const *filename, char const *mode)$/;"	f	signature:(char const *filename, char const *mode)
stbiw__jpg_DCT	include/3rd_party/stb_image_write.h	/^static void stbiw__jpg_DCT(float *d0p, float *d1p, float *d2p, float *d3p, float *d4p, float *d5p, float *d6p, float *d7p) {$/;"	f	signature:(float *d0p, float *d1p, float *d2p, float *d3p, float *d4p, float *d5p, float *d6p, float *d7p)
stbiw__jpg_DCT	test/include/3rd_party/stb_image_write.h	/^static void stbiw__jpg_DCT(float *d0p, float *d1p, float *d2p, float *d3p, float *d4p, float *d5p, float *d6p, float *d7p) {$/;"	f	signature:(float *d0p, float *d1p, float *d2p, float *d3p, float *d4p, float *d5p, float *d6p, float *d7p)
stbiw__jpg_ZigZag	include/3rd_party/stb_image_write.h	/^static const unsigned char stbiw__jpg_ZigZag[] = { 0,1,5,6,14,15,27,28,2,4,7,13,16,26,29,42,3,8,12,17,25,30,41,43,9,11,18,$/;"	v
stbiw__jpg_ZigZag	test/include/3rd_party/stb_image_write.h	/^static const unsigned char stbiw__jpg_ZigZag[] = { 0,1,5,6,14,15,27,28,2,4,7,13,16,26,29,42,3,8,12,17,25,30,41,43,9,11,18,$/;"	v
stbiw__jpg_calcBits	include/3rd_party/stb_image_write.h	/^static void stbiw__jpg_calcBits(int val, unsigned short bits[2]) {$/;"	f	signature:(int val, unsigned short bits[2])
stbiw__jpg_calcBits	test/include/3rd_party/stb_image_write.h	/^static void stbiw__jpg_calcBits(int val, unsigned short bits[2]) {$/;"	f	signature:(int val, unsigned short bits[2])
stbiw__jpg_processDU	include/3rd_party/stb_image_write.h	/^static int stbiw__jpg_processDU(stbi__write_context *s, int *bitBuf, int *bitCnt, float *CDU, float *fdtbl, int DC, const unsigned short HTDC[256][2], const unsigned short HTAC[256][2]) {$/;"	f	signature:(stbi__write_context *s, int *bitBuf, int *bitCnt, float *CDU, float *fdtbl, int DC, const unsigned short HTDC[256][2], const unsigned short HTAC[256][2])
stbiw__jpg_processDU	test/include/3rd_party/stb_image_write.h	/^static int stbiw__jpg_processDU(stbi__write_context *s, int *bitBuf, int *bitCnt, float *CDU, float *fdtbl, int DC, const unsigned short HTDC[256][2], const unsigned short HTAC[256][2]) {$/;"	f	signature:(stbi__write_context *s, int *bitBuf, int *bitCnt, float *CDU, float *fdtbl, int DC, const unsigned short HTDC[256][2], const unsigned short HTAC[256][2])
stbiw__jpg_writeBits	include/3rd_party/stb_image_write.h	/^static void stbiw__jpg_writeBits(stbi__write_context *s, int *bitBufP, int *bitCntP, const unsigned short *bs) {$/;"	f	signature:(stbi__write_context *s, int *bitBufP, int *bitCntP, const unsigned short *bs)
stbiw__jpg_writeBits	test/include/3rd_party/stb_image_write.h	/^static void stbiw__jpg_writeBits(stbi__write_context *s, int *bitBufP, int *bitCntP, const unsigned short *bs) {$/;"	f	signature:(stbi__write_context *s, int *bitBufP, int *bitCntP, const unsigned short *bs)
stbiw__linear_to_rgbe	include/3rd_party/stb_image_write.h	/^static void stbiw__linear_to_rgbe(unsigned char *rgbe, float *linear)$/;"	f	signature:(unsigned char *rgbe, float *linear)
stbiw__linear_to_rgbe	test/include/3rd_party/stb_image_write.h	/^static void stbiw__linear_to_rgbe(unsigned char *rgbe, float *linear)$/;"	f	signature:(unsigned char *rgbe, float *linear)
stbiw__max	include/3rd_party/stb_image_write.h	600;"	d
stbiw__max	test/include/3rd_party/stb_image_write.h	600;"	d
stbiw__outfile	include/3rd_party/stb_image_write.h	/^static int stbiw__outfile(stbi__write_context *s, int rgb_dir, int vdir, int x, int y, int comp, int expand_mono, void *data, int alpha, int pad, const char *fmt, ...)$/;"	f	signature:(stbi__write_context *s, int rgb_dir, int vdir, int x, int y, int comp, int expand_mono, void *data, int alpha, int pad, const char *fmt, ...)
stbiw__outfile	test/include/3rd_party/stb_image_write.h	/^static int stbiw__outfile(stbi__write_context *s, int rgb_dir, int vdir, int x, int y, int comp, int expand_mono, void *data, int alpha, int pad, const char *fmt, ...)$/;"	f	signature:(stbi__write_context *s, int rgb_dir, int vdir, int x, int y, int comp, int expand_mono, void *data, int alpha, int pad, const char *fmt, ...)
stbiw__paeth	include/3rd_party/stb_image_write.h	/^static unsigned char stbiw__paeth(int a, int b, int c)$/;"	f	signature:(int a, int b, int c)
stbiw__paeth	test/include/3rd_party/stb_image_write.h	/^static unsigned char stbiw__paeth(int a, int b, int c)$/;"	f	signature:(int a, int b, int c)
stbiw__putc	include/3rd_party/stb_image_write.h	/^static void stbiw__putc(stbi__write_context *s, unsigned char c)$/;"	f	signature:(stbi__write_context *s, unsigned char c)
stbiw__putc	test/include/3rd_party/stb_image_write.h	/^static void stbiw__putc(stbi__write_context *s, unsigned char c)$/;"	f	signature:(stbi__write_context *s, unsigned char c)
stbiw__sbcount	include/3rd_party/stb_image_write.h	786;"	d
stbiw__sbcount	test/include/3rd_party/stb_image_write.h	786;"	d
stbiw__sbfree	include/3rd_party/stb_image_write.h	787;"	d
stbiw__sbfree	test/include/3rd_party/stb_image_write.h	787;"	d
stbiw__sbgrow	include/3rd_party/stb_image_write.h	783;"	d
stbiw__sbgrow	test/include/3rd_party/stb_image_write.h	783;"	d
stbiw__sbgrowf	include/3rd_party/stb_image_write.h	/^static void *stbiw__sbgrowf(void **arr, int increment, int itemsize)$/;"	f	signature:(void **arr, int increment, int itemsize)
stbiw__sbgrowf	test/include/3rd_party/stb_image_write.h	/^static void *stbiw__sbgrowf(void **arr, int increment, int itemsize)$/;"	f	signature:(void **arr, int increment, int itemsize)
stbiw__sbm	include/3rd_party/stb_image_write.h	778;"	d
stbiw__sbm	test/include/3rd_party/stb_image_write.h	778;"	d
stbiw__sbmaybegrow	include/3rd_party/stb_image_write.h	782;"	d
stbiw__sbmaybegrow	test/include/3rd_party/stb_image_write.h	782;"	d
stbiw__sbn	include/3rd_party/stb_image_write.h	779;"	d
stbiw__sbn	test/include/3rd_party/stb_image_write.h	779;"	d
stbiw__sbneedgrow	include/3rd_party/stb_image_write.h	781;"	d
stbiw__sbneedgrow	test/include/3rd_party/stb_image_write.h	781;"	d
stbiw__sbpush	include/3rd_party/stb_image_write.h	785;"	d
stbiw__sbpush	test/include/3rd_party/stb_image_write.h	785;"	d
stbiw__sbraw	include/3rd_party/stb_image_write.h	777;"	d
stbiw__sbraw	test/include/3rd_party/stb_image_write.h	777;"	d
stbiw__wp32	include/3rd_party/stb_image_write.h	1020;"	d
stbiw__wp32	test/include/3rd_party/stb_image_write.h	1020;"	d
stbiw__wpcrc	include/3rd_party/stb_image_write.h	/^static void stbiw__wpcrc(unsigned char **data, int len)$/;"	f	signature:(unsigned char **data, int len)
stbiw__wpcrc	test/include/3rd_party/stb_image_write.h	/^static void stbiw__wpcrc(unsigned char **data, int len)$/;"	f	signature:(unsigned char **data, int len)
stbiw__wpng4	include/3rd_party/stb_image_write.h	1019;"	d
stbiw__wpng4	test/include/3rd_party/stb_image_write.h	1019;"	d
stbiw__wptag	include/3rd_party/stb_image_write.h	1021;"	d
stbiw__wptag	test/include/3rd_party/stb_image_write.h	1021;"	d
stbiw__write3	include/3rd_party/stb_image_write.h	/^static void stbiw__write3(stbi__write_context *s, unsigned char a, unsigned char b, unsigned char c)$/;"	f	signature:(stbi__write_context *s, unsigned char a, unsigned char b, unsigned char c)
stbiw__write3	test/include/3rd_party/stb_image_write.h	/^static void stbiw__write3(stbi__write_context *s, unsigned char a, unsigned char b, unsigned char c)$/;"	f	signature:(stbi__write_context *s, unsigned char a, unsigned char b, unsigned char c)
stbiw__write_dump_data	include/3rd_party/stb_image_write.h	/^static void stbiw__write_dump_data(stbi__write_context *s, int length, unsigned char *data)$/;"	f	signature:(stbi__write_context *s, int length, unsigned char *data)
stbiw__write_dump_data	test/include/3rd_party/stb_image_write.h	/^static void stbiw__write_dump_data(stbi__write_context *s, int length, unsigned char *data)$/;"	f	signature:(stbi__write_context *s, int length, unsigned char *data)
stbiw__write_hdr_scanline	include/3rd_party/stb_image_write.h	/^static void stbiw__write_hdr_scanline(stbi__write_context *s, int width, int ncomp, unsigned char *scratch, float *scanline)$/;"	f	signature:(stbi__write_context *s, int width, int ncomp, unsigned char *scratch, float *scanline)
stbiw__write_hdr_scanline	test/include/3rd_party/stb_image_write.h	/^static void stbiw__write_hdr_scanline(stbi__write_context *s, int width, int ncomp, unsigned char *scratch, float *scanline)$/;"	f	signature:(stbi__write_context *s, int width, int ncomp, unsigned char *scratch, float *scanline)
stbiw__write_pixel	include/3rd_party/stb_image_write.h	/^static void stbiw__write_pixel(stbi__write_context *s, int rgb_dir, int comp, int write_alpha, int expand_mono, unsigned char *d)$/;"	f	signature:(stbi__write_context *s, int rgb_dir, int comp, int write_alpha, int expand_mono, unsigned char *d)
stbiw__write_pixel	test/include/3rd_party/stb_image_write.h	/^static void stbiw__write_pixel(stbi__write_context *s, int rgb_dir, int comp, int write_alpha, int expand_mono, unsigned char *d)$/;"	f	signature:(stbi__write_context *s, int rgb_dir, int comp, int write_alpha, int expand_mono, unsigned char *d)
stbiw__write_pixels	include/3rd_party/stb_image_write.h	/^static void stbiw__write_pixels(stbi__write_context *s, int rgb_dir, int vdir, int x, int y, int comp, void *data, int write_alpha, int scanline_pad, int expand_mono)$/;"	f	signature:(stbi__write_context *s, int rgb_dir, int vdir, int x, int y, int comp, void *data, int write_alpha, int scanline_pad, int expand_mono)
stbiw__write_pixels	test/include/3rd_party/stb_image_write.h	/^static void stbiw__write_pixels(stbi__write_context *s, int rgb_dir, int vdir, int x, int y, int comp, void *data, int write_alpha, int scanline_pad, int expand_mono)$/;"	f	signature:(stbi__write_context *s, int rgb_dir, int vdir, int x, int y, int comp, void *data, int write_alpha, int scanline_pad, int expand_mono)
stbiw__write_run_data	include/3rd_party/stb_image_write.h	/^static void stbiw__write_run_data(stbi__write_context *s, int length, unsigned char databyte)$/;"	f	signature:(stbi__write_context *s, int length, unsigned char databyte)
stbiw__write_run_data	test/include/3rd_party/stb_image_write.h	/^static void stbiw__write_run_data(stbi__write_context *s, int length, unsigned char databyte)$/;"	f	signature:(stbi__write_context *s, int length, unsigned char databyte)
stbiw__writef	include/3rd_party/stb_image_write.h	/^static void stbiw__writef(stbi__write_context *s, const char *fmt, ...)$/;"	f	signature:(stbi__write_context *s, const char *fmt, ...)
stbiw__writef	test/include/3rd_party/stb_image_write.h	/^static void stbiw__writef(stbi__write_context *s, const char *fmt, ...)$/;"	f	signature:(stbi__write_context *s, const char *fmt, ...)
stbiw__writefv	include/3rd_party/stb_image_write.h	/^static void stbiw__writefv(stbi__write_context *s, const char *fmt, va_list v)$/;"	f	signature:(stbi__write_context *s, const char *fmt, va_list v)
stbiw__writefv	test/include/3rd_party/stb_image_write.h	/^static void stbiw__writefv(stbi__write_context *s, const char *fmt, va_list v)$/;"	f	signature:(stbi__write_context *s, const char *fmt, va_list v)
stbiw__zhash	include/3rd_party/stb_image_write.h	/^static unsigned int stbiw__zhash(unsigned char *data)$/;"	f	signature:(unsigned char *data)
stbiw__zhash	test/include/3rd_party/stb_image_write.h	/^static unsigned int stbiw__zhash(unsigned char *data)$/;"	f	signature:(unsigned char *data)
stbiw__zlib_add	include/3rd_party/stb_image_write.h	843;"	d
stbiw__zlib_add	test/include/3rd_party/stb_image_write.h	843;"	d
stbiw__zlib_bitrev	include/3rd_party/stb_image_write.h	/^static int stbiw__zlib_bitrev(int code, int codebits)$/;"	f	signature:(int code, int codebits)
stbiw__zlib_bitrev	test/include/3rd_party/stb_image_write.h	/^static int stbiw__zlib_bitrev(int code, int codebits)$/;"	f	signature:(int code, int codebits)
stbiw__zlib_countm	include/3rd_party/stb_image_write.h	/^static unsigned int stbiw__zlib_countm(unsigned char *a, unsigned char *b, int limit)$/;"	f	signature:(unsigned char *a, unsigned char *b, int limit)
stbiw__zlib_countm	test/include/3rd_party/stb_image_write.h	/^static unsigned int stbiw__zlib_countm(unsigned char *a, unsigned char *b, int limit)$/;"	f	signature:(unsigned char *a, unsigned char *b, int limit)
stbiw__zlib_flush	include/3rd_party/stb_image_write.h	842;"	d
stbiw__zlib_flush	test/include/3rd_party/stb_image_write.h	842;"	d
stbiw__zlib_flushf	include/3rd_party/stb_image_write.h	/^static unsigned char *stbiw__zlib_flushf(unsigned char *data, unsigned int *bitbuffer, int *bitcount)$/;"	f	signature:(unsigned char *data, unsigned int *bitbuffer, int *bitcount)
stbiw__zlib_flushf	test/include/3rd_party/stb_image_write.h	/^static unsigned char *stbiw__zlib_flushf(unsigned char *data, unsigned int *bitbuffer, int *bitcount)$/;"	f	signature:(unsigned char *data, unsigned int *bitbuffer, int *bitcount)
stbiw__zlib_huff	include/3rd_party/stb_image_write.h	851;"	d
stbiw__zlib_huff	test/include/3rd_party/stb_image_write.h	851;"	d
stbiw__zlib_huff1	include/3rd_party/stb_image_write.h	847;"	d
stbiw__zlib_huff1	test/include/3rd_party/stb_image_write.h	847;"	d
stbiw__zlib_huff2	include/3rd_party/stb_image_write.h	848;"	d
stbiw__zlib_huff2	test/include/3rd_party/stb_image_write.h	848;"	d
stbiw__zlib_huff3	include/3rd_party/stb_image_write.h	849;"	d
stbiw__zlib_huff3	test/include/3rd_party/stb_image_write.h	849;"	d
stbiw__zlib_huff4	include/3rd_party/stb_image_write.h	850;"	d
stbiw__zlib_huff4	test/include/3rd_party/stb_image_write.h	850;"	d
stbiw__zlib_huffa	include/3rd_party/stb_image_write.h	845;"	d
stbiw__zlib_huffa	test/include/3rd_party/stb_image_write.h	845;"	d
stbiw__zlib_huffb	include/3rd_party/stb_image_write.h	852;"	d
stbiw__zlib_huffb	test/include/3rd_party/stb_image_write.h	852;"	d
stbiw_convert_wchar_to_utf8	include/3rd_party/stb_image_write.h	/^STBIWDEF int stbiw_convert_wchar_to_utf8(char *buffer, size_t bufferlen, const wchar_t* input)$/;"	f	signature:(char *buffer, size_t bufferlen, const wchar_t* input)
stbiw_convert_wchar_to_utf8	test/include/3rd_party/stb_image_write.h	/^STBIWDEF int stbiw_convert_wchar_to_utf8(char *buffer, size_t bufferlen, const wchar_t* input)$/;"	f	signature:(char *buffer, size_t bufferlen, const wchar_t* input)
stbiw_uint32	include/3rd_party/stb_image_write.h	/^typedef unsigned int stbiw_uint32;$/;"	t
stbiw_uint32	test/include/3rd_party/stb_image_write.h	/^typedef unsigned int stbiw_uint32;$/;"	t
step	include/3rd_party/stb_image.h	/^   int parse, step;$/;"	m	struct:__anon57	access:public
step	test/include/3rd_party/stb_image.h	/^   int parse, step;$/;"	m	struct:__anon26	access:public
stride	src/jz_aip_hal.h	/^	uint32_t		stride[2];$/;"	m	struct:aip_f_chaindesc	access:public
stride	src/jz_aip_hal.h	/^	uint32_t		stride[2];$/;"	m	struct:aip_t_chaindesc	access:public
succ_high	include/3rd_party/stb_image.h	/^   int            succ_high;$/;"	m	struct:__anon46	access:public
succ_high	test/include/3rd_party/stb_image.h	/^   int            succ_high;$/;"	m	struct:__anon15	access:public
succ_low	include/3rd_party/stb_image.h	/^   int            succ_low;$/;"	m	struct:__anon46	access:public
succ_low	test/include/3rd_party/stb_image.h	/^   int            succ_low;$/;"	m	struct:__anon15	access:public
suffix	include/3rd_party/stb_image.h	/^   stbi_uc suffix;$/;"	m	struct:__anon56	access:public
suffix	test/include/3rd_party/stb_image.h	/^   stbi_uc suffix;$/;"	m	struct:__anon25	access:public
sw	include/model/aip_p_mdl.h	/^    uint32_t                    sw; \/\/src width$/;"	m	struct:AIP_P_CFG_S	access:public
sw	test/include/model/aip_p_mdl.h	/^    uint32_t                    sw; \/\/src width$/;"	m	struct:AIP_P_CFG_S	access:public
t_ctrl	src/jz_aip_hal.h	/^	uint32_t		t_ctrl;$/;"	m	struct:aip_t_chainnode	access:public
t_ctrl	src/jz_aip_hal.h	/^	uint32_t		t_ctrl[2];$/;"	m	struct:aip_t_chaindesc	access:public
task_info_s	include/jz_aip/ingenic_aip.h	/^} task_info_s;$/;"	t	typeref:struct:__anon38
task_len	include/jz_aip/ingenic_aip.h	/^    uint32_t            task_len;$/;"	m	struct:__anon37	access:public
task_len	include/jz_aip/ingenic_aip.h	/^    uint32_t            task_len;$/;"	m	struct:__anon38	access:public
task_len	src/jz_aip_hal.h	/^	uint32_t		task_len;$/;"	m	struct:aip_t_chainnode	access:public
task_len	src/jz_aip_hal.h	/^	uint32_t		task_len[2];$/;"	m	struct:aip_t_chaindesc	access:public
task_skip_base	src/jz_aip_hal.h	/^	uint32_t		task_skip_base;$/;"	m	struct:aip_t_chainnode	access:public
task_skip_base	src/jz_aip_hal.h	/^	uint32_t		task_skip_base[2];$/;"	m	struct:aip_t_chaindesc	access:public
timeout	src/jz_aip_hal.h	/^	uint32_t		timeout[2];$/;"	m	struct:aip_f_chaindesc	access:public
timeout	src/jz_aip_hal.h	/^	uint32_t		timeout[2];$/;"	m	struct:aip_t_chaindesc	access:public
timeout	src/jz_aip_hal.h	/^	uint32_t	timeout[2];$/;"	m	struct:aip_p_chaindesc	access:public
todo	include/3rd_party/stb_image.h	/^   int restart_interval, todo;$/;"	m	struct:__anon46	access:public
todo	test/include/3rd_party/stb_image.h	/^   int restart_interval, todo;$/;"	m	struct:__anon15	access:public
top	include/3rd_party/Rect.h	/^    float top() const {$/;"	f	struct:CV::Rect	access:public	signature:() const
top	test/include/3rd_party/Rect.h	/^    float top() const {$/;"	f	struct:CV::Rect	access:public	signature:() const
tq	include/3rd_party/stb_image.h	/^      int tq;$/;"	m	struct:__anon46::__anon47	access:public
tq	test/include/3rd_party/stb_image.h	/^      int tq;$/;"	m	struct:__anon15::__anon16	access:public
trans_x	include/model/aip_f_mdl.h	/^	int32_t                     trans_x;$/;"	m	struct:__anon29	access:public
trans_x	src/jz_aip_hal.h	/^	int32_t			trans_x;$/;"	m	struct:aip_f_chainnode	access:public
trans_x	src/jz_aip_hal.h	/^	int32_t			trans_x[2];$/;"	m	struct:aip_f_chaindesc	access:public
trans_x	test/include/model/aip_f_mdl.h	/^	int32_t                     trans_x;$/;"	m	struct:__anon7	access:public
trans_y	include/model/aip_f_mdl.h	/^	int32_t                     trans_y;$/;"	m	struct:__anon29	access:public
trans_y	src/jz_aip_hal.h	/^	int32_t			trans_y;$/;"	m	struct:aip_f_chainnode	access:public
trans_y	src/jz_aip_hal.h	/^	int32_t			trans_y[2];$/;"	m	struct:aip_f_chaindesc	access:public
trans_y	test/include/model/aip_f_mdl.h	/^	int32_t                     trans_y;$/;"	m	struct:__anon7	access:public
transparent	include/3rd_party/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags;$/;"	m	struct:__anon57	access:public
transparent	test/include/3rd_party/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags;$/;"	m	struct:__anon26	access:public
type	include/3rd_party/stb_image.h	/^   stbi__uint32 type;$/;"	m	struct:__anon51	access:public
type	include/3rd_party/stb_image.h	/^   stbi_uc size,type,channel;$/;"	m	struct:__anon55	access:public
type	test/include/3rd_party/stb_image.h	/^   stbi__uint32 type;$/;"	m	struct:__anon20	access:public
type	test/include/3rd_party/stb_image.h	/^   stbi_uc size,type,channel;$/;"	m	struct:__anon24	access:public
uchar	include/model/mxu_types_c.h	/^typedef unsigned char uchar;$/;"	t
uchar	test/include/model/mxu_types_c.h	/^typedef unsigned char uchar;$/;"	t
uint16_t	include/model/bs_src.h	/^typedef u_int16_t uint16_t;$/;"	t
uint16_t	test/include/model/bs_src.h	/^typedef u_int16_t uint16_t;$/;"	t
uint32_t	include/model/bs_src.h	/^typedef u_int32_t uint32_t;$/;"	t
uint32_t	test/include/model/bs_src.h	/^typedef u_int32_t uint32_t;$/;"	t
uint8_t	include/model/bs_src.h	/^typedef u_int8_t uint8_t;$/;"	t
uint8_t	test/include/model/bs_src.h	/^typedef u_int8_t uint8_t;$/;"	t
updateTranslateMask	include/3rd_party/Matrix.h	/^    inline void updateTranslateMask() {$/;"	f	class:CV::Matrix	access:private	signature:()
updateTranslateMask	test/include/3rd_party/Matrix.h	/^    inline void updateTranslateMask() {$/;"	f	class:CV::Matrix	access:private	signature:()
v	include/3rd_party/stb_image.h	/^      int h,v;$/;"	m	struct:__anon46::__anon47	access:public
v	test/include/3rd_party/stb_image.h	/^      int h,v;$/;"	m	struct:__anon15::__anon16	access:public
vaddr	src/jz_aip_hal.h	/^	void *vaddr;$/;"	m	struct:jz_aip_chainbuf	access:public
validate_uint32	include/3rd_party/stb_image.h	/^typedef unsigned char validate_uint32[sizeof(stbi__uint32)==4 ? 1 : -1];$/;"	t
validate_uint32	test/include/3rd_party/stb_image.h	/^typedef unsigned char validate_uint32[sizeof(stbi__uint32)==4 ? 1 : -1];$/;"	t
value	include/3rd_party/stb_image.h	/^   stbi__uint16 value[288];$/;"	m	struct:__anon49	access:public
value	test/include/3rd_party/stb_image.h	/^   stbi__uint16 value[288];$/;"	m	struct:__anon18	access:public
values	include/3rd_party/stb_image.h	/^   stbi_uc  values[256];$/;"	m	struct:__anon45	access:public
values	test/include/3rd_party/stb_image.h	/^   stbi_uc  values[256];$/;"	m	struct:__anon14	access:public
virchn_info_s	include/jz_aip/ingenic_aip.h	/^} virchn_info_s;\/\/delete me$/;"	t	typeref:struct:__anon37
vs	include/3rd_party/stb_image.h	/^   int hs,vs;   \/\/ expansion factor in each axis$/;"	m	struct:__anon48	access:public
vs	test/include/3rd_party/stb_image.h	/^   int hs,vs;   \/\/ expansion factor in each axis$/;"	m	struct:__anon17	access:public
w	include/3rd_party/stb_image.h	/^   int w,h;$/;"	m	struct:__anon57	access:public
w	include/jz_aip/ingenic_aip.h	/^    int                 w;$/;"	m	struct:__anon30	access:public
w	test/include/3rd_party/stb_image.h	/^   int w,h;$/;"	m	struct:__anon26	access:public
w2	include/3rd_party/stb_image.h	/^      int x,y,w2,h2;$/;"	m	struct:__anon46::__anon47	access:public
w2	test/include/3rd_party/stb_image.h	/^      int x,y,w2,h2;$/;"	m	struct:__anon15::__anon16	access:public
w_lores	include/3rd_party/stb_image.h	/^   int w_lores; \/\/ horizontal pixels pre-expansion$/;"	m	struct:__anon48	access:public
w_lores	test/include/3rd_party/stb_image.h	/^   int w_lores; \/\/ horizontal pixels pre-expansion$/;"	m	struct:__anon17	access:public
warpAffine	test/model/bs_src.cc	/^int warpAffine(Mat_c src,Mat_c dst,double *M)$/;"	f	signature:(Mat_c src,Mat_c dst,double *M)
warpPerspective	test/model/bs_src.cc	/^int warpPerspective(Mat_c src,Mat_c dst,double *M)$/;"	f	signature:(Mat_c src,Mat_c dst,double *M)
width	include/3rd_party/Rect.h	/^    float width() const {$/;"	f	struct:CV::Rect	access:public	signature:() const
width	include/jz_aip/ingenic_aip.h	/^    int                 width;$/;"	m	struct:__anon36	access:public
width	test/include/3rd_party/Rect.h	/^    float width() const {$/;"	f	struct:CV::Rect	access:public	signature:() const
wrap	include/jz_aip/ingenic_aip.h	/^    uint32_t            wrap;$/;"	m	struct:__anon31	access:public
wrap	include/jz_aip/ingenic_aip.h	/^    uint32_t            wrap;$/;"	m	struct:__anon32	access:public
wrap	include/jz_aip/ingenic_aip.h	/^    uint32_t            wrap;$/;"	m	struct:__anon33	access:public
x	include/3rd_party/Rect.h	/^    float x() const {$/;"	f	struct:CV::Rect	access:public	signature:() const
x	include/3rd_party/stb_image.h	/^      int x,y,w2,h2;$/;"	m	struct:__anon46::__anon47	access:public
x	include/jz_aip/ingenic_aip.h	/^    int                 x;$/;"	m	struct:__anon30	access:public
x	test/include/3rd_party/Rect.h	/^    float x() const {$/;"	f	struct:CV::Rect	access:public	signature:() const
x	test/include/3rd_party/stb_image.h	/^      int x,y,w2,h2;$/;"	m	struct:__anon15::__anon16	access:public
y	include/3rd_party/Rect.h	/^    float y() const {$/;"	f	struct:CV::Rect	access:public	signature:() const
y	include/3rd_party/stb_image.h	/^      int x,y,w2,h2;$/;"	m	struct:__anon46::__anon47	access:public
y	include/jz_aip/ingenic_aip.h	/^    int                 y;$/;"	m	struct:__anon30	access:public
y	test/include/3rd_party/Rect.h	/^    float y() const {$/;"	f	struct:CV::Rect	access:public	signature:() const
y	test/include/3rd_party/stb_image.h	/^      int x,y,w2,h2;$/;"	m	struct:__anon15::__anon16	access:public
ypos	include/3rd_party/stb_image.h	/^   int ypos;    \/\/ which pre-expansion row we're on$/;"	m	struct:__anon48	access:public
ypos	test/include/3rd_party/stb_image.h	/^   int ypos;    \/\/ which pre-expansion row we're on$/;"	m	struct:__anon17	access:public
ystep	include/3rd_party/stb_image.h	/^   int ystep;   \/\/ how far through vertical expansion we are$/;"	m	struct:__anon48	access:public
ystep	test/include/3rd_party/stb_image.h	/^   int ystep;   \/\/ how far through vertical expansion we are$/;"	m	struct:__anon17	access:public
yuv2rgb	test/model/bs_src.cc	/^void yuv2rgb(uint8_t y, uint8_t u, uint8_t v,$/;"	f	signature:(uint8_t y, uint8_t u, uint8_t v, const uint32_t *coef, const uint8_t *offset, const uint8_t nv2bgr_alpha, bs_data_format_e order, uint8_t *rgba)
z_distance	include/3rd_party/stb_image.h	/^   stbi__zhuffman z_length, z_distance;$/;"	m	struct:__anon50	access:public
z_distance	test/include/3rd_party/stb_image.h	/^   stbi__zhuffman z_length, z_distance;$/;"	m	struct:__anon19	access:public
z_expandable	include/3rd_party/stb_image.h	/^   int   z_expandable;$/;"	m	struct:__anon50	access:public
z_expandable	test/include/3rd_party/stb_image.h	/^   int   z_expandable;$/;"	m	struct:__anon19	access:public
z_length	include/3rd_party/stb_image.h	/^   stbi__zhuffman z_length, z_distance;$/;"	m	struct:__anon50	access:public
z_length	test/include/3rd_party/stb_image.h	/^   stbi__zhuffman z_length, z_distance;$/;"	m	struct:__anon19	access:public
zbuffer	include/3rd_party/stb_image.h	/^   stbi_uc *zbuffer, *zbuffer_end;$/;"	m	struct:__anon50	access:public
zbuffer	test/include/3rd_party/stb_image.h	/^   stbi_uc *zbuffer, *zbuffer_end;$/;"	m	struct:__anon19	access:public
zbuffer_end	include/3rd_party/stb_image.h	/^   stbi_uc *zbuffer, *zbuffer_end;$/;"	m	struct:__anon50	access:public
zbuffer_end	test/include/3rd_party/stb_image.h	/^   stbi_uc *zbuffer, *zbuffer_end;$/;"	m	struct:__anon19	access:public
zero_point	include/jz_aip/ingenic_aip.h	/^    uint32_t            zero_point; \/\/ 3 chain$/;"	m	struct:__anon37	access:public
zero_point	include/jz_aip/ingenic_aip.h	/^    uint32_t            zero_point; \/\/ 3 chain$/;"	m	struct:__anon38	access:public
zero_point	include/jz_aip/ingenic_aip.h	/^    uint32_t            zero_point;$/;"	m	struct:__anon31	access:public
zero_point	include/jz_aip/ingenic_aip.h	/^    uint32_t            zero_point;$/;"	m	struct:__anon32	access:public
zero_point	include/jz_aip/ingenic_aip.h	/^    uint32_t            zero_point;$/;"	m	struct:__anon33	access:public
zout	include/3rd_party/stb_image.h	/^   char *zout;$/;"	m	struct:__anon50	access:public
zout	test/include/3rd_party/stb_image.h	/^   char *zout;$/;"	m	struct:__anon19	access:public
zout_end	include/3rd_party/stb_image.h	/^   char *zout_end;$/;"	m	struct:__anon50	access:public
zout_end	test/include/3rd_party/stb_image.h	/^   char *zout_end;$/;"	m	struct:__anon19	access:public
zout_start	include/3rd_party/stb_image.h	/^   char *zout_start;$/;"	m	struct:__anon50	access:public
zout_start	test/include/3rd_party/stb_image.h	/^   char *zout_start;$/;"	m	struct:__anon19	access:public
