./src/ingenic_aip.c:138:		src_base_y	= src->base;
./src/ingenic_aip.c:140:		if((BS_DATA_BGRA <= src->format) && (src->format <= BS_DATA_ARGB)) {
./src/ingenic_aip.c:141:			offset_y	= src->line_stride * y + x * 4;
./src/ingenic_aip.c:143:		} else if(src->format == BS_DATA_NV12) {
./src/ingenic_aip.c:144:			if(src->base1 == 0x0) {
./src/ingenic_aip.c:145:				src->base1 = src->base + src->width * src->height;
./src/ingenic_aip.c:147:				src->base1 = src->base1;
./src/ingenic_aip.c:149:			src_base_uv		= src->base1;
./src/ingenic_aip.c:150:			offset_y	= src->line_stride * y + x;
./src/ingenic_aip.c:151:			offset_uv	= src->line_stride * y / 2	+ x;
./src/ingenic_aip.c:153:		} else if(src->format == BS_DATA_UV) {
./src/ingenic_aip.c:154:			offset_y	= src->line_stride * y + x * 2;
./src/ingenic_aip.c:156:		} else if(src->format == BS_DATA_Y) {
./src/ingenic_aip.c:157:			offset_y	= src->line_stride * y + x;
./src/ingenic_aip.c:164:		node[i].src_stride	= src->line_stride;
./src/ingenic_aip.c:169:		node[i].src_width	= w;//src->width;
./src/ingenic_aip.c:170:		node[i].src_height	= h;//src->height;
./src/ingenic_aip.c:238:				printf("src->format type  error\n");
./src/ingenic_aip.c:241:		switch (src->locate) {
./src/ingenic_aip.c:246:				printf("src->locate type error\n");
./src/ingenic_aip.c:327:		src_base_y	= src->base;
./src/ingenic_aip.c:329:		if((BS_DATA_BGRA <= src->format) && (src->format <= BS_DATA_ARGB)) {
./src/ingenic_aip.c:330:			offset_y	= src->line_stride * y + x * 4;
./src/ingenic_aip.c:332:		} else if(src->format == BS_DATA_NV12) {
./src/ingenic_aip.c:333:			if(src->base1 == 0x0) {
./src/ingenic_aip.c:334:				   src->base1 = src->base + src->width * src->height;
./src/ingenic_aip.c:336:				   src->base1 = src->base1;
./src/ingenic_aip.c:338:			src_base_uv		= src->base1;
./src/ingenic_aip.c:339:			offset_y	= src->line_stride * y + x;
./src/ingenic_aip.c:340:			offset_uv	= src->line_stride * y / 2 + x;
./src/ingenic_aip.c:342:		} else if(src->format == BS_DATA_UV) {
./src/ingenic_aip.c:343:			offset_y	= src->line_stride * y + x * 2;
./src/ingenic_aip.c:345:		} else if(src->format == BS_DATA_Y) {
./src/ingenic_aip.c:346:			offset_y	= src->line_stride * y + x;
./src/ingenic_aip.c:353:		node[i].src_stride	= src->line_stride;
./src/ingenic_aip.c:358:		node[i].src_width	= w;//src->width;
./src/ingenic_aip.c:359:		node[i].src_height	= h;//src->height;
./src/ingenic_aip.c:432:				printf("src->format type  error\n");
./src/ingenic_aip.c:435:		switch (src->locate) {
./src/ingenic_aip.c:440:				printf("src->locate type error\n");
./src/ingenic_aip.c:495:	if(src->base1 == 0x0){
./src/ingenic_aip.c:496:		src->base1 = src->base + src->width * src->height;
./src/ingenic_aip.c:498:		src->base1 = src->base1;
./src/ingenic_aip.c:500:	src_base_y	= src->base;
./src/ingenic_aip.c:501:	src_base_uv = src->base1;
./src/ingenic_aip.c:507:	node->src_width		= src->width;
./src/ingenic_aip.c:508:	node->src_height	= src->height;
./src/ingenic_aip.c:509:	node->src_stride	= src->line_stride;
./src/ingenic_aip.c:526:			printf("src->format type  error\n");
./src/ingenic_aip.c:529:	switch (src->locate) {
./src/ingenic_aip.c:534:			printf("src->locate type error\n");
./src/ingenic_aip.c:632:		src_base_y = src->base;
./src/ingenic_aip.c:635:		if((BS_DATA_BGRA <= src->format) && (src->format <= BS_DATA_ARGB)) {
./src/ingenic_aip.c:636:			offset_y	= src->line_stride * y + x * 4;
./src/ingenic_aip.c:637:		} else if(src->format == BS_DATA_NV12) {
./src/ingenic_aip.c:638:			if(src->base1 == 0x0) {
./src/ingenic_aip.c:639:				   src->base1 = src->base + src->width * src->height;
./src/ingenic_aip.c:641:				   src->base1 = src->base1;
./src/ingenic_aip.c:643:			src_base_uv	= src->base1;
./src/ingenic_aip.c:645:			offset_y	= src->line_stride * y + x;
./src/ingenic_aip.c:646:			offset_uv	= src->line_stride * y / 2 + x;
./src/ingenic_aip.c:647:		} else if((src->format == BS_DATA_Y) || (src->format == BS_DATA_UV)) {
./src/ingenic_aip.c:648:			offset_y	= src->line_stride * y + x;
./src/ingenic_aip.c:649:		} else if(src->format == BS_DATA_FMU2) {
./src/ingenic_aip.c:650:			offset_y	= src->line_stride * y + 8 * x;
./src/ingenic_aip.c:651:		} else if(src->format == BS_DATA_FMU4) {
./src/ingenic_aip.c:652:			offset_y	= src->line_stride * y + 16 * x;
./src/ingenic_aip.c:653:		} else if(src->format == BS_DATA_FMU8) {
./src/ingenic_aip.c:654:			offset_y	= src->line_stride * y + 32 * x;
./src/ingenic_aip.c:655:		} else if(src->format == BS_DATA_FMU8_H) {
./src/ingenic_aip.c:656:			offset_y	= src->line_stride * y + 16 * x;
./src/ingenic_aip.c:667:		node[i].src_width	= w;//src->width;
./src/ingenic_aip.c:668:		node[i].src_height	= h;//src->height;
./src/ingenic_aip.c:672:		node[i].src_stride	= src->line_stride;
./src/ingenic_aip.c:675:	switch (src->format) {
./src/ingenic_aip.c:685:			printf("src->format type  error\n");
./src/ingenic_aip.c:689:	switch (src->locate) {
./src/ingenic_aip.c:694:			printf("src->locate type error\n");
./test/model/include/3rd_party/Matrix.cc:692://            dst->fX = src->fX + tx;
./test/model/include/3rd_party/Matrix.cc:693://            dst->fY = src->fY + ty;
./test/model/include/3rd_party/Matrix.cc:722://            dst->fX = src->fX * sx + tx;
./test/model/include/3rd_party/Matrix.cc:723://            dst->fY = src->fY * sy + ty;
./test/model/include/3rd_party/Matrix.cc:748:            float sy = src->fY;
./test/model/include/3rd_party/Matrix.cc:749:            float sx = src->fX;
./test/model/include/3rd_party/Matrix.cc:780://            dst->set(src->fX * sx + src->fY * kx + tx, src->fX * ky + src->fY * sy + ty);
./test/aip_perspective/aip_perspective_test.c:154:	src->base = __aie_get_ddr_paddr((uint32_t)src_base);
./test/aip_perspective/aip_perspective_test.c:155:	src->base1 = src->base + src_w * src_h;
./test/aip_perspective/aip_perspective_test.c:156:	src->format = format;
./test/aip_perspective/aip_perspective_test.c:157:	src->width = src_w;
./test/aip_perspective/aip_perspective_test.c:158:	src->height = src_h;
./test/aip_perspective/aip_perspective_test.c:159:	src->line_stride = src_stride;
./test/aip_perspective/aip_perspective_test.c:160:	src->locate = BS_DATA_RMEM;
./test/aip_resize/aip_resize_test.c:182:		src->base = __aie_get_ddr_paddr((uint32_t)src_base);
./test/aip_resize/aip_resize_test.c:183:		src->base1 = src->base + src_w * src_h;
./test/aip_resize/aip_resize_test.c:184:		src->format = format;
./test/aip_resize/aip_resize_test.c:185:		src->width = src_w;
./test/aip_resize/aip_resize_test.c:186:		src->height = src_h;
./test/aip_resize/aip_resize_test.c:187:		src->line_stride = src_stride;
./test/aip_resize/aip_resize_test.c:188:		src->locate = BS_DATA_NMEM;
./test/aip_resize/aip_resize_test.c:313:		src->base = __aie_get_ddr_paddr((uint32_t)src_base);
./test/aip_resize/aip_resize_test.c:314:		src->base1 = src->base + src_w * src_h;
./test/aip_resize/aip_resize_test.c:315:		src->format = format;
./test/aip_resize/aip_resize_test.c:316:		src->width = src_w;
./test/aip_resize/aip_resize_test.c:317:		src->height = src_h;
./test/aip_resize/aip_resize_test.c:318:		src->line_stride = src_stride;
./test/aip_resize/aip_resize_test.c:319:		src->locate = BS_DATA_RMEM;
./test/aip_resize/aip_resize_test.c:437:		src->base = __aie_get_ddr_paddr((uint32_t)src_base);
./test/aip_resize/aip_resize_test.c:438:		src->base1 = src->base + src_w * src_h;
./test/aip_resize/aip_resize_test.c:439:		src->format = format;
./test/aip_resize/aip_resize_test.c:440:		src->width = src_w;
./test/aip_resize/aip_resize_test.c:441:		src->height = src_h;
./test/aip_resize/aip_resize_test.c:442:		src->line_stride = src_stride;
./test/aip_resize/aip_resize_test.c:443:		src->locate = BS_DATA_RMEM;
./test/aip_affine/aip_affine_test.c:152:		src->base = __aie_get_ddr_paddr((uint32_t)src_base);
./test/aip_affine/aip_affine_test.c:153:		src->base1 = src->base + src_w * src_h;
./test/aip_affine/aip_affine_test.c:154:		src->format = format;
./test/aip_affine/aip_affine_test.c:155:		src->width = src_w;
./test/aip_affine/aip_affine_test.c:156:		src->height = src_h;
./test/aip_affine/aip_affine_test.c:157:		src->line_stride = src_stride;
./test/aip_affine/aip_affine_test.c:158:		src->locate = BS_DATA_RMEM;
./test/aip_covent/aip_covent_test.c:116:	src->base = __aie_get_ddr_paddr((uint32_t)src_base);
./test/aip_covent/aip_covent_test.c:117:	src->base1 = src->base + src_w * src_h;
./test/aip_covent/aip_covent_test.c:118:	src->format = BS_DATA_NV12;
./test/aip_covent/aip_covent_test.c:119:	src->width = src_w;
./test/aip_covent/aip_covent_test.c:120:	src->height = src_h;
./test/aip_covent/aip_covent_test.c:121:	src->line_stride = src_w;
./test/aip_covent/aip_covent_test.c:122:	src->locate = BS_DATA_RMEM;
./test2/model/include/3rd_party/Matrix.cc:692://            dst->fX = src->fX + tx;
./test2/model/include/3rd_party/Matrix.cc:693://            dst->fY = src->fY + ty;
./test2/model/include/3rd_party/Matrix.cc:722://            dst->fX = src->fX * sx + tx;
./test2/model/include/3rd_party/Matrix.cc:723://            dst->fY = src->fY * sy + ty;
./test2/model/include/3rd_party/Matrix.cc:748:            float sy = src->fY;
./test2/model/include/3rd_party/Matrix.cc:749:            float sx = src->fX;
./test2/model/include/3rd_party/Matrix.cc:780://            dst->set(src->fX * sx + src->fY * kx + tx, src->fX * ky + src->fY * sy + ty);
./test2/aip_box_num/aip_test.c:141:        src->base = __aie_get_ddr_paddr((uint32_t)src_base);
./test2/aip_box_num/aip_test.c:142:        src->base1 = src->base + src_w * src_h;
./test2/aip_box_num/aip_test.c:143:        src->format = format;
./test2/aip_box_num/aip_test.c:144:        src->width = src_w;
./test2/aip_box_num/aip_test.c:145:        src->height = src_h;
./test2/aip_box_num/aip_test.c:146:        src->line_stride = src_stride;
./test2/aip_box_num/aip_test.c:147:        src->locate = BS_DATA_NMEM;
./test2/aip_convert_demo/aip_convert_demo.c:71:	src->base = __aie_get_ddr_paddr((uint32_t)src_base);
./test2/aip_convert_demo/aip_convert_demo.c:72:	src->base1 = src->base + src_w * src_h;
./test2/aip_convert_demo/aip_convert_demo.c:73:	src->format = BS_DATA_NV12;
./test2/aip_convert_demo/aip_convert_demo.c:74:	src->width = src_w;
./test2/aip_convert_demo/aip_convert_demo.c:75:	src->height = src_h;
./test2/aip_convert_demo/aip_convert_demo.c:76:	src->line_stride = src_w;
./test2/aip_convert_demo/aip_convert_demo.c:77:	src->locate = BS_DATA_RMEM;
./test2/aip_resize_demo/backup/test0310/aip_resize_demo.c.2:191:        src->base = __aie_get_ddr_paddr((uint32_t)src_base);
./test2/aip_resize_demo/backup/test0310/aip_resize_demo.c.2:192:        src->base1 = src->base + src_w * src_h;
./test2/aip_resize_demo/backup/test0310/aip_resize_demo.c.2:193:        src->format = format;
./test2/aip_resize_demo/backup/test0310/aip_resize_demo.c.2:194:        src->width = src_w;
./test2/aip_resize_demo/backup/test0310/aip_resize_demo.c.2:195:        src->height = src_h;
./test2/aip_resize_demo/backup/test0310/aip_resize_demo.c.2:196:        src->line_stride = src_stride;
./test2/aip_resize_demo/backup/test0310/aip_resize_demo.c.2:197:        src->locate = BS_DATA_NMEM;
./test2/aip_resize_demo/backup/test0310/aip_resize_demo.c.4:133:        src->base = __aie_get_ddr_paddr((uint32_t)src_base);
./test2/aip_resize_demo/backup/test0310/aip_resize_demo.c.4:134:        src->base1 = src->base + src_w * src_h;
./test2/aip_resize_demo/backup/test0310/aip_resize_demo.c.4:135:        src->format = format;
./test2/aip_resize_demo/backup/test0310/aip_resize_demo.c.4:136:        src->width = src_w;
./test2/aip_resize_demo/backup/test0310/aip_resize_demo.c.4:137:        src->height = src_h;
./test2/aip_resize_demo/backup/test0310/aip_resize_demo.c.4:138:        src->line_stride = src_stride;
./test2/aip_resize_demo/backup/test0310/aip_resize_demo.c.4:139:        src->locate = BS_DATA_NMEM;
./test2/aip_resize_demo/backup/test0310/aip_resize_demo.c.3nobw:138:        src->base = __aie_get_ddr_paddr((uint32_t)src_base);
./test2/aip_resize_demo/backup/test0310/aip_resize_demo.c.3nobw:139:        src->base1 = src->base + src_w * src_h;
./test2/aip_resize_demo/backup/test0310/aip_resize_demo.c.3nobw:140:        src->format = format;
./test2/aip_resize_demo/backup/test0310/aip_resize_demo.c.3nobw:141:        src->width = src_w;
./test2/aip_resize_demo/backup/test0310/aip_resize_demo.c.3nobw:142:        src->height = src_h;
./test2/aip_resize_demo/backup/test0310/aip_resize_demo.c.3nobw:143:        src->line_stride = src_stride;
./test2/aip_resize_demo/backup/test0310/aip_resize_demo.c.3nobw:144:        src->locate = BS_DATA_NMEM;
./test2/aip_resize_demo/backup/test0310/aip_resize_demo.c.3:148:        src->base = __aie_get_ddr_paddr((uint32_t)src_base);
./test2/aip_resize_demo/backup/test0310/aip_resize_demo.c.3:149:        src->base1 = src->base + src_w * src_h;
./test2/aip_resize_demo/backup/test0310/aip_resize_demo.c.3:150:        src->format = format;
./test2/aip_resize_demo/backup/test0310/aip_resize_demo.c.3:151:        src->width = src_w;
./test2/aip_resize_demo/backup/test0310/aip_resize_demo.c.3:152:        src->height = src_h;
./test2/aip_resize_demo/backup/test0310/aip_resize_demo.c.3:153:        src->line_stride = src_stride;
./test2/aip_resize_demo/backup/test0310/aip_resize_demo.c.3:154:        src->locate = BS_DATA_NMEM;
./test2/aip_resize_demo/backup/test0310/aip_resize_demo.c:133:        src->base = __aie_get_ddr_paddr((uint32_t)src_base);
./test2/aip_resize_demo/backup/test0310/aip_resize_demo.c:134:        src->base1 = src->base + src_w * src_h;
./test2/aip_resize_demo/backup/test0310/aip_resize_demo.c:135:        src->format = format;
./test2/aip_resize_demo/backup/test0310/aip_resize_demo.c:136:        src->width = src_w;
./test2/aip_resize_demo/backup/test0310/aip_resize_demo.c:137:        src->height = src_h;
./test2/aip_resize_demo/backup/test0310/aip_resize_demo.c:138:        src->line_stride = src_stride;
./test2/aip_resize_demo/backup/test0310/aip_resize_demo.c:139:        src->locate = BS_DATA_NMEM;
./test2/aip_resize_demo/backup/test0310/aip_resize_demo.c.6chain_num:133:        src->base = __aie_get_ddr_paddr((uint32_t)src_base);
./test2/aip_resize_demo/backup/test0310/aip_resize_demo.c.6chain_num:134:        src->base1 = src->base + src_w * src_h;
./test2/aip_resize_demo/backup/test0310/aip_resize_demo.c.6chain_num:135:        src->format = format;
./test2/aip_resize_demo/backup/test0310/aip_resize_demo.c.6chain_num:136:        src->width = src_w;
./test2/aip_resize_demo/backup/test0310/aip_resize_demo.c.6chain_num:137:        src->height = src_h;
./test2/aip_resize_demo/backup/test0310/aip_resize_demo.c.6chain_num:138:        src->line_stride = src_stride;
./test2/aip_resize_demo/backup/test0310/aip_resize_demo.c.6chain_num:139:        src->locate = BS_DATA_NMEM;
./test2/aip_resize_demo/backup/test0310/aip_resize_demo.c.5:134:        src->base = __aie_get_ddr_paddr((uint32_t)src_base);
./test2/aip_resize_demo/backup/test0310/aip_resize_demo.c.5:135:        src->base1 = src->base + src_w * src_h;
./test2/aip_resize_demo/backup/test0310/aip_resize_demo.c.5:136:        src->format = format;
./test2/aip_resize_demo/backup/test0310/aip_resize_demo.c.5:137:        src->width = src_w;
./test2/aip_resize_demo/backup/test0310/aip_resize_demo.c.5:138:        src->height = src_h;
./test2/aip_resize_demo/backup/test0310/aip_resize_demo.c.5:139:        src->line_stride = src_stride;
./test2/aip_resize_demo/backup/test0310/aip_resize_demo.c.5:140:        src->locate = BS_DATA_NMEM;
./test2/aip_resize_demo/backup/aip_test.c.0407ori:148:        src->base = __aie_get_ddr_paddr((uint32_t)src_base);
./test2/aip_resize_demo/backup/aip_test.c.0407ori:149:        src->base1 = src->base + src_w * src_h;
./test2/aip_resize_demo/backup/aip_test.c.0407ori:150:        src->format = format;
./test2/aip_resize_demo/backup/aip_test.c.0407ori:151:        src->width = src_w;
./test2/aip_resize_demo/backup/aip_test.c.0407ori:152:        src->height = src_h;
./test2/aip_resize_demo/backup/aip_test.c.0407ori:153:        src->line_stride = src_stride;
./test2/aip_resize_demo/backup/aip_test.c.0407ori:154:        src->locate = BS_DATA_NMEM;
./test2/aip_resize_demo/aip_resize_demo.c:146:        src->base = __aie_get_ddr_paddr((uint32_t)src_base);
./test2/aip_resize_demo/aip_resize_demo.c:147:        src->base1 = src->base + src_w * src_h;
./test2/aip_resize_demo/aip_resize_demo.c:148:        src->format = format;
./test2/aip_resize_demo/aip_resize_demo.c:149:        src->width = src_w;
./test2/aip_resize_demo/aip_resize_demo.c:150:        src->height = src_h;
./test2/aip_resize_demo/aip_resize_demo.c:151:        src->line_stride = src_stride;
./test2/aip_resize_demo/aip_resize_demo.c:152:        src->locate = BS_DATA_NMEM;
./test2/aip_test/backup/test0310/aip_resize_demo.c.2:191:        src->base = __aie_get_ddr_paddr((uint32_t)src_base);
./test2/aip_test/backup/test0310/aip_resize_demo.c.2:192:        src->base1 = src->base + src_w * src_h;
./test2/aip_test/backup/test0310/aip_resize_demo.c.2:193:        src->format = format;
./test2/aip_test/backup/test0310/aip_resize_demo.c.2:194:        src->width = src_w;
./test2/aip_test/backup/test0310/aip_resize_demo.c.2:195:        src->height = src_h;
./test2/aip_test/backup/test0310/aip_resize_demo.c.2:196:        src->line_stride = src_stride;
./test2/aip_test/backup/test0310/aip_resize_demo.c.2:197:        src->locate = BS_DATA_NMEM;
./test2/aip_test/backup/test0310/aip_resize_demo.c.4:133:        src->base = __aie_get_ddr_paddr((uint32_t)src_base);
./test2/aip_test/backup/test0310/aip_resize_demo.c.4:134:        src->base1 = src->base + src_w * src_h;
./test2/aip_test/backup/test0310/aip_resize_demo.c.4:135:        src->format = format;
./test2/aip_test/backup/test0310/aip_resize_demo.c.4:136:        src->width = src_w;
./test2/aip_test/backup/test0310/aip_resize_demo.c.4:137:        src->height = src_h;
./test2/aip_test/backup/test0310/aip_resize_demo.c.4:138:        src->line_stride = src_stride;
./test2/aip_test/backup/test0310/aip_resize_demo.c.4:139:        src->locate = BS_DATA_NMEM;
./test2/aip_test/backup/test0310/aip_resize_demo.c.3nobw:138:        src->base = __aie_get_ddr_paddr((uint32_t)src_base);
./test2/aip_test/backup/test0310/aip_resize_demo.c.3nobw:139:        src->base1 = src->base + src_w * src_h;
./test2/aip_test/backup/test0310/aip_resize_demo.c.3nobw:140:        src->format = format;
./test2/aip_test/backup/test0310/aip_resize_demo.c.3nobw:141:        src->width = src_w;
./test2/aip_test/backup/test0310/aip_resize_demo.c.3nobw:142:        src->height = src_h;
./test2/aip_test/backup/test0310/aip_resize_demo.c.3nobw:143:        src->line_stride = src_stride;
./test2/aip_test/backup/test0310/aip_resize_demo.c.3nobw:144:        src->locate = BS_DATA_NMEM;
./test2/aip_test/backup/test0310/aip_resize_demo.c.3:148:        src->base = __aie_get_ddr_paddr((uint32_t)src_base);
./test2/aip_test/backup/test0310/aip_resize_demo.c.3:149:        src->base1 = src->base + src_w * src_h;
./test2/aip_test/backup/test0310/aip_resize_demo.c.3:150:        src->format = format;
./test2/aip_test/backup/test0310/aip_resize_demo.c.3:151:        src->width = src_w;
./test2/aip_test/backup/test0310/aip_resize_demo.c.3:152:        src->height = src_h;
./test2/aip_test/backup/test0310/aip_resize_demo.c.3:153:        src->line_stride = src_stride;
./test2/aip_test/backup/test0310/aip_resize_demo.c.3:154:        src->locate = BS_DATA_NMEM;
./test2/aip_test/backup/test0310/aip_resize_demo.c:133:        src->base = __aie_get_ddr_paddr((uint32_t)src_base);
./test2/aip_test/backup/test0310/aip_resize_demo.c:134:        src->base1 = src->base + src_w * src_h;
./test2/aip_test/backup/test0310/aip_resize_demo.c:135:        src->format = format;
./test2/aip_test/backup/test0310/aip_resize_demo.c:136:        src->width = src_w;
./test2/aip_test/backup/test0310/aip_resize_demo.c:137:        src->height = src_h;
./test2/aip_test/backup/test0310/aip_resize_demo.c:138:        src->line_stride = src_stride;
./test2/aip_test/backup/test0310/aip_resize_demo.c:139:        src->locate = BS_DATA_NMEM;
./test2/aip_test/backup/test0310/aip_resize_demo.c.6chain_num:133:        src->base = __aie_get_ddr_paddr((uint32_t)src_base);
./test2/aip_test/backup/test0310/aip_resize_demo.c.6chain_num:134:        src->base1 = src->base + src_w * src_h;
./test2/aip_test/backup/test0310/aip_resize_demo.c.6chain_num:135:        src->format = format;
./test2/aip_test/backup/test0310/aip_resize_demo.c.6chain_num:136:        src->width = src_w;
./test2/aip_test/backup/test0310/aip_resize_demo.c.6chain_num:137:        src->height = src_h;
./test2/aip_test/backup/test0310/aip_resize_demo.c.6chain_num:138:        src->line_stride = src_stride;
./test2/aip_test/backup/test0310/aip_resize_demo.c.6chain_num:139:        src->locate = BS_DATA_NMEM;
./test2/aip_test/backup/test0310/aip_resize_demo.c.5:134:        src->base = __aie_get_ddr_paddr((uint32_t)src_base);
./test2/aip_test/backup/test0310/aip_resize_demo.c.5:135:        src->base1 = src->base + src_w * src_h;
./test2/aip_test/backup/test0310/aip_resize_demo.c.5:136:        src->format = format;
./test2/aip_test/backup/test0310/aip_resize_demo.c.5:137:        src->width = src_w;
./test2/aip_test/backup/test0310/aip_resize_demo.c.5:138:        src->height = src_h;
./test2/aip_test/backup/test0310/aip_resize_demo.c.5:139:        src->line_stride = src_stride;
./test2/aip_test/backup/test0310/aip_resize_demo.c.5:140:        src->locate = BS_DATA_NMEM;
./test2/aip_test/backup/test0310/aip_test.c.test0403_chain_num:140:        src->base = __aie_get_ddr_paddr((uint32_t)src_base);
./test2/aip_test/backup/test0310/aip_test.c.test0403_chain_num:141:        src->base1 = src->base + src_w * src_h;
./test2/aip_test/backup/test0310/aip_test.c.test0403_chain_num:142:        src->format = format;
./test2/aip_test/backup/test0310/aip_test.c.test0403_chain_num:143:        src->width = src_w;
./test2/aip_test/backup/test0310/aip_test.c.test0403_chain_num:144:        src->height = src_h;
./test2/aip_test/backup/test0310/aip_test.c.test0403_chain_num:145:        src->line_stride = src_stride;
./test2/aip_test/backup/test0310/aip_test.c.test0403_chain_num:146:        src->locate = BS_DATA_NMEM;
./test2/aip_test/backup/test0407/aip_test.c.0407ori:141:        src->base = __aie_get_ddr_paddr((uint32_t)src_base);
./test2/aip_test/backup/test0407/aip_test.c.0407ori:142:        src->base1 = src->base + src_w * src_h;
./test2/aip_test/backup/test0407/aip_test.c.0407ori:143:        src->format = format;
./test2/aip_test/backup/test0407/aip_test.c.0407ori:144:        src->width = src_w;
./test2/aip_test/backup/test0407/aip_test.c.0407ori:145:        src->height = src_h;
./test2/aip_test/backup/test0407/aip_test.c.0407ori:146:        src->line_stride = src_stride;
./test2/aip_test/backup/test0407/aip_test.c.0407ori:147:        src->locate = BS_DATA_NMEM;
./test2/aip_test/aip_test.c:141:        src->base = __aie_get_ddr_paddr((uint32_t)src_base);
./test2/aip_test/aip_test.c:142:        src->base1 = src->base + src_w * src_h;
./test2/aip_test/aip_test.c:143:        src->format = format;
./test2/aip_test/aip_test.c:144:        src->width = src_w;
./test2/aip_test/aip_test.c:145:        src->height = src_h;
./test2/aip_test/aip_test.c:146:        src->line_stride = src_stride;
./test2/aip_test/aip_test.c:147:        src->locate = BS_DATA_NMEM;
./test2/aip_v20test/backup/aipv20_test.c.0412test2:94:	//src->base = __aie_get_ddr_paddr((uint32_t)src_base);
./test2/aip_v20test/backup/aipv20_test.c.0412test2:95:	//src->base1 = src->base + src_w * src_h;
./test2/aip_v20test/backup/aipv20_test.c.0412test2:109:	if(src->base1 == 0x0) {
./test2/aip_v20test/backup/aipv20_test.c.0412test2:110:            src->base1 = src->base + src->width * src->height;
./test2/aip_v20test/backup/aipv20_test.c.0412test2:112:            src->base1 = src->base1;
./test2/aip_v20test/backup/aipv20_test.c.0414test2:113:	//src->base = __aie_get_ddr_paddr((uint32_t)src_base);
./test2/aip_v20test/backup/aipv20_test.c.0414test2:114:	//src->base1 = src->base + src_w * src_h;
./test2/aip_v20test/backup/aipv20_test.c.0412test1:198:        src->base = __aie_get_ddr_paddr((uint32_t)src_base);
./test2/aip_v20test/backup/aipv20_test.c.0412test1:199:        src->base1 = src->base + src_w * src_h;
./test2/aip_v20test/backup/aipv20_test.c.0412test1:200:        src->format = format;
./test2/aip_v20test/backup/aipv20_test.c.0412test1:201:        src->width = src_w;
./test2/aip_v20test/backup/aipv20_test.c.0412test1:202:        src->height = src_h;
./test2/aip_v20test/backup/aipv20_test.c.0412test1:203:        src->line_stride = src_stride;
./test2/aip_v20test/backup/aipv20_test.c.0412test1:204:        src->locate = BS_DATA_NMEM;
./test2/aip_v20test/backup/aipv20_test.c.0414test1:111:	//src->base = __aie_get_ddr_paddr((uint32_t)src_base);
./test2/aip_v20test/backup/aipv20_test.c.0414test1:112:	//src->base1 = src->base + src_w * src_h;
